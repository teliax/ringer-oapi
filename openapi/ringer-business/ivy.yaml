openapi: 3.0.3
info:
  title: Ringer Business API
  description: |
    This API provides comprehensive endpoints for the Ringer Business system.
    It includes functionality for managing customer accounts, addresses, sites, 
    phone numbers, payments, users, and other business resources.

    Operations typically require authentication and appropriate permissions.
  version: 1.0.2
  license:
    name: MIT License
    url: https://github.com/teliax/ringer-oapi/blob/main/LICENSE
  contact:
    name: Ringer API Support
    url: https://docs.ringer.tel/support
    email: support@ringer.tel
servers:
  - url: https://api.ringer.tel/v1
    description: Production server
  - url: https://api.staging.ringer.tel/v1
    description: Staging server
tags:
  - name: Accounts
    description: Endpoints for managing customer accounts and their associated details.
  - name: Addresses
    description: Endpoints for managing address records.
  - name: Authentication
    description: Authentication and authorization endpoints.
  - name: Call Blocks
    description: Manage call blocking rules and settings.
  - name: Call Records
    description: Access and manage call history and records.
  - name: Country Codes
    description: Information about country codes and dialing prefixes.
  - name: Credit Cards
    description: Manage credit card payment methods.
  - name: Items
    description: Manage inventory and service items.
  - name: Packages
    description: Manage service packages and bundles.
  - name: Payments
    description: Process and manage payments and transactions.
  - name: Phone Numbers
    description: Manage phone numbers and associated services.
  - name: Plans
    description: Manage service plans and subscription options.
  - name: Sites
    description: Manage customer sites and associated resources.
  - name: Statements
    description: Access and manage billing statements.
  - name: Templates
    description: Manage templates for various system components.
  - name: Thin Clients
    description: Manage thin client devices and configurations.
  - name: Timezones
    description: Access timezone information and settings.
  - name: Users
    description: Manage users and their permissions.
paths:
  /account:
    get:
      tags:
        - Accounts
      summary: Get Current Account Details
      description: |
        Retrieves detailed information about the authenticated user's account.
        The level of detail and available actions might differ based on the user's role (e.g., administrator vs. regular user).
      operationId: getAccountDetails
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Successfully retrieved account details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
              example:
                id: 101
                name: Innovatech Solutions Ltd.
                status: active
                plan: enterprise_annual_v2
                email: billing@innovatech.com
                phone: '+14155550100'
                created_at: '2023-01-15T10:30:00Z'
                locale: en-US
                balance: '4276.85'
                balance_preference_in_dollars: '100.00'
                recharge_preference_in_dollars: '200.00'
                maximum_recharge_preference_in_dollars: '1000.00'
                international_enabled: true
                current_user:
                  id: 5
                  first_name: Jane
                  last_name: Doe
                  email: jane.doe@innovatech.com
                  role: administrator
                address:
                  id: 25
                  email: billing@innovatech.com
                  street_address: 123 Tech Park, Suite 100
                  country: US
                  city: San Francisco
                  state_province: CA
                  postal_code: '94107'
                  contact_number: '+14155550100'
                links:
                  - href: /account
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/responses-ForbiddenError'
    put:
      tags:
        - Accounts
      summary: Update Current Account Information
      description: |
        Updates information for the authenticated user's account.
        Certain fields may only be modifiable by users with an administrator role.
      operationId: updateAccount
      security:
        - oAuth2:
            - write
      requestBody:
        description: Account attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateRequest'
            example:
              name: Innovatech Global Solutions Ltd.
              locale: en-GB
              balance_preference_in_dollars: '150.00'
              recharge_preference_in_dollars: '250.00'
              maximum_recharge_preference_in_dollars: '1500.00'
      responses:
        '200':
          description: Account updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
              example:
                id: 101
                name: Innovatech Global Solutions Ltd.
                status: active
                plan: enterprise_annual_v2
                email: billing@innovatech.com
                phone: '+14155550100'
                created_at: '2023-01-15T10:30:00Z'
                locale: en-GB
                balance: '4026.85'
                balance_preference_in_dollars: '150.00'
                recharge_preference_in_dollars: '250.00'
                maximum_recharge_preference_in_dollars: '1500.00'
                international_enabled: true
                current_user:
                  id: 5
                  first_name: Jane
                  last_name: Doe
                  email: jane.doe@innovatech.com
                  role: administrator
                address:
                  id: 25
                  email: billing@innovatech.com
                  street_address: 123 Tech Park, Suite 100
                  country: US
                  city: San Francisco
                  state_province: CA
                  postal_code: '94107'
                  contact_number: '+14155550100'
                links:
                  - href: /account
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/responses-BadRequestError'
        '401':
          $ref: '#/components/responses/responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/responses-NotFoundError'
    patch:
      tags:
        - Accounts
      summary: Activate Current Account
      description: |
        Activates an inactive account, making it operational.
        This operation is typically restricted to users with an administrator role and can only be performed on accounts that are currently inactive and ready for activation (e.g., after confirmation and initial setup).
      operationId: activateAccount
      security:
        - oAuth2:
            - write
            - admin
      responses:
        '200':
          description: Account activated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
              example:
                id: 101
                name: Innovatech Global Solutions Ltd.
                status: active
                plan: enterprise_annual_v2
                email: billing@innovatech.com
                phone: '+14155550100'
                created_at: '2023-01-15T10:30:00Z'
                locale: en-GB
                balance: '4026.85'
                balance_preference_in_dollars: '150.00'
                recharge_preference_in_dollars: '250.00'
                maximum_recharge_preference_in_dollars: '1500.00'
                international_enabled: true
                current_user:
                  id: 5
                  first_name: Jane
                  last_name: Doe
                  email: jane.doe@innovatech.com
                  role: administrator
                address:
                  id: 25
                  email: billing@innovatech.com
                  street_address: 123 Tech Park, Suite 100
                  country: US
                  city: San Francisco
                  state_province: CA
                  postal_code: '94107'
                  contact_number: '+14155550100'
                links:
                  - href: /account
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/responses-BadRequestError'
        '401':
          $ref: '#/components/responses/responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/responses-NotFoundError'
    delete:
      tags:
        - Accounts
      summary: Close Current Account
      description: |
        Closes the authenticated user's account.
        This action is typically permanent and may have prerequisites (e.g., settling outstanding balances).
        Restricted to users with an administrator role.
      operationId: closeAccount
      security:
        - oAuth2:
            - write
            - admin
      responses:
        '204':
          description: Account closed successfully. No content is returned.
        '400':
          $ref: '#/components/responses/responses-BadRequestError'
        '401':
          $ref: '#/components/responses/responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/responses-NotFoundError'
  /addresses/{addressId}:
    put:
      tags:
        - Addresses
      summary: Update an Address
      description: |
        Updates the details of a specific address record by its ID.
        This is typically used to modify the contact or billing address associated with an account.
        The user must have permissions to update the account to which this address belongs.
      operationId: updateAccountAddress
      security:
        - oAuth2:
            - write
      parameters:
        - name: addressId
          in: path
          description: The unique identifier of the address record to be updated.
          required: true
          schema:
            type: integer
            format: int64
            example: 671
      requestBody:
        description: Address attributes to update. All fields in the request are typically required for a PUT, or optional for a PATCH.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressUpdateRequest'
            example:
              email: updated.contact@example.com
              street_address: 456 Business Road, Unit 10
              country: US
              city: New City
              state_province: TX
              postal_code: '75001'
              contact_number: '+18005550099'
      responses:
        '200':
          description: Address updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResponse'
              example:
                id: 671
                email: updated.contact@example.com
                street_address: 456 Business Road, Unit 10
                country: US
                city: New City
                state_province: TX
                postal_code: '75001'
                contact_number: '+18005550099'
                links:
                  - href: /addresses/671
                    rel: self
                    method: GET
                  - href: /account
                    rel: account
                    method: GET
        '400':
          $ref: '#/components/responses/components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/components-responses-NotFoundError'
  /auth/token:
    post:
      tags:
        - Authentication
      summary: Obtain an OAuth 2.0 Access Token
      description: |
        Requests an access token using one of the supported OAuth 2.0 grant types.
        The specific parameters required in the request body depend on the `grant_type` used.

        - For `password` grant: include `username`, `password`, `client_id`, and `client_secret`.
        - For `client_credentials` grant: include `client_id` and `client_secret`.
        - For `refresh_token` grant: include `refresh_token`, `client_id`, and `client_secret`.

        Successful authentication returns an access token, its type, expiration time, and a refresh token (if applicable for the grant type).
      operationId: fetchAccessToken
      security: []
      requestBody:
        description: OAuth 2.0 grant parameters.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
            examples:
              passwordGrant:
                summary: Example for Password Grant
                value:
                  grant_type: password
                  username: developer@example.com
                  password: aVerySecurePassword123!
                  client_id: your_application_client_id
                  client_secret: your_application_client_secret
              clientCredentialsGrant:
                summary: Example for Client Credentials Grant
                value:
                  grant_type: client_credentials
                  client_id: your_m2m_client_id
                  client_secret: your_m2m_client_secret
                  scope: read:service_data
              refreshTokenGrant:
                summary: Example for Refresh Token Grant
                value:
                  grant_type: refresh_token
                  refresh_token: previously_issued_refresh_token_string
                  client_id: your_application_client_id
                  client_secret: your_application_client_secret
      responses:
        '200':
          description: Access token issued successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
              example:
                access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOi...
                token_type: Bearer
                expires_in: 7200
                refresh_token: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOi...
                scope: read write
        '400':
          description: |
            Bad Request.
            This can occur if the request is malformed, missing required parameters for the specified `grant_type`,
            or uses an unsupported `grant_type`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oauth_components-schemas-Error'
              example:
                status: error
                error: 'Invalid request: ''username'' is required for grant_type ''password''.'
                error_code: INVALID_REQUEST_PARAMETERS
        '401':
          description: |
            Unauthorized.
            Authentication failed. This could be due to invalid client credentials,
            an invalid or expired refresh token, or incorrect user credentials for the password grant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oauth_components-schemas-Error'
              example:
                status: error
                error: 'Client authentication failed: Invalid client_id or client_secret.'
                error_code: INVALID_CLIENT_CREDENTIALS
  /auth/revoke:
    post:
      tags:
        - Authentication
      summary: Revoke an OAuth 2.0 Token
      description: |
        Revokes an active access token or refresh token, effectively logging the user or application out.
        The request must include the token to be revoked and client credentials for authentication of the revocation request itself.
      operationId: revokeAccessToken
      security: []
      requestBody:
        description: Parameters for token revocation.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeRequest'
            example:
              token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOi...
              client_id: your_application_client_id
              client_secret: your_application_client_secret
      responses:
        '204':
          description: Token successfully revoked. No content is returned.
        '400':
          description: |
            Bad Request.
            The request may be missing required parameters (like `token` or client credentials),
            or the token format might be invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oauth_components-schemas-Error'
              example:
                status: error
                error: 'Invalid request: ''token'' parameter is missing.'
                error_code: INVALID_REQUEST_PARAMETERS
        '401':
          description: |
            Unauthorized.
            Client authentication failed for the revocation request (e.g., invalid `client_id` or `client_secret`).
            This does *not* mean the token to be revoked was invalid, but that the revoking client is not authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oauth_components-schemas-Error'
              example:
                status: error
                error: Client authentication failed for revocation.
                error_code: INVALID_CLIENT_CREDENTIALS_FOR_REVOCATION
  /confirmation:
    post:
      tags:
        - Confirmation
      summary: Confirm a User Account
      description: |
        Confirms a user account using a confirmation token obtained during sign-up.
        If a valid token is provided, the account becomes active and operational.
        This token is typically obtained via an email link sent to the user after they sign up.
      operationId: confirmAccount
      security: []
      requestBody:
        description: The confirmation token provided to the user.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmationRequest'
            example:
              confirmation_token: i2W9OXLqCaKNHoQY07lVAkgPVaI
      responses:
        '201':
          description: Account confirmed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmationResponse'
              example:
                message: Account confirmed successfully. You can now log in.
                links:
                  - href: /auth/token
                    rel: login
                    title: Login to Account
                    method: POST
        '400':
          description: |
            Bad Request.
            This can occur if the `confirmation_token` is missing, malformed, or invalid (e.g., already used or expired).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/confirmation_components-schemas-Error'
              example:
                status: error
                error: Invalid or expired confirmation token.
                error_code: INVALID_CONFIRMATION_TOKEN
        '404':
          description: |
            Not Found.
            The account associated with the confirmation token could not be found. 
            This might happen if the token is severely outdated or the account was deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/confirmation_components-schemas-Error'
              example:
                status: error
                error: Account not found for the provided token.
                error_code: ACCOUNT_NOT_FOUND
  /password/reset:
    $ref: ./password.yaml#/paths/~1password~1reset
  /password/forgot:
    $ref: ./password.yaml#/paths/~1password~1forgot
  /sign-up:
    post:
      tags:
        - Sign Up
      summary: Register a new Customer Account
      description: |
        Allows a new customer to register for the Ringer Business service by providing their company name and detailed contact information.
        Upon successful registration, the system creates an account and returns the account details along with a `confirmation_token`.
        This token is essential for the account confirmation process.
      operationId: signUpCustomer
      security: []
      requestBody:
        description: Customer registration details including company name and address information.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRegistrationRequest'
            example:
              name: Example Innovations Inc.
              address:
                email: contact@exampleinnovations.com
                street_address: 123 Innovation Drive, Suite 400
                country: US
                city: Techville
                state_province: CA
                postal_code: '90210'
                contact_number: '18005551212'
      responses:
        '201':
          description: Customer account created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerRegistrationResponse'
              example:
                id: 123
                name: Example Innovations Inc.
                active: false
                locale: en
                international_enabled: false
                balance_preference_in_dollars: '0.00'
                recharge_preference_in_dollars: '0.00'
                address:
                  id: 672
                  email: contact@exampleinnovations.com
                  street_address: 123 Innovation Drive, Suite 400
                  country: US
                  city: Techville
                  state_province: CA
                  postal_code: '90210'
                  contact_number: '18005551212'
                confirmation_token: abcdef123456ghijkl7890mnopqrst
                links:
                  - href: /confirmation
                    rel: confirmAccount
                    title: Confirm Account
                    method: POST
                  - href: /account/123
                    rel: self
                    title: View Account Details
                    method: GET
        '400':
          description: |
            Bad Request.
            The registration data provided was invalid or incomplete. 
            Check the response body for specific field errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sign-up_components-schemas-Error'
              example:
                status: error
                error: 'Validation failed: Email is invalid, Postal code is required for the selected country.'
                error_code: VALIDATION_ERROR
        '409':
          description: Conflict - An account with some of the provided unique identifiers (e.g., email or company name under certain rules) might already exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sign-up_components-schemas-Error'
              example:
                status: error
                error: An account with this email address already exists.
                error_code: ACCOUNT_ALREADY_EXISTS
  /call-blocks:
    $ref: ./call-blocks.yaml#/paths/~1call-blocks
  /call-blocks/{callBlockId}:
    $ref: ./call-blocks.yaml#/paths/~1call-blocks~1{callBlockId}
  /call-records:
    get:
      tags:
        - Call Records
      summary: List Call Records
      description: |
        Retrieves a list of Call Detail Records (CDRs) based on specified criteria.
        Allows for time-based querying, pagination, sorting, and filtering by call attributes like DNI, ANI, duration, etc.
        The scope of returned records may depend on the authenticated user's role (e.g., account admin vs. individual user).
        A maximum of 30 days worth of data can be queried at a time.
      operationId: listCallRecords
      security:
        - oAuth2:
            - read
      parameters:
        - name: start_time
          in: query
          description: |
            Start timestamp for the query range (ISO 8601 format, e.g., "2021-06-01T00:00:00Z").
            Maximum query window is 30 days.
          required: true
          schema:
            type: string
            format: date-time
            example: '2023-10-01T00:00:00Z'
        - name: end_time
          in: query
          description: End timestamp for the query range (ISO 8601 format). Defaults to current time if omitted.
          required: false
          schema:
            type: string
            format: date-time
            example: '2023-10-30T23:59:59Z'
        - name: page[number]
          in: query
          description: Page number for pagination.
          required: true
          schema:
            type: integer
            default: 1
            minimum: 1
            example: 1
        - name: page[size]
          in: query
          description: Number of records per page.
          required: true
          schema:
            type: integer
            default: 30
            minimum: 1
            maximum: 100
            example: 50
        - name: sort[column]
          in: query
          description: Column to sort by.
          required: false
          schema:
            type: string
            enum:
              - dni
              - dni_name
              - raw_ani
              - direction
              - answer_stamp
              - duration
              - customer_balance_adjustment
              - created_at
            default: created_at
            example: answer_stamp
        - name: sort[type]
          in: query
          description: Sort direction.
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
            default: DESC
            example: DESC
        - name: filter[column]
          in: query
          description: Column to filter on.
          required: false
          schema:
            type: string
            enum:
              - dni
              - dni_name
              - raw_ani
              - direction
              - answer_stamp
              - duration
              - customer_balance_adjustment
            example: direction
        - name: filter[type]
          in: query
          description: |
            Filter operator. `starts_with`, `ends_with`, `contains` only for `raw_ani` or `dni`.
          required: false
          schema:
            type: string
            enum:
              - greater_than
              - less_than
              - equal_to
              - starts_with
              - ends_with
              - contains
            example: equal_to
        - name: filter[value]
          in: query
          description: Value to filter by.
          required: false
          schema:
            type: string
            example: outbound
      responses:
        '200':
          description: A list of call records matching the criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallRecordListResponse'
              example:
                call_records:
                  - id: 4332721964
                    item_type: cdr
                    item_rules: intrastate
                    item_options:
                      dni: '+17208888888'
                    item_summary:
                      id: 27815150409
                      dni: '+17208888888'
                      dni_name: CO LONGMONT
                      raw_ani: '+12012222222'
                      name: Intrastate Call
                      zone: intrastate
                      direction: outbound
                      start_stamp: '2020-10-29T06:55:06-06:00'
                      answer_stamp: '2020-10-29T06:55:10-06:00'
                      end_stamp: '2020-10-29T07:02:39-06:00'
                      duration: 449
                    humanized_item_name: Intrastate call
                    customer_balance_adjustment: '-0.08'
                    links: null
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 50
                links:
                  - href: /call-records?page%5Bnumber%5D=1&page%5Bsize%5D=50
                    rel: self
                    method: GET
        '400':
          description: |
            Bad Request.
            This can be due to invalid date formats, exceeding the 30-day query limit, invalid filter/sort parameters, or other malformed query parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallRecordError'
              example:
                error: Query date range cannot exceed 30 days.
        '401':
          $ref: '#/components/responses/call-records_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/call-records_components-responses-ForbiddenError'
  /call-records/{callRecordId}:
    $ref: ./call-records.yaml#/paths/~1call-records~1{callRecordId}
  /country-codes:
    get:
      tags:
        - Country Codes
      summary: List Available Country Codes
      description: |
        Retrieves a list of all country codes supported by the system, often grouped by region or zone.
        This information is useful for configuring features like outbound call permissions on Sites.
      operationId: listAvailableCountryCodes
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: A list of available country codes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryCodeListResponse'
              example:
                country_codes:
                  - id: US
                    name: United States - 1
                    code: INTERSTATE|INTRASTATE|LOCAL|TOLLFREE
                    region: 'Zone 1: North America'
                  - id: EG
                    name: Egypt - 20
                    code: '20'
                    region: 'Zone 2: Africa'
                  - id: CA
                    name: Canada - 1
                    code: '1'
                    region: 'Zone 1: North America'
        '401':
          $ref: '#/components/responses/country-codes_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/country-codes_components-responses-ForbiddenError'
  /credit-cards:
    get:
      tags:
        - Credit Cards
      summary: List Credit Cards
      description: Retrieves a list of all credit cards associated with the authenticated customer's account.
      operationId: listCreditCards
      security:
        - oAuth2:
            - read
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of credit cards per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
      responses:
        '200':
          description: A paginated list of credit cards.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCreditCardListResponse'
              example:
                credit_cards:
                  - id: 101
                    name: Primary Visa
                    last4: '1111'
                    brand: Visa
                    exp_month: 12
                    exp_year: 2025
                    priority: 100
                    active: true
                    verified: true
                    expired: false
                    links:
                      - href: /credit-cards/101
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: /credit-cards?page=1&page_size=25
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/credit-cards_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/credit-cards_components-responses-ForbiddenError'
    post:
      tags:
        - Credit Cards
      summary: Add a New Credit Card
      description: |
        Adds a new credit card to the authenticated customer's account.
        The full card number is tokenized by the payment processor; only partial information (like last4, brand, expiry) is stored and returned by this API.
        A verification step is typically required after adding a new card.
      operationId: createCreditCard
      security:
        - oAuth2:
            - write
      requestBody:
        description: Details of the new credit card to be added.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardCreateRequest'
            example:
              name: Backup Mastercard
              card_number: '5555444433332222'
              exp_month: 8
              exp_year: 2026
              cvv: '123'
              first_name: Jane
              last_name: Doe
              address_line1: 123 Payment Lane
              city: Secure City
              state_province: CA
              postal_code: '90210'
              country: US
              priority: 50
              active: true
      responses:
        '201':
          description: Credit card added successfully. The response includes details of the added card (excluding sensitive full PAN).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResponse'
              example:
                id: 102
                name: Backup Mastercard
                last4: '2222'
                brand: Mastercard
                exp_month: 8
                exp_year: 2026
                priority: 50
                active: true
                verified: false
                expired: false
                links:
                  - href: /credit-cards/102
                    rel: self
                    method: GET
                  - href: /credit-cards/102/verify
                    rel: verify
                    method: PATCH
        '400':
          description: Bad Request - Invalid credit card details provided or validation failed (e.g., Luhn check, expiry date).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credit-cards_components-schemas-Error'
              example:
                status: error
                error: Invalid card number or expiry date provided.
                error_code: INVALID_CARD_DETAILS
        '401':
          $ref: '#/components/responses/credit-cards_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/credit-cards_components-responses-ForbiddenError'
  /credit-cards/{creditCardId}:
    $ref: ./credit-cards.yaml#/paths/~1credit-cards~1{creditCardId}
  /items:
    $ref: ./items.yaml#/paths/~1items
  /items/{itemId}:
    parameters:
      - name: itemId
        in: path
        description: The unique identifier of the item.
        required: true
        schema:
          type: integer
          format: int64
          example: 449
    put:
      tags:
        - Items
      summary: Update Item Details
      description: |
        Updates attributes of a specific billable item, such as its name, pricing, or tax information,
        often within the context of a price deck.
        This operation is typically restricted to users with administrative privileges for managing pricing and service definitions.
      operationId: updateItemById
      security:
        - oAuth2:
            - write
            - admin
      requestBody:
        description: Item attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemUpdateRequest'
            example:
              name: Emergency Call Service (E911) - Updated
              item_price: '1.75'
              tax_category: 60
              tax_code: 9
      responses:
        '200':
          description: Item updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
              example:
                id: 449
                name: Emergency Call Service (E911) - Updated
                item_type: service_fee
                item_rules: e911_access
                item_price: '1.75'
                currency: USD
                price_deck_id: 10
                tax_category: 60
                tax_code: 9
                links:
                  - href: /items/449
                    rel: self
                    method: GET
        '400':
          description: Bad Request - Invalid data provided for the item update (e.g., validation errors).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/items_components-schemas-Error'
              example:
                status: error
                error: Invalid item_price format.
                error_code: ITEM_VALIDATION_ERROR
        '401':
          $ref: '#/components/responses/items_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/items_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/items_components-responses-NotFoundError'
  /packages:
    get:
      tags:
        - Packages
      summary: List Packages
      description: Retrieve a list of all available packages, potentially with pagination.
      operationId: listPackages
      security:
        - oAuth2:
            - read
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of packages per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
      responses:
        '200':
          description: A paginated list of packages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPackageListResponse'
              example:
                packages:
                  - id: 94
                    name: Plan Subscription Fee
                    description: Monthly fee for the Unlimited Device Plan.
                    item_type: subscription
                    item_rules: base_fee
                    item_quantity: 1
                    price: '25.00'
                    currency: USD
                    plan_id: 1
                    included: true
                    removable: false
                    category: base_plan
                    renewable: true
                    links:
                      - href: /packages/94
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: /packages?page=1&page_size=25
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/packages_components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/packages_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/packages_components-responses-ForbiddenError'
  /packages/{packageId}:
    parameters:
      - $ref: '#/components/parameters/PackageIdPath'
    get:
      tags:
        - Packages
      summary: Get Package Details
      description: Retrieves detailed information for a specific package by its ID.
      operationId: getPackageById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Successfully retrieved package details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageResponse'
              example:
                id: 94
                name: Plan Subscription Fee
                description: Monthly fee for the Unlimited Device Plan.
                item_type: subscription
                item_rules: base_fee
                item_quantity: 1
                price: '25.00'
                currency: USD
                plan_id: 1
                included: true
                removable: false
                category: base_plan
                renewable: true
                features: null
                links:
                  - href: /packages/94
                    rel: self
                    method: GET
                  - href: /plans/1
                    rel: relatedPlan
                    method: GET
        '401':
          $ref: '#/components/responses/packages_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/packages_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/packages_components-responses-NotFoundError'
  /payments:
    get:
      tags:
        - Payments
      summary: List Payments
      description: |
        Retrieves a paginated list of payments made on the authenticated account.
        The list is typically ordered by creation date, with the most recent payments first.
      operationId: listPayments
      security:
        - oAuth2:
            - read
      parameters:
        - name: page_size
          in: query
          description: The number of payment entries to return per page.
          required: false
          schema:
            type: integer
            default: 30
            minimum: 1
            maximum: 100
            example: 25
        - name: page
          in: query
          description: The page number of the result set to return.
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
            example: 1
      responses:
        '200':
          description: A list of payments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentListResponse'
              example:
                payments:
                  - id: 7001
                    amount_in_dollars: '50.00'
                    currency: USD
                    status: succeeded
                    payment_method_summary: Visa ending in 1111
                    transaction_id: ch_1JaelG2eZvKYlo2CiHq9D3S7
                    created_at: '2023-10-26T10:00:00Z'
                    links:
                      - href: /payments/7001
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: /payments?page=1&page_size=25
                    rel: self
        '400':
          description: Bad Request - Invalid pagination parameters or other query issues.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payments_components-schemas-Error'
              example:
                status: error
                error: Invalid page_size parameter. Must be between 1 and 100.
                error_code: INVALID_PAGINATION_PARAMS
        '401':
          $ref: '#/components/responses/payments_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/payments_components-responses-ForbiddenError'
    post:
      tags:
        - Payments
      summary: Create a Payment
      description: |
        Initiates a new payment on the authenticated account.
        The payment is typically made using the account's default or highest priority verified payment method.
        The request specifies the amount to be paid.
      operationId: createPayment
      security:
        - oAuth2:
            - write
      requestBody:
        description: The amount for the payment.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                amount_in_dollars:
                  type: number
                  format: double
                  description: The amount of the payment in dollars.
                  example: 50.25
              required:
                - amount_in_dollars
              example:
                amount_in_dollars: 75.5
      responses:
        '201':
          description: Payment created successfully. The response includes details of the processed payment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
              example:
                id: 7002
                amount_in_dollars: '50.25'
                currency: USD
                status: succeeded
                success: true
                payment_method_summary: Visa ending in 1111
                transaction_id: pi_1JaelH2eZvKYlo2CkmN9E4T6
                created_at: '2023-10-26T10:05:00Z'
                links:
                  - href: /payments/7002
                    rel: self
                    method: GET
        '400':
          description: |
            Bad Request.
            Could be due to an invalid amount, no active payment method on file, or other processing issues.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payments_components-schemas-Error'
              example:
                status: error
                error: 'Payment failed: No verified payment method found on account.'
                error_code: PAYMENT_METHOD_REQUIRED
        '401':
          $ref: '#/components/responses/payments_components-responses-UnauthorizedError'
        '402':
          description: Payment Failed - The payment attempt was declined by the payment processor or failed for other reasons.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payments_components-schemas-Error'
              example:
                status: error
                error: Payment declined by the bank. Please try a different payment method.
                error_code: PAYMENT_DECLINED
        '403':
          $ref: '#/components/responses/payments_components-responses-ForbiddenError'
  /payments/{paymentId}:
    $ref: ./payments.yaml#/paths/~1payments~1{paymentId}
  /phone-numbers:
    $ref: ./phone-numbers.yaml#/paths/~1phone-numbers
  /phone-numbers/{phoneNumberId}:
    $ref: ./phone-numbers.yaml#/paths/~1phone-numbers~1{phoneNumberId}
  /phone-numbers/available:
    $ref: ./phone-numbers.yaml#/paths/~1phone-numbers~1available
  /phone-numbers/port:
    $ref: ./phone-numbers.yaml#/paths/~1phone-numbers~1port
  /plans:
    get:
      tags:
        - Plans
      summary: List Current Account Plan(s)
      description: |
        Retrieves a paginated list of plan(s) currently active on the authenticated customer's account.
        Typically, an account has one primary active plan.
      operationId: listAccountPlans
      security:
        - oAuth2:
            - read
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of plans per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
      responses:
        '200':
          description: A paginated list of currently active plans for the account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlanListResponse'
              example:
                plans:
                  - id: 1
                    name: Standard Business Plan
                    description: Includes core calling features, 1000 domestic minutes, and basic voicemail.
                    total_cost: '49.99'
                    currency: USD
                    removable: true
                    active: true
                    approved: true
                    finalized: true
                    items: null
                    packages: {}
                    links:
                      - href: /plans/1
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: /plans?page=1&page_size=25
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/plans_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/plans_components-responses-ForbiddenError'
  /plans/{planId}:
    parameters:
      - $ref: '#/components/parameters/PlanIdPath'
    get:
      tags:
        - Plans
      summary: Get Plan Details
      description: Retrieves detailed information for a specific subscription plan by its ID.
      operationId: getPlanById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Successfully retrieved plan details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResponse'
              example:
                id: 1
                name: Standard Business Plan
                description: Includes core calling features, 1000 domestic minutes, and basic voicemail.
                total_cost: '49.99'
                currency: USD
                removable: true
                active: true
                approved: true
                finalized: true
                items: null
                packages: {}
                links:
                  - href: /plans/1
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/plans_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/plans_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/plans_components-responses-NotFoundError'
  /sites:
    get:
      tags:
        - Sites
      summary: List Sites
      description: Retrieves a list of all sites associated with the authenticated customer's account.
      operationId: listSites
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: A list of sites.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteListResponse'
              example:
                sites:
                  - id: 6
                    name: Main Office Site
                    dns_extension: hq
                    dns_name: hq.ivy.teliax.com
                    active: true
                    caller_id_name: Teliax Inc HQ
                    caller_id_number: '+13035551212'
                    thin_client_id: 12
                    thin_client_name: Denver Bonsai 7
                    acl: 0.0.0.0/0
                    channel_limit: 55
                    music_on_hold_url: https://cdn.example.com/moh/default.mp3
                    permitted_country_codes:
                      - US
                      - CA
                    links:
                      - href: /sites/6
                        rel: self
                        method: GET
        '401':
          $ref: '#/components/responses/sites_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/sites_components-responses-ForbiddenError'
    post:
      tags:
        - Sites
      summary: Create a New Site
      description: Creates a new site with the specified configurations.
      operationId: createSite
      security:
        - oAuth2:
            - write
      requestBody:
        description: Configuration details for the new site.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteCreateRequest'
            example:
              name: New Branch Office
              active: true
              dns_extension: branch
              caller_id_name: Ringer Inc Branch
              caller_id_number: '+17205550101'
              thin_client_id: 12
              acl: 0.0.0.0/0
              channel_limit: 25
              permitted_country_codes:
                - US
              music_on_hold_url: https://cdn.example.com/moh/branch_moh.mp3
      responses:
        '201':
          description: Site created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponse'
              example:
                id: 7
                name: New Branch Office
                dns_extension: branch
                dns_name: branch.ivy.teliax.com
                active: true
                caller_id_name: Ringer Inc Branch
                caller_id_number: '+17205550101'
                thin_client_id: 12
                thin_client_name: Denver Bonsai 7
                acl: 0.0.0.0/0
                channel_limit: 25
                music_on_hold_url: https://cdn.example.com/moh/branch_moh.mp3
                permitted_country_codes:
                  - US
                links:
                  - href: /sites/7
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/sites_components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/sites_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/sites_components-responses-ForbiddenError'
  /sites/{siteId}:
    parameters:
      - $ref: '#/components/parameters/SiteIdPath'
    get:
      tags:
        - Sites
      summary: Get Site Details
      description: Retrieves detailed information for a specific site by its ID.
      operationId: getSiteById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Successfully retrieved site details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponse'
              example:
                id: 6
                name: Main Office Site
                dns_extension: hq
                dns_name: hq.ivy.teliax.com
                active: true
                caller_id_name: Teliax Inc HQ
                caller_id_number: '+13035551212'
                thin_client_id: 12
                thin_client_name: Denver Bonsai 7
                acl: 0.0.0.0/0
                channel_limit: 55
                music_on_hold_url: https://cdn.example.com/moh/default.mp3
                permitted_country_codes:
                  - US
                  - CA
                links:
                  - href: /sites/6
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/sites_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/sites_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/responses-SiteNotFoundError'
    put:
      tags:
        - Sites
      summary: Update Site Configuration
      description: Updates the configuration for an existing site by its ID.
      operationId: updateSiteById
      security:
        - oAuth2:
            - write
      requestBody:
        description: Site attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteUpdateRequest'
            example:
              name: Main Office Site - Renovated
              active: true
              caller_id_name: Teliax Inc HQ (New)
              music_on_hold_url: https://cdn.example.com/moh/new_hq_moh.mp3
      responses:
        '200':
          description: Site updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponse'
              example:
                id: 6
                name: Main Office Site - Renovated
                dns_extension: hq
                dns_name: hq.ivy.teliax.com
                active: true
                caller_id_name: Teliax Inc HQ (New)
                caller_id_number: '+13035551212'
                thin_client_id: 12
                thin_client_name: Denver Bonsai 7
                acl: 0.0.0.0/0
                channel_limit: 55
                music_on_hold_url: https://cdn.example.com/moh/new_hq_moh.mp3
                permitted_country_codes:
                  - US
                  - CA
                links:
                  - href: /sites/6
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/sites_components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/sites_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/sites_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/responses-SiteNotFoundError'
    delete:
      tags:
        - Sites
      summary: Delete a Site
      description: |
        Permanently deletes a specific site and all its associated telephony features (e.g., devices, numbers, menus).
        This action cannot be undone.
      operationId: deleteSiteById
      security:
        - oAuth2:
            - write
            - admin
      responses:
        '204':
          description: Site deleted successfully. No content is returned.
        '401':
          $ref: '#/components/responses/sites_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/sites_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/responses-SiteNotFoundError'
  /sites/{siteId}/call-blocks:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Call Blocking
      summary: List Call Block Rules for a Site
      operationId: listSiteCallBlocks
      description: Retrieves a list of all call blocking rules configured for the specified site.
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: An array of Call Block rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallBlockListResponse'
              example:
                data:
                  - data:
                      id: '101'
                      type: call-block
                      attributes:
                        name: Block nuisance caller
                        phone_number: '+15551234567'
                        direction: inbound
                        status: active
                        site_id: 6
                        created_at: '2023-01-01T12:00:00Z'
                        updated_at: '2023-01-01T12:00:00Z'
                    links:
                      self:
                        href: /sites/6/call-blocks/101
                        rel: self
                        method: GET
                  - data:
                      id: '102'
                      type: call-block
                      attributes:
                        name: Another Block Rule
                        phone_number: '+15550001111'
                        direction: inbound
                        status: active
                        site_id: 6
                        created_at: '2023-01-02T14:00:00Z'
                        updated_at: '2023-01-02T14:00:00Z'
                    links:
                      self:
                        href: /sites/6/call-blocks/102
                        rel: self
                        method: GET
                links:
                  self:
                    href: /sites/6/call-blocks?page%5Bnumber%5D=1&page_size=25
                    rel: self
                    method: GET
                  first:
                    href: /sites/6/call-blocks?page%5Bnumber%5D=1&page_size=25
                    rel: first
                    method: GET
                  last:
                    href: /sites/6/call-blocks?page%5Bnumber%5D=1&page_size=25
                    rel: last
                    method: GET
                  next: null
                  prev: null
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
    post:
      tags:
        - Site Features - Call Blocking
      summary: Create a Call Block Rule
      operationId: createSiteCallBlock
      description: Adds a new call blocking rule to the specified site.
      security:
        - oAuth2:
            - write
      requestBody:
        description: Call Block rule attributes.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallBlockCreateRequest'
            example:
              data:
                type: call-block
                attributes:
                  name: Marketing Block
                  phone_number: +1800MARKETER
                  direction: inbound
                  status: active
      responses:
        '201':
          description: Call Block rule created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-CallBlockResponse'
              example:
                data:
                  id: '103'
                  type: call-block
                  attributes:
                    name: Marketing Block
                    phone_number: +1800MARKETER
                    direction: inbound
                    status: active
                    site_id: 6
                    created_at: '2023-01-15T10:30:00Z'
                    updated_at: '2023-01-15T10:30:00Z'
                links:
                  self:
                    href: /sites/6/call-blocks/103
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
  /sites/{siteId}/call-blocks/{callBlockId}:
    parameters:
      - $ref: '#/components/parameters/SiteIdPath'
      - $ref: '#/components/parameters/CallBlockIdPath'
    get:
      tags:
        - Site Features - Call Blocking
      summary: Get Call Block Rule Details
      operationId: getSiteCallBlockById
      description: Retrieves the details of a specific Call Block rule.
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Call Block rule details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-CallBlockResponse'
              example:
                data:
                  type: call-block
                  id: '101'
                  attributes:
                    name: Marketing Block Rule
                    phone_number: '+18005551234'
                    direction: inbound
                    status: active
                  links:
                    self: /sites/6/call-blocks/101
        '401':
          $ref: '#/components/responses/call-block_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/call-block_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/call-block_components-responses-NotFoundError'
    put:
      tags:
        - Site Features - Call Blocking
      summary: Update Call Block Rule
      operationId: updateSiteCallBlockById
      description: Updates an existing Call Block rule. Only attributes provided in the request body will be updated.
      security:
        - oAuth2:
            - write
      requestBody:
        description: Call Block rule attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallBlockUpdateRequest'
            example:
              data:
                type: call-block
                attributes:
                  name: Updated Marketing Block
                  status: inactive
      responses:
        '200':
          description: Call Block rule updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-CallBlockResponse'
              example:
                data:
                  type: call-block
                  id: '101'
                  attributes:
                    name: Updated Marketing Block
                    phone_number: '+18005551234'
                    direction: inbound
                    status: inactive
                  links:
                    self: /sites/6/call-blocks/101
        '400':
          $ref: '#/components/responses/call-block_components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/call-block_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/call-block_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/call-block_components-responses-NotFoundError'
        '409':
          $ref: '#/components/responses/responses-ConflictError'
    delete:
      tags:
        - Site Features - Call Blocking
      summary: Delete a Call Block Rule
      operationId: deleteSiteCallBlockById
      description: Permanently deletes a Call Block rule.
      security:
        - oAuth2:
            - write
            - admin
      responses:
        '204':
          description: Call Block rule deleted successfully. No content returned.
        '401':
          $ref: '#/components/responses/call-block_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/call-block_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/call-block_components-responses-NotFoundError'
  /sites/{siteId}/conference-rooms:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Conference Rooms
      summary: List Conference Rooms for a Site
      description: Retrieves a list of all conference rooms configured for the specified site.
      operationId: listSiteConferenceRooms
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: A list of conference rooms for the site.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceRoomListResponse'
              example:
                conference_rooms:
                  - id: 3
                    site_id: 6
                    name: Weekly Sales Meeting
                    pin: '****'
                    moderator_pin: '****'
                    profile: default
                    user_id: 1
                    links:
                      - href: /sites/6/conference-rooms/3
                        rel: self
                        method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
    post:
      tags:
        - Site Features - Conference Rooms
      summary: Create a Conference Room for a Site
      description: |
        Adds a new conference room to the specified site.
        Requires providing a name, participant PIN, and moderator PIN.
        Greeting and music-on-hold audio files can also be uploaded during creation.
      operationId: createSiteConferenceRoom
      security:
        - oAuth2:
            - write
      requestBody:
        description: Configuration details for the new conference room.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConferenceRoomCreateRequest'
      responses:
        '201':
          description: Conference room created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceRoomResponse'
              example:
                id: 4
                site_id: 6
                name: Project Alpha Debrief
                pin: '9876'
                moderator_pin: '5432'
                profile: secure_chat
                greeting_url: https://cdn.example.com/greetings/conf_4_greeting.mp3
                music_on_hold_url: https://cdn.example.com/moh/conf_4_moh.mp3
                user_id: 1
                links: null
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/conference-rooms/{conferenceRoomId}:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/ConferenceRoomIdPath'
    get:
      tags:
        - Site Features - Conference Rooms
      summary: Get Conference Room Details
      description: Retrieves detailed information for a specific conference room by its ID, belonging to the specified site.
      operationId: getSiteConferenceRoomById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Successfully retrieved conference room details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceRoomResponse'
              example:
                id: 3
                site_id: 6
                name: Weekly Sales Meeting
                pin: '****'
                moderator_pin: '****'
                profile: default
                greeting_url: https://cdn.example.com/greetings/conf_3.mp3
                music_on_hold_url: null
                user_id: 1
                links: null
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/ConferenceRoomNotFoundError'
    put:
      tags:
        - Site Features - Conference Rooms
      summary: Update Conference Room Configuration
      description: |
        Updates the configuration for a specific conference room on a site.
        Allows changing the name, PINs, profile, and audio files (greeting, music on hold).
      operationId: updateSiteConferenceRoomById
      security:
        - oAuth2:
            - write
      requestBody:
        description: Conference room attributes to update.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConferenceRoomUpdateRequest'
      responses:
        '200':
          description: Conference room updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceRoomResponse'
              example:
                id: 3
                site_id: 6
                name: Updated Sales Meeting
                pin: '****'
                moderator_pin: '****'
                profile: enhanced_audio
                greeting_url: https://cdn.example.com/greetings/new_conf_3.mp3
                music_on_hold_url: null
                user_id: 1
                links: null
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/ConferenceRoomNotFoundError'
    delete:
      tags:
        - Site Features - Conference Rooms
      summary: Delete a Conference Room
      description: Permanently deletes a specific conference room from the site.
      operationId: deleteSiteConferenceRoomById
      security:
        - oAuth2:
            - write
      responses:
        '204':
          description: Conference room deleted successfully. No content is returned.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/ConferenceRoomNotFoundError'
  /sites/{siteId}/conference-rooms/available:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Conference Rooms
      summary: List Available Conference Rooms for a Site/User
      description: |
        Retrieves a list of conference rooms available for assignment to the specified site.
        The original Teliax API included an optional `user_id` query parameter, which might imply that availability
        could also be filtered or contextualized by a user. This parameter is included here.
      operationId: listSiteAvailableConferenceRooms
      security:
        - oAuth2:
            - read
      parameters:
        - name: user_id
          in: query
          description: Optional. Identifier of a user to filter or contextualize available conference rooms.
          required: false
          schema:
            type: integer
            format: int64
            example: 10
      responses:
        '200':
          description: A list of available conference rooms.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceRoomListResponse'
              example:
                conference_rooms:
                  - id: 15
                    site_id: null
                    name: Ad-hoc Meeting Room A
                    profile: default
                    pin: null
                    moderator_pin: null
                    user_id: null
                    links: null
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/conference-rooms/{conferenceRoomId}/transfer:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/ConferenceRoomIdPath'
    post:
      tags:
        - Site Features - Conference Rooms
      summary: Transfer Conference Room to Another Site
      description: |
        Moves a conference room from its current site (specified in the path) 
        to a new target site (specified in the request body) within the same customer account.
      operationId: transferConferenceRoomToNewSite
      security:
        - oAuth2:
            - write
            - admin
      requestBody:
        description: The identifier of the new site to which the conference room should be transferred.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                new_site_id:
                  type: integer
                  format: int64
                  description: The unique identifier of the target site for the conference room.
                  example: 7
              required:
                - new_site_id
              example:
                new_site_id: 7
      responses:
        '200':
          description: Conference room transferred successfully. The response includes the conference room details in its new site context.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceRoomResponse'
              example:
                id: 3
                site_id: 7
                name: Weekly Sales Meeting
                pin: '****'
                moderator_pin: '****'
                profile: default
                user_id: 1
                greeting_url: https://cdn.example.com/greetings/conf_3_moved.mp3
                music_on_hold_url: null
                links:
                  - href: /sites/7/conference-rooms/3
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Not Found - The original conference room, its current site, or the new target site was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: error
                error: Conference room, current site, or target site not found.
                error_code: RESOURCE_NOT_FOUND_FOR_TRANSFER
  /sites/{siteId}/conference-rooms/{conferenceRoomId}/upload:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/ConferenceRoomIdPath'
    patch:
      tags:
        - Site Features - Conference Rooms
      summary: Upload Conference Room Audio Files
      description: |
        Uploads or updates the greeting and/or music on hold audio files for a specific conference room.
        This is a PATCH operation as it modifies specific parts of the conference room resource (its audio files).
        The original Teliax API had this as PATCH.
      operationId: uploadSiteConferenceRoomAudio
      security:
        - oAuth2:
            - write
      requestBody:
        description: Audio files for greeting and/or music on hold.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                greeting:
                  type: string
                  format: binary
                  nullable: true
                  description: Audio file for the menu greeting (e.g., .mp3, .wav).
                music_on_hold:
                  type: string
                  format: binary
                  nullable: true
                  description: Audio file for music on hold. If not provided, existing music is unchanged.
              example: {}
      responses:
        '200':
          description: Audio file(s) uploaded successfully. Returns the updated conference room details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceRoomResponse'
              example:
                id: 3
                site_id: 6
                name: Weekly Sales Meeting
                pin: '****'
                moderator_pin: '****'
                profile: default
                greeting_url: https://cdn.example.com/greetings/conf_3_new_greeting.mp3
                music_on_hold_url: https://cdn.example.com/moh/conf_3_new_moh.mp3
                user_id: 1
                links:
                  - href: /sites/6/conference-rooms/3
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/ConferenceRoomNotFoundError'
  /sites/{siteId}/devices:
    parameters:
      - $ref: '#/components/parameters/SiteIdPath'
    get:
      tags:
        - Site Features - Devices
      summary: List Devices for a Site
      description: Retrieves a list of all devices (e.g., IP phones, softphones) configured for the specified site.
      operationId: listSiteDevices
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: A list of devices for the site.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceListResponse'
              example:
                devices:
                  - id: 1763
                    site_id: 6
                    name: John Doe Desk Phone
                    login: john.doe.phone1
                    active: true
                    channel_limit: 2
                    timeout: 120
                    caller_id_name: John Doe
                    caller_id_number: '+13035551234'
                    acl: 0.0.0.0/0
                    fail_over_destination_code: voicemailbox:vm_john_doe
                    fail_over_destination:
                      name: Voicemail for John Doe
                      code: voicemailbox:vm_john_doe
                    user_id: 5
                    links:
                      - href: /sites/6/devices/1763
                        rel: self
                        method: GET
        '401':
          $ref: '#/components/responses/index_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/index_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/components-responses-SiteNotFoundError'
    post:
      tags:
        - Site Features - Devices
      summary: Create a Device for a Site
      description: |
        Adds a new device to the specified site.
        The system will generate login credentials (login and password) for the device.
      operationId: createSiteDevice
      security:
        - oAuth2:
            - write
      requestBody:
        description: Configuration details for the new device.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCreateRequest'
            example:
              name: Lobby Phone
              login: lobby.phone.site_beta
              active: true
              channel_limit: 1
              timeout: 300
              caller_id_name: Lobby
              caller_id_number: '+13035550102'
              acl: 0.0.0.0/0
              fail_over_destination_code: voicemailbox:general_vm
      responses:
        '201':
          description: Device created successfully. The response includes the generated password.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
              example:
                id: 1763
                site_id: 6
                name: John Doe Desk Phone
                login: john.doe.phone1
                active: true
                channel_limit: 2
                timeout: 120
                caller_id_name: John Doe
                caller_id_number: '+13035551234'
                acl: 0.0.0.0/0
                password: aGeneratedPasswordExample
                fail_over_destination_code: voicemailbox:vm_john_doe
                fail_over_destination:
                  name: Voicemail for John Doe
                  code: voicemailbox:vm_john_doe
                user_id: 5
                links: null
        '400':
          $ref: '#/components/responses/index_components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/index_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/index_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/components-responses-SiteNotFoundError'
        '409':
          description: Conflict - A device with the specified login already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/index_components-schemas-Error'
              example:
                status: error
                error: Device login 'confroom1.site6' already exists.
                error_code: DEVICE_LOGIN_CONFLICT
  /sites/{siteId}/devices/{deviceId}:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/DeviceIdPath'
    get:
      tags:
        - Site Features - Devices
      summary: Get Device Details
      description: Retrieves detailed information for a specific device by its ID, belonging to the specified site.
      operationId: getSiteDeviceById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Successfully retrieved device details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
              example:
                id: 1763
                site_id: 6
                name: John Doe Desk Phone
                login: john.doe.phone1
                active: true
                channel_limit: 2
                timeout: 120
                caller_id_name: John Doe
                caller_id_number: '+13035551234'
                acl: 0.0.0.0/0
                fail_over_destination_code: voicemailbox:vm_john_doe
                fail_over_destination:
                  name: Voicemail for John Doe
                  code: voicemailbox:vm_john_doe
                user_id: 5
                links:
                  - href: /sites/6/devices/1763
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/device_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/device_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/responses-DeviceNotFoundError'
    put:
      tags:
        - Site Features - Devices
      summary: Update Device Configuration
      description: |
        Updates the configuration for a specific device on a site.
        Note: The SIP password cannot be updated via this endpoint; use the dedicated regenerate-password endpoint for that.
      operationId: updateSiteDeviceById
      security:
        - oAuth2:
            - write
      requestBody:
        description: Device attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceUpdateRequest'
            example:
              name: John Doe Desk Phone - Updated
              active: true
              channel_limit: 4
              timeout: 180
              caller_id_name: JD Phone
              caller_id_number: '+13035551235'
              acl: 192.168.1.0/24
              fail_over_destination_code: menu:main_menu
      responses:
        '200':
          description: Device updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
              example:
                id: 1763
                site_id: 6
                name: John Doe Desk Phone - Updated
                login: john.doe.phone1
                active: true
                channel_limit: 4
                timeout: 180
                caller_id_name: JD Phone
                caller_id_number: '+13035551235'
                acl: 192.168.1.0/24
                fail_over_destination_code: menu:main_menu
                fail_over_destination:
                  name: Main Menu
                  code: menu:main_menu
                user_id: 5
                links:
                  - href: /sites/6/devices/1763
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/device_components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/device_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/device_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/responses-DeviceNotFoundError'
        '409':
          description: Conflict - The updated login name already exists for another device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/device_components-schemas-Error'
              example:
                status: error
                error: Device login 'john.doe.phone1' already exists.
                error_code: DEVICE_LOGIN_CONFLICT
    delete:
      tags:
        - Site Features - Devices
      summary: Delete a Device
      description: Permanently deletes a specific device from the site.
      operationId: deleteSiteDeviceById
      security:
        - oAuth2:
            - write
            - admin
      responses:
        '204':
          description: Device deleted successfully. No content is returned.
        '401':
          $ref: '#/components/responses/device_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/device_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/responses-DeviceNotFoundError'
  /sites/{siteId}/devices/available:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Devices
      summary: List Available Devices for a Site/User
      description: |
        Retrieves a list of devices that are available for assignment to the specified site.
        The original Teliax API included a `user_id` query parameter, which might imply that availability
        could also be filtered or contextualized by a user. This parameter is included here as optional.
      operationId: listSiteAvailableDevices
      security:
        - oAuth2:
            - read
      parameters:
        - name: user_id
          in: query
          description: Optional. Identifier of a user to filter or contextualize available devices.
          required: false
          schema:
            type: integer
            format: int64
            example: 5
      responses:
        '200':
          description: A list of available devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceListResponse'
              example:
                devices:
                  - id: 1764
                    site_id: null
                    name: Inventory IP Phone XYZ
                    login: inventory.phone.xyz
                    active: true
                    channel_limit: 1
                    timeout: 120
                    caller_id_name: null
                    caller_id_number: null
                    acl: null
                    fail_over_destination_code: null
                    fail_over_destination: null
                    user_id: null
                    links: []
                  - id: 1763
                    site_id: 6
                    name: John Doe Desk Phone
                    login: john.doe.phone1
                    active: true
                    channel_limit: 2
                    timeout: 120
                    caller_id_name: John Doe
                    caller_id_number: '+13035551234'
                    acl: 0.0.0.0/0
                    fail_over_destination_code: voicemailbox:vm_john_doe
                    fail_over_destination:
                      name: Voicemail for John Doe
                      code: voicemailbox:vm_john_doe
                    user_id: 5
                    links:
                      - href: /sites/6/devices/1763
                        rel: self
                        method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/devices/{deviceId}/regenerate-password:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/DeviceIdPath'
    patch:
      tags:
        - Site Features - Devices
      summary: Regenerate Device SIP Password
      description: |
        Generates a new random SIP password for the specified device.
        The old password will no longer be valid.
        The device will need to be updated with the new password to re-register.
        The new password is included in the response.
      operationId: regenerateSiteDevicePassword
      security:
        - oAuth2:
            - write
      responses:
        '200':
          description: Device password regenerated successfully. The new password is included in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponseWithPassword'
              example:
                id: 1763
                site_id: 6
                name: John Doe Desk Phone
                login: john.doe.phone1
                password: newStrongPassword123!
                active: true
                channel_limit: 2
                timeout: 120
                caller_id_name: John Doe
                caller_id_number: '+13035551234'
                acl: 0.0.0.0/0
                fail_over_destination_code: voicemailbox:vm_john_doe
                fail_over_destination:
                  name: Voicemail for John Doe
                  code: voicemailbox:vm_john_doe
                user_id: 5
                links:
                  - href: /sites/6/devices/1763
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/DeviceNotFoundError'
  /sites/{siteId}/devices/{deviceId}/status:
    $ref: ./sites/devices/status.yaml#/paths/~1sites~1{siteId}~1devices~1{deviceId}~1status
  /sites/{siteId}/devices/{deviceId}/transfer:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/DeviceIdPath'
    post:
      tags:
        - Site Features - Devices
      summary: Transfer Device to Another Site
      description: |
        Moves a device from its current site (specified in the path) to a new target site
        (specified in the request body) within the same customer account.
        The device configuration (apart from its site association) generally remains the same.
      operationId: transferDeviceToNewSite
      security:
        - oAuth2:
            - write
            - admin
      requestBody:
        description: The identifier of the new site to which the device should be transferred.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                new_site_id:
                  type: integer
                  format: int64
                  description: The unique identifier of the target site for the device.
                  example: 7
              required:
                - new_site_id
              example:
                new_site_id: 7
      responses:
        '200':
          description: Device transferred successfully. The response includes the device details in its new site context.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
              example:
                id: 1763
                site_id: 7
                name: John Doe Desk Phone
                login: john.doe.phone1
                active: true
                channel_limit: 2
                timeout: 120
                caller_id_name: John Doe
                caller_id_number: '+13035551234'
                acl: 0.0.0.0/0
                fail_over_destination_code: voicemailbox:vm_john_doe
                fail_over_destination:
                  name: Voicemail for John Doe
                  code: voicemailbox:vm_john_doe
                user_id: 5
                links:
                  - href: /sites/7/devices/1763
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Not Found - The original device, its current site, or the new target site was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: error
                error: Device, current site, or target site not found.
                error_code: RESOURCE_NOT_FOUND_FOR_TRANSFER
  /sites/{siteId}/e911s:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - E911
      summary: List E911 Records for a Site
      description: Retrieves a list of all E911 records (validated emergency addresses) associated with the specified site.
      operationId: listSiteE911Records
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: A list of E911 records for the site.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E911ListResponse'
              example:
                e911_records:
                  - id: 19
                    site_id: 6
                    name: Main Office E911
                    house_number: '2150'
                    street: West 29th Ave
                    city: Denver
                    state_province: CO
                    postal_code: '80211'
                    country_code: US
                    caller_id_name: Teliax Office Emergency
                    validated: true
                    did_number: '+13035550100'
                    links:
                      - href: /sites/6/e911s/19
                        rel: self
                        method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/e911s/{e911Id}:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/E911IdPath'
    get:
      tags:
        - Site Features - E911
      summary: Get E911 Record Details
      description: Retrieves detailed information for a specific E911 record by its ID, belonging to the specified site.
      operationId: getSiteE911RecordById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Successfully retrieved E911 record details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E911Response'
              example:
                id: 19
                site_id: 6
                name: Main Office E911
                caller_id_name: Teliax Office Emergency
                house_number: '2150'
                street: West 29th Ave
                city: Denver
                state_province: CO
                postal_code: '80211'
                country_code: US
                validated: true
                did_number: '+13035550123'
                links: null
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/E911NotFoundError'
    put:
      tags:
        - Site Features - E911
      summary: Update E911 Record
      description: |
        Updates the details of an existing E911 record.
        This typically involves providing address information for validation with emergency services.
      operationId: updateSiteE911RecordById
      security:
        - oAuth2:
            - write
      requestBody:
        description: E911 record attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E911UpdateRequest'
            example:
              name: Main Office E911 - Updated
              caller_id_name: Teliax Main Office Emergency Line
              house_number: '2150'
              house_number_suffix: Suite 100
              street: West 29th Avenue
              city: Denver
              state_province: CO
              postal_code: '80211'
              country_code: US
      responses:
        '200':
          description: E911 record updated and re-validated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E911Response'
              example:
                id: 19
                site_id: 6
                name: Main Office E911 - Updated
                caller_id_name: Teliax Main Office Emergency Line
                house_number: '2150'
                house_number_suffix: Suite 100
                street: West 29th Avenue
                city: Denver
                state_province: CO
                postal_code: '80211'
                country_code: US
                validated: true
                did_number: '+13035550123'
                links: null
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/E911NotFoundError'
    delete:
      tags:
        - Site Features - E911
      summary: Delete E911 Record
      description: |
        Deletes a specific E911 record.
        This action may also unregister the associated address from emergency services.
        Ensure no phone numbers or devices are solely reliant on this E911 record for emergency calling.
      operationId: deleteSiteE911RecordById
      security:
        - oAuth2:
            - write
      responses:
        '204':
          description: E911 record deleted successfully. No content is returned.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/E911NotFoundError'
        '409':
          description: Conflict - E911 record cannot be deleted as it is actively linked to essential services.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sites/{siteId}/extensions:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Extensions
      summary: List Extensions for a Site
      description: Retrieve a paginated list of all extensions that belong to a site.
      operationId: listSiteExtensions
      security:
        - oAuth2:
            - read
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of extensions per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
      responses:
        '200':
          description: A paginated list of extensions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExtensionListResponse'
              example:
                extensions:
                  - id: 101
                    site_id: 6
                    number: '1001'
                    name: Sales
                    destination_code: ring_group:45
                    destination_name: Sales Team
                    links:
                      - href: /sites/6/extensions/101
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: /sites/6/extensions?page=1&page_size=25
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/index_components-responses-UnauthorizedError-2'
        '403':
          $ref: '#/components/responses/index_components-responses-ForbiddenError-2'
        '404':
          $ref: '#/components/responses/index_components-responses-SiteNotFoundError'
    post:
      tags:
        - Site Features - Extensions
      summary: Create Extension for a Site
      description: Add a new extension to the specified site.
      operationId: createSiteExtension
      security:
        - oAuth2:
            - write
      requestBody:
        description: Details for the new extension.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensionCreateRequest'
            example:
              number: '1002'
              name: Support
              destination_code: ring_group:46
      responses:
        '201':
          description: Extension Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionResponse'
              example:
                id: 102
                site_id: 6
                number: '1002'
                name: Support
                destination_code: ring_group:46
                destination_name: Support Team
                links:
                  - href: /sites/6/extensions/102
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/index_components-responses-BadRequestError-2'
        '401':
          $ref: '#/components/responses/index_components-responses-UnauthorizedError-2'
        '403':
          $ref: '#/components/responses/index_components-responses-ForbiddenError-2'
        '404':
          $ref: '#/components/responses/index_components-responses-SiteNotFoundError'
        '409':
          $ref: '#/components/responses/components-responses-ConflictError'
  /sites/{siteId}/extensions/{extensionId}:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/ExtensionIdPath'
    get:
      tags:
        - Site Features - Extensions
      summary: Get Extension Details
      description: Retrieves detailed information for a specific extension by its ID, belonging to the specified site.
      operationId: getSiteExtensionById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Successfully retrieved extension details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionResponse'
              example:
                id: 14
                site_id: 6
                name: Sales Hotline Ext
                number: '1001'
                destination_code: ringgroup:rg_sales
                destination_name: Sales Ring Group
                user_id: 5
                links: null
        '401':
          $ref: '#/components/responses/extension_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/extension_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/extension_components-responses-NotFoundError'
    put:
      tags:
        - Site Features - Extensions
      summary: Update Extension Configuration
      description: Updates the configuration for a specific extension on a site, such as its name, number, or call routing destination.
      operationId: updateSiteExtensionById
      security:
        - oAuth2:
            - write
      requestBody:
        description: Extension attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensionUpdateRequest'
            example:
              name: Marketing Hotdesk
              number: '2005'
              destination_code: user:jane_doe_vm
              user_id: null
      responses:
        '200':
          description: Extension updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionResponse'
              example:
                id: 14
                site_id: 6
                name: Marketing Hotdesk
                number: '2005'
                destination_code: user:jane_doe_vm
                destination_name: Support Desk Main Phone
                user_id: 10
                links: null
        '400':
          $ref: '#/components/responses/extension_components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/extension_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/extension_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/extension_components-responses-NotFoundError'
        '409':
          description: Conflict - The updated extension number already exists on this site.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/extension_components-schemas-Error'
              example:
                status: error
                error: Extension number '2005' already exists on this site.
                error_code: EXTENSION_NUMBER_CONFLICT
    delete:
      tags:
        - Site Features - Extensions
      summary: Delete an Extension
      description: Permanently deletes a specific extension from the site.
      operationId: deleteSiteExtensionById
      security:
        - oAuth2:
            - write
            - admin
      responses:
        '204':
          description: Extension deleted successfully. No content is returned.
        '401':
          $ref: '#/components/responses/extension_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/extension_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/extension_components-responses-NotFoundError'
  /sites/{siteId}/extensions/available:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Extensions
      summary: List Available Extensions for a Site/User
      description: |
        Retrieves a list of extensions available for assignment to the specified site.
        The original Teliax API included an optional `user_id` query parameter, which might imply that availability
        could also be filtered or contextualized by a user. This parameter is included here.
      operationId: listSiteAvailableExtensions
      security:
        - oAuth2:
            - read
      parameters:
        - name: user_id
          in: query
          description: Optional. Identifier of a user to filter or contextualize available extensions.
          required: false
          schema:
            type: integer
            format: int64
            example: 12
      responses:
        '200':
          description: A list of available extensions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionListResponse'
              example:
                extensions:
                  - id: 75
                    site_id: null
                    name: Available Ext 7001
                    number: '7001'
                    destination_code: ''
                    destination_name: null
                    user_id: null
                    links: []
                  - id: 101
                    site_id: 6
                    number: '1001'
                    name: Lobby Phone
                    destination_code: device:lobby_phone
                    destination_name: Lobby Phone Device
                    user_id: null
                    links:
                      - href: /sites/6/extensions/101
                        rel: self
                        method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/extensions/{extensionId}/transfer:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/ExtensionIdPath'
    post:
      tags:
        - Site Features - Extensions
      summary: Transfer Extension to Another Site
      description: Moves an extension from its current site to a new target site.
      operationId: transferSiteExtension
      security:
        - oAuth2:
            - write
            - admin
      requestBody:
        description: The identifier of the new site for the extension.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                new_site_id:
                  type: integer
                  format: int64
                  description: The unique identifier of the target site.
                  example: 8
              required:
                - new_site_id
              example:
                new_site_id: 8
      responses:
        '200':
          description: Extension transferred successfully. Returns the extension details in its new site context.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionResponse'
              example:
                id: 14
                site_id: 8
                name: Sales Hotline Ext Moved
                number: '1001'
                destination_code: ringgroup:rg_sales
                destination_name: Sales Ring Group
                user_id: 5
                links:
                  - href: /sites/8/extensions/14
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/transfer_components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/transfer_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/transfer_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/transfer_components-responses-NotFoundError'
  /sites/{siteId}/fax-machines:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Fax Machines
      summary: List Fax Machines for a Site
      description: Retrieves a list of all fax machine (Fax to Email) configurations for the specified site.
      operationId: listSiteFaxMachines
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: A list of fax machines for the site.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaxMachineListResponse'
              example:
                fax_machines:
                  - id: 3
                    site_id: 6
                    code: fax_machine:3
                    name: Sales Department Fax
                    notification_emails: sales-faxes@example.com,manager@example.com
                    user_id: 1
                    links:
                      - href: /sites/6/fax-machines/3
                        rel: self
                        method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
    post:
      tags:
        - Site Features - Fax Machines
      summary: Create a Fax Machine for a Site
      description: |
        Adds a new fax machine (Fax to Email) configuration to the specified site.
        Requires a name and one or more notification email addresses where received faxes (as PDFs) will be sent.
      operationId: createSiteFaxMachine
      security:
        - oAuth2:
            - write
      requestBody:
        description: Configuration details for the new fax machine.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FaxMachineCreateRequest'
            example:
              name: Legal Department Fax
              notification_emails: legal@example.com
      responses:
        '201':
          description: Fax machine created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaxMachineResponse'
              example:
                id: 4
                site_id: 6
                code: fax_machine:4
                name: Legal Department Fax
                notification_emails: legal@example.com
                user_id: null
                links: []
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/fax-machines/{faxMachineId}:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/FaxMachineIdPath'
    get:
      tags:
        - Site Features - Fax Machines
      summary: Get Fax Machine Details
      description: Retrieves detailed information for a specific fax machine configuration by its ID, belonging to the specified site.
      operationId: getSiteFaxMachineById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Successfully retrieved fax machine details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaxMachineResponse'
              example:
                id: 3
                site_id: 6
                code: fax_machine:3
                name: Sales Department Fax
                notification_emails: sales-faxes@example.com,manager@example.com
                user_id: 1
                links: null
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/FaxMachineNotFoundError'
    put:
      tags:
        - Site Features - Fax Machines
      summary: Update Fax Machine Configuration
      description: Updates the configuration for a specific fax machine on a site, such as its name or notification email addresses.
      operationId: updateSiteFaxMachineById
      security:
        - oAuth2:
            - write
      requestBody:
        description: Fax machine attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FaxMachineUpdateRequest'
            example:
              name: Sales Fax (Primary)
              notification_emails: sales-faxes@example.com,backup-sales@example.com
      responses:
        '200':
          description: Fax machine configuration updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaxMachineResponse'
              example:
                id: 3
                site_id: 6
                code: fax_machine:3
                name: Sales Fax (Primary)
                notification_emails: sales-faxes@example.com,backup-sales@example.com
                user_id: 1
                links: null
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/FaxMachineNotFoundError'
    delete:
      tags:
        - Site Features - Fax Machines
      summary: Delete a Fax Machine Configuration
      description: Permanently deletes a specific fax machine configuration from the site.
      operationId: deleteSiteFaxMachineById
      security:
        - oAuth2:
            - write
      responses:
        '204':
          description: Fax machine configuration deleted successfully. No content is returned.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/FaxMachineNotFoundError'
  /sites/{siteId}/fax-machines/available:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Fax Machines
      summary: List Available Fax Machines for a Site/User
      description: |
        Retrieves a list of fax machine configurations available for assignment to the specified site.
        The original Teliax API included an optional `user_id` query parameter, which might imply that availability
        could also be filtered or contextualized by a user. This parameter is included here.
      operationId: listSiteAvailableFaxMachines
      security:
        - oAuth2:
            - read
      parameters:
        - name: user_id
          in: query
          description: Optional. Identifier of a user to filter or contextualize available fax machine configurations.
          required: false
          schema:
            type: integer
            format: int64
            example: 25
      responses:
        '200':
          description: A list of available fax machine configurations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaxMachineListResponse'
              example:
                fax_machines:
                  - id: 80
                    site_id: null
                    code: fax_machine:80
                    name: Unassigned Fax Service A
                    notification_emails: unassigned-fax-a@example.com
                    user_id: null
                    links: null
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/fax-machines/{faxMachineId}/transfer:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/FaxMachineIdPath'
    post:
      tags:
        - Site Features - Fax Machines
      summary: Transfer Fax Machine to Another Site
      description: |
        Moves a fax machine configuration from its current site (specified in the path)
        to a new target site (specified in the request body) within the same customer account.
      operationId: transferFaxMachineToNewSite
      security:
        - oAuth2:
            - write
            - admin
      requestBody:
        description: The identifier of the new site to which the fax machine configuration should be transferred.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                new_site_id:
                  type: integer
                  format: int64
                  description: The unique identifier of the target site for the fax machine.
                  example: 8
              required:
                - new_site_id
              example:
                new_site_id: 8
      responses:
        '200':
          description: Fax machine transferred successfully. The response includes the fax machine details in its new site context.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaxMachineResponse'
              example:
                id: 3
                site_id: 8
                code: fax_machine:3
                name: Sales Department Fax
                notification_emails: sales-faxes@example.com,manager@example.com
                user_id: 1
                links:
                  - href: /sites/8/fax-machines/3
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Not Found - The original fax machine, its current site, or the new target site was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: error
                error: Fax machine, current site, or target site not found.
                error_code: RESOURCE_NOT_FOUND_FOR_TRANSFER
  /sites/{siteId}/forwards:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Forwards
      summary: List Forwards for a Site
      description: Retrieve a paginated list of all call forwards that belong to a site.
      operationId: listSiteForwards
      security:
        - oAuth2:
            - read
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of forwards per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
      responses:
        '200':
          description: A paginated list of forwards.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedForwardListResponse'
              example:
                forwards:
                  - id: 77
                    name: After Hours
                    destination_dial_string: '+13125559876'
                    timeout: 30
                    active: true
                    site_id: 6
                    fail_over_destination_code: voicemailbox:general_vm
                    links:
                      - href: /sites/6/forwards/77
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: /sites/6/forwards?page=1&page_size=25
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
    post:
      tags:
        - Site Features - Forwards
      summary: Create Forward for a Site
      description: Add a new call forward to your site.
      operationId: createSiteForward
      security:
        - oAuth2:
            - write
      requestBody:
        description: Details for the new forward.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardCreateRequest'
            example:
              name: Lunch Break Forward
              destination_dial_string: '+13125559877'
              timeout: 60
              active: true
              fail_over_destination_code: menu:main_menu
      responses:
        '201':
          description: Forward Created Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForwardResponse'
              example:
                id: 78
                site_id: 6
                name: Lunch Break Forward
                destination_dial_string: '+13125559877'
                active: true
                timeout: 60
                fail_over_destination_code: menu:main_menu
                links:
                  - href: /sites/6/forwards/78
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/forwards/{forwardId}:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/ForwardIdPath'
    get:
      tags:
        - Site Features - Forwards
      summary: Get Site Forward Details
      description: Retrieve the details of a specific call forward for a site.
      operationId: getSiteForwardById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Forward Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForwardResponse'
              example:
                id: 77
                site_id: 6
                name: After Hours
                destination_dial_string: '+13125559876'
                active: true
                timeout: 30
                fail_over_destination_code: voicemailbox:vm_general
                user_id: 10
                links:
                  - href: /sites/6/forwards/77
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - Site Features - Forwards
      summary: Update Site Forward
      description: Update an existing call forward for a site. Provide only fields to be changed.
      operationId: updateSiteForwardById
      security:
        - oAuth2:
            - write
      requestBody:
        description: Attributes of the forward to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardUpdateRequest'
            example:
              name: After Hours Main Line
              destination_dial_string: '+13125559877'
              active: false
              timeout: 20
              fail_over_destination_code: voicemailbox:general_voicemail
              user_id: 10
      responses:
        '200':
          description: Forward Updated Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForwardResponse'
              example:
                id: 77
                site_id: 6
                name: After Hours Main Line
                destination_dial_string: '+13125559877'
                active: false
                timeout: 20
                fail_over_destination_code: voicemailbox:general_voicemail
                user_id: 10
                links:
                  - href: /sites/6/forwards/77
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    delete:
      tags:
        - Site Features - Forwards
      summary: Delete Site Forward
      description: Permanently delete a specific call forward for a site.
      operationId: deleteSiteForwardById
      security:
        - oAuth2:
            - write
      responses:
        '204':
          description: Forward Deleted Successfully. No Content.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /sites/{siteId}/forwards/available:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Forwards
      summary: List Available Forwards for a Site/User
      description: Retrieve all the available and assigned forwards for the site. Optionally filter by user ID to show forwards assigned to a specific user.
      operationId: listSiteAvailableForwards
      security:
        - oAuth2:
            - read
      parameters:
        - name: userId
          in: query
          description: ID of the user to filter forwards by
          required: false
          schema:
            type: integer
            format: int64
            example: 42
      responses:
        '200':
          description: An array of available Forwards.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableForwardListResponse'
              example:
                forwards:
                  - id: 77
                    site_id: 6
                    name: After Hours
                    destination_dial_string: '+13125559876'
                    active: true
                    timeout: 30
                    fail_over_destination_code: voicemailbox:vm_general
                    assigned: true
                    assigned_to: 42
                    user_id: 10
                    links:
                      - href: /sites/6/forwards/77
                        rel: self
                        method: GET
                  - id: 78
                    site_id: 6
                    name: Lunch Break
                    destination_dial_string: '+13125559877'
                    active: false
                    timeout: 20
                    fail_over_destination_code: null
                    assigned: false
                    assigned_to: null
                    user_id: null
                    links:
                      - href: /sites/6/forwards/78
                        rel: self
                        method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/forwards/{forwardId}/transfer:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/ForwardIdPath'
    post:
      tags:
        - Site Features - Forwards
      summary: Transfer Site Forward
      description: Transfer a call forward to a different site.
      operationId: transferSiteForward
      security:
        - oAuth2:
            - write
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                new_site_id:
                  type: integer
                  description: ID of the site to transfer the forward to
                  example: 7
              required:
                - new_site_id
              example:
                new_site_id: 7
      responses:
        '200':
          description: Forward Transferred Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForwardResponse'
              example:
                id: 77
                site_id: 7
                name: Transferred Forward
                destination_dial_string: '+13125551234'
                active: true
                timeout: 20
                fail_over_destination_code: voicemailbox:general_vm
                user_id: null
                links:
                  - href: /sites/7/forwards/77
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /sites/{siteId}/locations:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Locations
      summary: List Locations for a Site
      description: Retrieves a paginated list of all physical locations defined for the specified site.
      operationId: listSiteLocations
      security:
        - oAuth2:
            - read
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of locations per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
      responses:
        '200':
          description: A paginated list of locations for the site.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLocationListResponse'
              example:
                locations:
                  - id: 9
                    site_id: 6
                    name: Main Office - Denver
                    house_number: '2150'
                    street: West 29th Ave
                    city: Denver
                    state_province: CO
                    postal_code: '80211'
                    country_code: US
                    caller_id_name: Teliax Office Denver
                    e911_enabled: true
                    e911_id: 123
                    links:
                      - href: /sites/6/locations/9
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: /sites/6/locations?page=1&page_size=25
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
    post:
      tags:
        - Site Features - Locations
      summary: Create a Location for a Site
      description: |
        Adds a new physical location to the specified site.
        This location can then be used for E911 address validation and associating other resources.
      operationId: createSiteLocation
      security:
        - oAuth2:
            - write
      requestBody:
        description: Details for the new location.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCreateRequest'
            example:
              name: Warehouse A
              house_number: '100'
              street: Distribution Rd
              city: Commerce City
              state_province: CO
              postal_code: '80022'
              country_code: US
              caller_id_name: Warehouse A Caller ID
              e911_enabled: true
      responses:
        '201':
          description: Location created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationResponse'
              example:
                id: 10
                site_id: 6
                name: Warehouse A
                house_number: '100'
                street: Distribution Rd
                city: Commerce City
                state_province: CO
                postal_code: '80022'
                country_code: US
                caller_id_name: Warehouse A Caller ID
                e911_enabled: true
                e911_id: 124
                links: null
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/locations/{locationId}:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/LocationIdPath'
    get:
      tags:
        - Site Features - Locations
      summary: Get Location Details
      description: Retrieves detailed information for a specific location by its ID, belonging to the specified site.
      operationId: getSiteLocationById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Successfully retrieved location details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationResponse'
              example:
                id: 9
                site_id: 6
                name: Main Office - Denver
                house_number: '2150'
                house_number_suffix: Ste 310
                street: West 29th Ave
                city: Denver
                state_province: CO
                postal_code: '80211'
                country_code: US
                caller_id_name: Teliax Office Denver
                e911_enabled: true
                e911_id: 123
                updated_by: system
                latitude: '39.759000'
                longitude: '-105.015000'
                links: null
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/LocationNotFoundError'
    put:
      tags:
        - Site Features - Locations
      summary: Update Location Details
      description: |
        Updates the details of an existing physical location for a site.
        This can include address components, caller ID name for E911, and E911 enablement status.
      operationId: updateSiteLocationById
      security:
        - oAuth2:
            - write
      requestBody:
        description: Location attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationUpdateRequest'
            example:
              name: Main Office - Denver (Renovated)
              house_number: '2150'
              house_number_suffix: Suite 310A
              street: West 29th Avenue
              city: Denver
              state_province: CO
              postal_code: 80211-3200
              country_code: US
              caller_id_name: Teliax Denver Main
              e911_enabled: true
      responses:
        '200':
          description: Location updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationResponse'
              example:
                id: 9
                site_id: 6
                name: Main Office - Denver (Renovated)
                house_number: '2150'
                house_number_suffix: Suite 310A
                street: West 29th Avenue
                city: Denver
                state_province: CO
                postal_code: 80211-3200
                country_code: US
                caller_id_name: Teliax Denver Main
                e911_enabled: true
                e911_id: 123
                updated_by: current_user_example
                latitude: '39.759000'
                longitude: '-105.015000'
                links: null
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/LocationNotFoundError'
    delete:
      tags:
        - Site Features - Locations
      summary: Delete a Location
      description: |
        Permanently deletes a specific location record from the site.
        Ensure no devices or critical services (like E911 entries) are solely dependent on this location before deleting.
      operationId: deleteSiteLocationById
      security:
        - oAuth2:
            - write
      responses:
        '204':
          description: Location deleted successfully. No content is returned.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/LocationNotFoundError'
        '409':
          description: Conflict - Location cannot be deleted, it may be in use by other resources (e.g., E911, devices).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sites/{siteId}/menus:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Menus
      summary: List Menus for a Site
      description: Retrieve a paginated list of all menus (auto attendants) that belong to a site.
      operationId: listSiteMenus
      security:
        - oAuth2:
            - read
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          description: Number of menus per page.
          required: false
          schema:
            type: integer
            default: 25
      responses:
        '200':
          description: A paginated list of menus.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMenuListResponse'
              example:
                menus:
                  - id: 55
                    site_id: 6
                    name: Main Menu
                    pin: '****'
                    fail_over_destination_code: voicemailbox:42
                    options:
                      '0': ring_group:10
                      '1': extension:101
                    greeting_url: https://cdn.example.com/greetings/menu_55.mp3
                    links:
                      - href: /sites/6/menus/55
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: /sites/6/menus?page=1&page_size=25
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
    post:
      tags:
        - Site Features - Menus
      summary: Create Menu for a Site
      description: Add a new menu (auto attendant) to your site. Greeting can be uploaded.
      operationId: createSiteMenu
      security:
        - oAuth2:
            - write
      requestBody:
        description: Configuration details for the new menu.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuCreateRequest'
      responses:
        '201':
          description: Menu Created Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuResponse'
              example:
                id: 56
                site_id: 6
                name: Support Menu
                pin: '****'
                fail_over_destination_code: voicemailbox:43
                options:
                  '0': ring_group:11
                  '1': extension:102
                greeting_url: https://cdn.example.com/greetings/menu_56_greeting.wav
                links:
                  - href: /sites/6/menus/56
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/menus/{menuId}:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/MenuIdPath'
    get:
      tags:
        - Site Features - Menus
      summary: Get Menu Details
      description: Retrieve the details of a specific menu.
      operationId: getSiteMenuById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Menu details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuResponse'
              example:
                id: 55
                site_id: 6
                name: Main Menu
                pin: '****'
                fail_over_destination_code: voicemailbox:42
                options:
                  '0': ring_group:10
                  '1': extension:101
                greeting_url: https://cdn.example.com/greetings/menu_55.mp3
                links:
                  - href: /sites/6/menus/55
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - Site Features - Menus
      summary: Update Menu Configuration
      description: Updates an existing menu. For `multipart/form-data`, provide only the fields to change. Audio files can be updated.
      operationId: updateSiteMenuById
      security:
        - oAuth2:
            - write
      requestBody:
        description: Menu attributes to update. Only include fields that need to be changed.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuUpdateRequest'
      responses:
        '200':
          description: Menu Updated Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuResponse'
              example:
                id: 55
                site_id: 6
                name: Updated Main Menu
                pin: '****'
                fail_over_destination_code: voicemailbox:43
                options:
                  '0': ring_group:sales_updated
                  '1': extension:105
                greeting_url: https://cdn.example.com/greetings/menu_55_updated.mp3
                links:
                  - href: /sites/6/menus/55
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    delete:
      tags:
        - Site Features - Menus
      summary: Delete Menu
      description: Permanently delete a specific menu.
      operationId: deleteSiteMenuById
      security:
        - oAuth2:
            - write
      responses:
        '204':
          description: Menu Deleted Successfully.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /sites/{siteId}/menus/{menuId}/transfer:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/MenuIdPath'
    post:
      tags:
        - Site Features - Menus
      summary: Transfer Menu to Another Site
      description: |
        Moves a menu from its current site (specified in the path) 
        to a new target site (specified in the request body) within the same customer account.
      operationId: transferSiteMenu
      security:
        - oAuth2:
            - write
            - admin
      requestBody:
        description: The identifier of the new site to which the menu should be transferred.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                new_site_id:
                  type: integer
                  format: int64
                  description: The unique identifier of the target site for the menu.
                  example: 7
              required:
                - new_site_id
              example:
                new_site_id: 7
      responses:
        '200':
          description: Menu transferred successfully. The response includes the menu details in its new site context.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuResponse'
              example:
                id: 55
                site_id: 7
                name: Main Menu
                pin: '1234'
                fail_over_destination_code: voicemailbox:general_vm
                options:
                  '0': ring_group:sales_rg_new_site
                  '1': extension:1002_new_site
                greeting_url: https://cdn.example.com/greetings/menu_55_moved.mp3
                links:
                  - href: /sites/7/menus/55
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Not Found - The original menu, its current site, or the new target site was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: error
                error: Menu, current site, or target site not found.
                error_code: RESOURCE_NOT_FOUND_FOR_TRANSFER
  /sites/{siteId}/menus/{menuId}/upload:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/MenuIdPath'
    patch:
      tags:
        - Site Features - Menus
      summary: Upload Menu Greeting
      description: Upload or update the greeting audio file for the specified menu.
      operationId: uploadSiteMenuGreeting
      security:
        - oAuth2:
            - write
      requestBody:
        description: The greeting audio file to upload.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                greeting:
                  type: string
                  format: binary
                  description: Audio file for the menu greeting (e.g., .mp3, .wav).
              required:
                - greeting
              example:
                greeting: (binary audio file content)
      responses:
        '200':
          description: Menu greeting uploaded successfully. Returns the updated menu details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuResponse'
              example:
                id: 55
                site_id: 6
                name: Main Menu
                pin: '1234'
                fail_over_destination_code: voicemailbox:general_vm
                options:
                  '0': ring_group:sales_rg
                  '1': extension:1001
                greeting_url: https://cdn.example.com/greetings/menu_55_new_greeting.mp3
                links:
                  - href: /sites/6/menus/55
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /sites/{siteId}/phone-numbers:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Phone Numbers
      summary: List Phone Numbers for a Site
      description: Retrieve a paginated list of all phone numbers assigned to the specified site.
      operationId: listSitePhoneNumbers
      security:
        - oAuth2:
            - read
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of phone numbers per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 25
      responses:
        '200':
          description: A paginated list of phone numbers for the site.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPhoneNumberListResponse'
              example:
                phone_numbers:
                  - id: 123
                    site_id: 6
                    name: Main Office Line
                    number: '+13035551212'
                    destination_code: ring_group:10
                    destination:
                      name: Sales Team Ring Group
                      code: ring_group:10
                    fail_over_destination_code: voicemailbox:vm_sales
                    fail_over_destination:
                      name: Sales Voicemail
                      code: voicemailbox:vm_sales
                    e911_id: 45
                    user_id: null
                    links:
                      - href: /sites/6/phone-numbers/123
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: /sites/6/phone-numbers?page=1&page_size=25
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
    post:
      tags:
        - Site Features - Phone Numbers
      summary: Assign Phone Number to Site
      description: Assigns an available phone number to the specified site and configures its initial routing.
      operationId: assignSitePhoneNumber
      security:
        - oAuth2:
            - write
      requestBody:
        description: Details of the phone number to assign and its configuration.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumberCreateRequest'
            example:
              name: Customer Service Line
              number: '+18005550100'
              destination_code: menu:support_ivr
              fail_over_destination_code: voicemailbox:support_general_vm
              e911_id: 46
      responses:
        '201':
          description: Phone number assigned and configured successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-PhoneNumberResponse'
              example:
                id: 124
                site_id: 6
                name: Customer Service Line
                number: '+18005550100'
                destination_code: menu:support_ivr
                destination:
                  name: Support IVR Menu
                  code: menu:support_ivr
                fail_over_destination_code: voicemailbox:support_general_vm
                fail_over_destination:
                  name: General Support Voicemail
                  code: voicemailbox:support_general_vm
                e911_id: 46
                user_id: null
                links:
                  - href: /sites/6/phone-numbers/124
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
  /sites/{siteId}/phone-numbers/{phoneNumberId}:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/PhoneNumberIdPath'
    get:
      tags:
        - Site Features - Phone Numbers
      summary: Get Phone Number Details
      description: Retrieves detailed information for a specific phone number assigned to a site.
      operationId: getSitePhoneNumberById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Successfully retrieved phone number details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-PhoneNumberResponse'
              example:
                id: 123
                site_id: 6
                name: Main Office Line
                number: '+13035551212'
                destination_code: ring_group:10
                destination:
                  name: Sales Team Ring Group
                  code: ring_group:10
                fail_over_destination_code: voicemailbox:vm_sales
                fail_over_destination:
                  name: Sales Voicemail
                  code: voicemailbox:vm_sales
                e911_id: 45
                user_id: null
                links:
                  - href: /sites/6/phone-numbers/123
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/PhoneNumberNotFoundError'
    put:
      tags:
        - Site Features - Phone Numbers
      summary: Update Phone Number Configuration
      description: Updates configuration for a specific phone number. Only provided fields are changed.
      operationId: updateSitePhoneNumberById
      security:
        - oAuth2:
            - write
      requestBody:
        description: Phone number attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumberUpdateRequest'
      responses:
        '200':
          description: Phone number configuration updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-PhoneNumberResponse'
              example:
                id: 127
                site_id: 6
                name: Main Sales Line (Overflow)
                number: '+13035551234'
                destination_code: ringgroup:sales_team_rg
                destination:
                  name: Sales Team Ring Group
                  code: ringgroup:sales_team_rg
                fail_over_destination_code: voicemailbox:vm_sales
                fail_over_destination:
                  name: Sales Voicemail
                  code: voicemailbox:vm_sales
                e911_id: 45
                user_id: 5
                links:
                  - href: /sites/6/phone-numbers/127
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/PhoneNumberNotFoundError'
    delete:
      tags:
        - Site Features - Phone Numbers
      summary: Unassign/Delete Phone Number from Site
      description: Removes a phone number assignment from the site. The number may return to inventory.
      operationId: deleteSitePhoneNumberById
      security:
        - oAuth2:
            - write
      responses:
        '204':
          description: Phone number unassigned/deleted successfully. No content is returned.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/PhoneNumberNotFoundError'
  /sites/{siteId}/phone-numbers/available:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Phone Numbers
      summary: List Available Phone Numbers for a Site
      description: Retrieves phone numbers that are available for assignment to the specified site.  Can be optionally filtered by user ID.
      operationId: listSiteAvailablePhoneNumbers
      security:
        - oAuth2:
            - read
      parameters:
        - name: userId
          in: query
          description: Optional. ID of the user to filter available phone numbers by.
          required: false
          schema:
            type: integer
            format: int64
            example: 42
      responses:
        '200':
          description: A list of available phone numbers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailablePhoneNumberListResponse'
              example:
                phone_numbers:
                  - id: 125
                    site_id: null
                    name: Inventory DID 1
                    number: '+17205551000'
                    destination_code: ''
                    destination: null
                    fail_over_destination_code: null
                    fail_over_destination: null
                    e911_id: null
                    user_id: null
                    assigned: false
                    assigned_to: null
                    links:
                      - href: /phone-number-inventory/125
                        rel: inventoryDetails
                        method: GET
                  - id: 123
                    site_id: 6
                    name: Main Office
                    number: '+13125551234'
                    destination_code: ring_group:10
                    destination:
                      code: ring_group:10
                      name: Sales Team
                    fail_over_destination:
                      code: voicemailbox:vm_sales
                      name: Sales Voicemail
                    e911_id: 45
                    user_id: 42
                    assigned: true
                    assigned_to: 42
                    links:
                      - href: /sites/6/phone-numbers/123
                        rel: self
                        method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/phone-numbers/{phoneNumberId}/transfer:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/PhoneNumberIdPath'
    post:
      tags:
        - Site Features - Phone Numbers
      summary: Transfer Phone Number to Another Site
      description: |
        Moves an assigned phone number from its current site (specified in the path) 
        to a new target site (specified in the request body) within the same customer account.
      operationId: transferSitePhoneNumber
      security:
        - oAuth2:
            - write
            - admin
      requestBody:
        description: The identifier of the new site to which the phone number should be transferred.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                new_site_id:
                  type: integer
                  format: int64
                  description: The unique identifier of the target site for the phone number.
                  example: 7
              required:
                - new_site_id
              example:
                new_site_id: 7
      responses:
        '200':
          description: Phone Number transferred successfully. The response includes the phone number details in its new site context.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemas-PhoneNumberResponse'
              example:
                id: 123
                site_id: 7
                name: Main Office Line
                number: '+13035551212'
                destination_code: ring_group:10
                destination:
                  name: Sales Team Ring Group
                  code: ring_group:10
                fail_over_destination_code: voicemailbox:vm_sales
                fail_over_destination:
                  name: Sales Voicemail
                  code: voicemailbox:vm_sales
                e911_id: 45
                user_id: null
                links:
                  - href: /sites/7/phone-numbers/123
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Not Found - The original phone number, its current site, or the new target site was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: error
                error: Phone number, current site, or target site not found.
                error_code: RESOURCE_NOT_FOUND_FOR_TRANSFER
  /sites/{siteId}/ring-groups:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Ring Groups
      summary: List Ring Groups for a Site
      description: Retrieve a paginated list of all ring groups configured for the specified site.
      operationId: listSiteRingGroups
      security:
        - oAuth2:
            - read
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of ring groups per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 25
      responses:
        '200':
          description: A paginated list of ring groups.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRingGroupListResponse'
              example:
                ring_groups:
                  - id: 10
                    site_id: 6
                    name: Sales Team
                    destination_codes:
                      - device:dev_sales1
                      - extension:ext_sales_mobile
                    destinations:
                      - name: Sales Device 1
                        code: device:dev_sales1
                      - name: Sales Extension Mobile
                        code: extension:ext_sales_mobile
                    ring_strategy: simultaneous
                    timeout: 30
                    fail_over_destination:
                      code: voicemailbox:vm_sales
                      name: Sales Voicemail
                    user_id: null
                    links:
                      - href: /sites/6/ring-groups/10
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: /sites/6/ring-groups?page=1&page_size=25
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
    post:
      tags:
        - Site Features - Ring Groups
      summary: Create Ring Group for a Site
      description: Add a new ring group to the specified site.
      operationId: createSiteRingGroup
      security:
        - oAuth2:
            - write
      requestBody:
        description: Configuration details for the new ring group.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RingGroupCreateRequest'
            example:
              name: Support Queue
              destination_codes:
                - device:support1
                - device:support2
              ring_strategy: sequential
              timeout: 20
              fail_over_destination_code: voicemailbox:support_vm
      responses:
        '201':
          description: Ring Group Created Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RingGroupResponse'
              example:
                id: 11
                site_id: 6
                name: Support Queue
                destination_codes:
                  - device:support1
                  - device:support2
                destinations:
                  - name: Support Agent 1 (device:support1)
                    code: device:support1
                  - name: Support Agent 2 (device:support2)
                    code: device:support2
                ring_strategy: sequential
                timeout: 20
                fail_over_destination:
                  code: voicemailbox:support_vm
                  name: Support Voicemail
                user_id: null
                links:
                  - href: /sites/6/ring-groups/11
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/ring-groups/{ringGroupId}:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/RingGroupIdPath'
    get:
      tags:
        - Site Features - Ring Groups
      summary: Get Ring Group Details
      description: Retrieves detailed information for a specific ring group by its ID.
      operationId: getSiteRingGroupById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Ring Group details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RingGroupResponse'
              example:
                id: 10
                site_id: 6
                name: Sales Team
                destination_codes:
                  - device:dev101
                  - extension:ext102
                destinations:
                  - name: John Smith (device:dev101)
                    code: device:dev101
                  - name: Jane Doe (extension:ext102)
                    code: extension:ext102
                ring_strategy: simultaneous
                timeout: 30
                fail_over_destination:
                  name: Sales Voicemail (voicemailbox:vm_sales)
                  code: voicemailbox:vm_sales
                user_id: null
                links:
                  - href: /sites/6/ring-groups/10
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - Site Features - Ring Groups
      summary: Update Ring Group Configuration
      description: Updates an existing ring group. Provide only fields to be changed.
      operationId: updateSiteRingGroupById
      security:
        - oAuth2:
            - write
      requestBody:
        description: Ring group attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RingGroupUpdateRequest'
            example:
              name: Sales & Support Combined
              destination_codes:
                - device:dev101
                - extension:ext_support
              ring_strategy: sequential
              timeout: 25
              fail_over_destination_code: menu:main_company_menu
      responses:
        '200':
          description: Ring Group Updated Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RingGroupResponse'
              example:
                id: 10
                site_id: 6
                name: Sales & Support Combined
                destination_codes:
                  - device:dev101
                  - extension:ext_support
                destinations:
                  - name: Sales Phone 1
                    code: device:dev101
                  - name: Support Ext
                    code: extension:ext_support
                ring_strategy: sequential
                timeout: 25
                fail_over_destination:
                  name: Main Company Menu
                  code: menu:main_company_menu
                user_id: null
                links:
                  - href: /sites/6/ring-groups/10
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    delete:
      tags:
        - Site Features - Ring Groups
      summary: Delete Ring Group
      description: Permanently deletes a specific ring group.
      operationId: deleteSiteRingGroupById
      security:
        - oAuth2:
            - write
      responses:
        '204':
          description: Ring Group Deleted Successfully.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /sites/{siteId}/ring-groups/{ringGroupId}/transfer:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/RingGroupIdPath'
    post:
      tags:
        - Site Features - Ring Groups
      summary: Transfer Ring Group to Another Site
      description: |
        Moves a ring group from its current site (specified in the path) 
        to a new target site (specified in the request body) within the same customer account.
      operationId: transferSiteRingGroup
      security:
        - oAuth2:
            - write
            - admin
      requestBody:
        description: The identifier of the new site to which the ring group should be transferred.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                new_site_id:
                  type: integer
                  format: int64
                  description: The unique identifier of the target site for the ring group.
                  example: 7
              required:
                - new_site_id
              example:
                new_site_id: 7
      responses:
        '200':
          description: Ring Group transferred successfully. The response includes the ring group details in its new site context.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RingGroupResponse'
              example:
                id: 10
                site_id: 7
                name: Sales Team
                destination_codes:
                  - device:dev_sales1
                  - extension:ext_sales_mobile
                destinations:
                  - name: Sales Phone 1
                    code: device:dev_sales1
                  - name: Sales Mobile Ext
                    code: extension:ext_sales_mobile
                ring_strategy: simultaneous
                timeout: 30
                fail_over_destination_code: voicemailbox:vm_sales
                fail_over_destination:
                  name: Sales Voicemail
                  code: voicemailbox:vm_sales
                user_id: null
                links:
                  - href: /sites/7/ring-groups/10
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Not Found - The original ring group, its current site, or the new target site was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: error
                error: Ring group, current site, or target site not found.
                error_code: RESOURCE_NOT_FOUND_FOR_TRANSFER
  /sites/{siteId}/schedules:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Schedules
      summary: List Schedules for a Site
      description: Retrieve a paginated list of all schedules that belong to a site.
      operationId: listSiteSchedules
      security:
        - oAuth2:
            - read
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of schedules per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
      responses:
        '200':
          description: A paginated list of schedules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedScheduleListResponse'
              example:
                schedules:
                  - id: '7'
                    type: schedule
                    attributes:
                      name: Business Hours Rule
                      time_zone: America/Denver
                      start_hour: '09'
                      start_minute: '00'
                      end_hour: '17'
                      end_minute: '00'
                      start_weekday: Mon
                      end_weekday: Fri
                      exceptions: 12/25,01/01
                      positive_destination_code: menu:day_menu
                      negative_destination_code: voicemailbox:after_hours_vm
                      site_id: 6
                      positive_destination:
                        name: Day Menu
                        code: menu:day_menu
                      negative_destination:
                        name: After Hours Voicemail
                        code: voicemailbox:after_hours_vm
                    links:
                      self:
                        href: /sites/6/schedules/7
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  self:
                    href: /sites/6/schedules?page=1&page_size=25
                    rel: self
                    method: GET
                  first:
                    href: /sites/6/schedules?page=1&page_size=25
                    rel: first
                    method: GET
                  last:
                    href: /sites/6/schedules?page=1&page_size=25
                    rel: last
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
    post:
      tags:
        - Site Features - Schedules
      summary: Create Schedule for a Site
      description: Add a new schedule to the specified site.
      operationId: createSiteSchedule
      security:
        - oAuth2:
            - write
      requestBody:
        description: Configuration details for the new schedule.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleCreateRequest'
            example:
              data:
                type: schedule
                attributes:
                  name: Weekend Support Hours
                  time_zone: America/New_York
                  start_hour: '10'
                  start_minute: '00'
                  end_hour: '14'
                  end_minute: '00'
                  start_weekday: Sat
                  end_weekday: Sun
                  exceptions: ''
                  positive_destination_code: ring_group:weekend_support_rg
                  negative_destination_code: forward:on_call_pager
      responses:
        '201':
          description: Schedule Created Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleResponse'
              example:
                data:
                  id: '8'
                  type: schedule
                  attributes:
                    name: Weekend Support Hours
                    time_zone: America/New_York
                    site_id: 6
                    start_hour: '10'
                    start_minute: '00'
                    end_hour: '14'
                    end_minute: '00'
                    start_weekday: Sat
                    end_weekday: Sun
                    exceptions: ''
                    positive_destination_code: ring_group:weekend_support_rg
                    negative_destination_code: forward:on_call_pager
                    positive_destination:
                      name: Weekend Support RG
                      code: ring_group:weekend_support_rg
                    negative_destination:
                      name: On Call Pager Forward
                      code: forward:on_call_pager
                  links:
                    self:
                      href: /sites/6/schedules/8
                      rel: self
                      method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/schedules/{scheduleId}:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/ScheduleIdPath'
    get:
      tags:
        - Site Features - Schedules
      summary: Get Schedule Details
      operationId: getSiteScheduleById
      description: Retrieves the details of a specific Schedule.
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Schedule details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleResponse'
              example:
                data:
                  id: '7'
                  type: schedule
                  attributes:
                    name: Business Hours Rule
                    time_zone: America/Denver
                    start_hour: '09'
                    start_minute: '00'
                    end_hour: '17'
                    end_minute: '00'
                    start_weekday: Mon
                    end_weekday: Fri
                    exceptions: 12/25,01/01
                    positive_destination_code: menu:day_menu
                    negative_destination_code: voicemailbox:after_hours_vm
                    site_id: 6
                    positive_destination:
                      name: Day Menu
                      code: menu:day_menu
                    negative_destination:
                      name: After Hours Voicemail
                      code: voicemailbox:after_hours_vm
                  links:
                    self:
                      href: /sites/6/schedules/7
                      rel: self
                      method: GET
        '401':
          $ref: '#/components/responses/schedule_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/schedule_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/schedule_components-responses-NotFoundError'
    put:
      tags:
        - Site Features - Schedules
      summary: Update Schedule
      operationId: updateSiteScheduleById
      description: Updates an existing Schedule. Provide only the fields to be changed.
      security:
        - oAuth2:
            - write
      requestBody:
        description: Schedule attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleUpdateRequest'
            example:
              data:
                type: schedule
                attributes:
                  name: After Hours Support
                  time_zone: America/Los_Angeles
                  start_hour: '18'
                  start_minute: '00'
                  end_hour: '23'
                  end_minute: '59'
                  start_weekday: Mon
                  end_weekday: Fri
                  exceptions: 12/24,12/31
                  positive_destination_code: menu:support_night_menu
                  negative_destination_code: voicemailbox:general_support_vm
                  site_id: 6
                  positive_destination:
                    name: Support Night Menu
                    code: menu:support_night_menu
                  negative_destination:
                    name: General Support Voicemail
                    code: voicemailbox:general_support_vm
      responses:
        '200':
          description: Schedule updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleResponse'
              example:
                data:
                  id: '7'
                  type: schedule
                  attributes:
                    name: After Hours Support
                    time_zone: America/Los_Angeles
                    start_hour: '18'
                    start_minute: '00'
                    end_hour: '23'
                    end_minute: '59'
                    start_weekday: Mon
                    end_weekday: Fri
                    exceptions: 12/24,12/31
                    positive_destination_code: menu:support_night_menu
                    negative_destination_code: voicemailbox:general_support_vm
                    site_id: 6
                    positive_destination:
                      name: Support Night Menu
                      code: menu:support_night_menu
                    negative_destination:
                      name: General Support Voicemail
                      code: voicemailbox:general_support_vm
                  links:
                    self:
                      href: /sites/6/schedules/7
                      rel: self
                      method: GET
        '400':
          $ref: '#/components/responses/schedule_components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/schedule_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/schedule_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/schedule_components-responses-NotFoundError'
    delete:
      tags:
        - Site Features - Schedules
      summary: Delete a Schedule
      operationId: deleteSiteScheduleById
      description: Permanently deletes a Schedule.
      security:
        - oAuth2:
            - write
            - admin
      responses:
        '204':
          description: Schedule deleted successfully.
        '401':
          $ref: '#/components/responses/schedule_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/schedule_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/schedule_components-responses-NotFoundError'
  /sites/{siteId}/schedules/available:
    parameters:
      - $ref: '#/components/parameters/SiteIdPath'
    get:
      tags:
        - Site Features - Schedules
      summary: List Available Schedules for a Site
      operationId: listSiteAvailableSchedules
      description: Retrieves available and (if applicable) assigned Schedules that could be used by the Site or a User on the Site.
      security:
        - oAuth2:
            - read
      parameters:
        - name: userId
          in: query
          description: Optional. User ID to filter or contextualize available schedules.
          required: false
          schema:
            type: integer
            format: int64
            example: 10
      responses:
        '200':
          description: A list of available schedules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedScheduleListResponse'
              example:
                schedules:
                  - id: '15'
                    type: schedule
                    attributes:
                      name: Company Holiday Schedule Template
                      time_zone: America/New_York
                      start_hour: '00'
                      start_minute: '00'
                      end_hour: '23'
                      end_minute: '59'
                      start_weekday: Mon
                      end_weekday: Sun
                      exceptions: 12/25,01/01
                      positive_destination_code: menu:holiday_closed
                      negative_destination_code: menu:holiday_closed
                      site_id: null
                    links:
                      self:
                        href: /schedules/templates/15
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  self:
                    href: /sites/6/schedules/available?page=1&page_size=25
                    rel: self
                    method: GET
                  first:
                    href: /sites/6/schedules/available?page=1&page_size=25
                    rel: first
                    method: GET
                  last:
                    href: /sites/6/schedules/available?page=1&page_size=25
                    rel: last
                    method: GET
        '401':
          $ref: '#/components/responses/available_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/available_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/available_components-responses-SiteNotFoundError'
  /sites/{siteId}/schedules/{scheduleId}/transfer:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/ScheduleIdPath'
    post:
      tags:
        - Site Features - Schedules
      summary: Transfer Schedule to Another Site
      operationId: transferSiteSchedule
      description: Moves a schedule from its current site to a new target site.
      security:
        - oAuth2:
            - write
            - admin
      requestBody:
        description: The identifier of the new site for the schedule.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                new_site_id:
                  type: integer
                  format: int64
                  description: The unique identifier of the target site.
                  example: 8
              required:
                - new_site_id
              example:
                new_site_id: 8
      responses:
        '200':
          description: Schedule transferred successfully. Returns the schedule in its new site context.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleResponse'
              example:
                data:
                  id: '7'
                  type: schedule
                  attributes:
                    name: Business Hours Rule
                    time_zone: America/Denver
                    start_hour: '09'
                    start_minute: '00'
                    end_hour: '17'
                    end_minute: '00'
                    start_weekday: Mon
                    end_weekday: Fri
                    exceptions: 12/25,01/01
                    positive_destination_code: menu:day_menu
                    negative_destination_code: voicemailbox:after_hours_vm
                    site_id: 8
                    positive_destination:
                      name: Day Menu
                      code: menu:day_menu
                    negative_destination:
                      name: After Hours Voicemail
                      code: voicemailbox:after_hours_vm
                  links:
                    self:
                      href: /sites/8/schedules/7
                      rel: self
                      method: GET
        '400':
          $ref: '#/components/responses/transfer_components-responses-BadRequestError-2'
        '401':
          $ref: '#/components/responses/transfer_components-responses-UnauthorizedError-2'
        '403':
          $ref: '#/components/responses/transfer_components-responses-ForbiddenError-2'
        '404':
          $ref: '#/components/responses/transfer_components-responses-NotFoundError-2'
  /sites/{siteId}/seats:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Seats
      summary: List Seats for a Site
      description: Retrieve a paginated list of all seats configured for the specified site.
      operationId: listSiteSeats
      security:
        - oAuth2:
            - read
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of seats per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 25
      responses:
        '200':
          description: A paginated list of seats.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSeatListResponse'
              example:
                seats:
                  - id: 25
                    site_id: 6
                    name: Basic User Seat
                    template_id: 10
                    user_id: 42
                    switchables:
                      - id: 123
                        feature_type: voicemailbox
                        feature_id: 15
                        name: User Voicemail
                    links:
                      - href: /sites/6/seats/25
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: /sites/6/seats?page=1&page_size=25
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
    post:
      tags:
        - Site Features - Seats
      summary: Create Seat for a Site
      description: Provisions a new set of telephony features (a "seat") for a user on a site, based on a selected template.
      operationId: createSiteSeat
      security:
        - oAuth2:
            - write
      requestBody:
        description: Details for the new seat, including the template and user.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeatCreateRequest'
            example:
              name: Standard Sales Seat
              template_id: 11
              user_id: 43
      responses:
        '201':
          description: Seat created and features provisioned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatResponse'
              example:
                id: 26
                site_id: 6
                name: Standard Sales Seat
                template_id: 11
                user_id: 43
                switchables:
                  - id: 125
                    feature_type: voicemailbox
                    feature_id: 16
                    name: Sales Voicemail
                  - id: 126
                    feature_type: extension
                    feature_id: 102
                    name: Sales Ext 102
                links:
                  - href: /sites/6/seats/26
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/seats/{seatId}:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/SeatIdPath'
    get:
      tags:
        - Site Features - Seats
      summary: Get Seat Details
      description: Retrieves detailed information for a specific seat by its ID.
      operationId: getSiteSeatById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Seat details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatResponse'
              example:
                id: 25
                site_id: 6
                name: Basic User Seat
                template_id: 10
                user_id: 42
                switchables:
                  - id: 123
                    feature_type: voicemailbox
                    feature_id: 15
                    name: User Voicemail
                links:
                  - href: /sites/6/seats/25
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - Site Features - Seats
      summary: Update Seat Information
      description: Updates information for an existing seat. Typically name or user assignment. Template is usually fixed post-creation.
      operationId: updateSiteSeatById
      security:
        - oAuth2:
            - write
      requestBody:
        description: Seat attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeatUpdateRequest'
            example:
              name: Advanced User Seat - Updated
              user_id: 44
      responses:
        '200':
          description: Seat updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatResponse'
              example:
                id: 25
                site_id: 6
                name: Advanced User Seat - Updated
                template_id: 10
                user_id: 44
                switchables:
                  - id: 123
                    feature_type: voicemailbox
                    feature_id: 15
                    name: User Voicemail
                links:
                  - href: /sites/6/seats/25
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    delete:
      tags:
        - Site Features - Seats
      summary: Delete Seat
      description: Permanently deletes a seat and de-provisions its associated features.
      operationId: deleteSiteSeatById
      security:
        - oAuth2:
            - write
            - admin
      responses:
        '204':
          description: Seat deleted successfully.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /sites/{siteId}/seats/{seatId}/transfer:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/SeatIdPath'
    post:
      tags:
        - Site Features - Seats
      summary: Transfer Seat to Another Site
      description: |
        Moves a seat (and its provisioned features) from its current site 
        to a new target site within the same customer account.
      operationId: transferSiteSeat
      security:
        - oAuth2:
            - write
            - admin
      requestBody:
        description: The identifier of the new site to which the seat should be transferred.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                new_site_id:
                  type: integer
                  format: int64
                  description: The unique identifier of the target site for the seat.
                  example: 7
              required:
                - new_site_id
              example:
                new_site_id: 7
      responses:
        '200':
          description: Seat transferred successfully. The response includes the seat details in its new site context.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatResponse'
              example:
                id: 25
                site_id: 7
                name: Basic User Seat
                template_id: 10
                user_id: 42
                switchables:
                  - id: 123
                    feature_type: voicemailbox
                    feature_id: 15
                    name: User Voicemail
                links:
                  - href: /sites/7/seats/25
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Not Found - The original seat, its current site, or the new target site was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: error
                error: Seat, current site, or target site not found.
                error_code: RESOURCE_NOT_FOUND_FOR_TRANSFER
  /sites/{siteId}/sip-trunks:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - SIP Trunks
      summary: List SIP Trunks for a Site
      description: Retrieve a paginated list of all SIP Trunks configured for the specified site.
      operationId: listSiteSipTrunks
      security:
        - oAuth2:
            - read
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of SIP Trunks per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
      responses:
        '200':
          description: A paginated list of SIP Trunks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSipTrunkListResponse'
              example:
                sip_trunks:
                  - id: 161
                    site_id: 6
                    name: Main Office SIP Trunk
                    login: main_trunk_user
                    active: true
                    channel_limit: 10
                    contact_ip: 1.2.3.4:5060
                    acl: 0.0.0.0/0
                    caller_id_name: Teliax HQ
                    caller_id_number: '+13035551212'
                    disable_comfort_noise: false
                    timeout: 120
                    fail_over_destination_code: menu:main_ivr
                    user_id: null
                    links:
                      - href: /sites/6/sip-trunks/161
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  self:
                    href: /sites/6/sip-trunks?page=1&page_size=25
                    rel: self
                    method: GET
                  first:
                    href: /sites/6/sip-trunks?page=1&page_size=25
                    rel: first
                    method: GET
                  last:
                    href: /sites/6/sip-trunks?page=1&page_size=25
                    rel: last
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
    post:
      tags:
        - Site Features - SIP Trunks
      summary: Create SIP Trunk for a Site
      description: Adds a new SIP Trunk to the specified site. Login and password will be generated if not provided.
      operationId: createSiteSipTrunk
      security:
        - oAuth2:
            - write
      requestBody:
        description: Configuration details for the new SIP Trunk.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SipTrunkCreateRequest'
            example:
              name: Branch Office Trunk
              login: branch_user
              active: true
              channel_limit: 5
              contact_ip: 2.3.4.5:5060
              acl: 192.168.2.0/24
              caller_id_name: Branch Office
              caller_id_number: '+17205550102'
              disable_comfort_noise: false
              timeout: 60
              fail_over_destination_code: voicemailbox:branch_main_vm
      responses:
        '201':
          description: SIP Trunk Created Successfully. Includes generated credentials if applicable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipTrunkResponse'
              example:
                id: 162
                site_id: 6
                name: Branch Office Trunk
                login: branch_user_generated
                password: newlyGeneratedSipPassword
                active: true
                channel_limit: 5
                contact_ip: 2.3.4.5:5060
                acl: 192.168.2.0/24
                caller_id_name: Branch Office
                caller_id_number: '+17205550102'
                disable_comfort_noise: false
                timeout: 60
                fail_over_destination_code: voicemailbox:branch_main_vm
                user_id: null
                links:
                  - href: /sites/6/sip-trunks/162
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
  /sites/{siteId}/sip-trunks/{sipTrunkId}:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/SipTrunkIdPath'
    get:
      tags:
        - Site Features - SIP Trunks
      summary: Get SIP Trunk Details
      operationId: getSiteSipTrunkById
      description: Retrieves the details of a specific SIP Trunk.
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: SIP Trunk details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipTrunkResponse'
              example:
                id: 161
                site_id: 6
                name: Main Office SIP Trunk
                login: main_trunk_user
                active: true
                channel_limit: 10
                contact_ip: 1.2.3.4:5060
                acl: 0.0.0.0/0
                caller_id_name: Teliax HQ
                caller_id_number: '+13035551212'
                disable_comfort_noise: false
                timeout: 120
                fail_over_destination_code: menu:main_ivr
                fail_over_destination:
                  name: Main IVR Menu
                  code: menu:main_ivr
                user_id: null
                links:
                  - href: /sites/6/sip-trunks/161
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SipTrunkNotFoundError'
    put:
      tags:
        - Site Features - SIP Trunks
      summary: Update SIP Trunk
      operationId: updateSiteSipTrunkById
      description: Updates an existing SIP Trunk. Only attributes provided in the request body will be updated. Password update should use regenerate-password endpoint.
      security:
        - oAuth2:
            - write
      requestBody:
        description: SIP Trunk attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SipTrunkUpdateRequest'
            example:
              name: Primary Outbound Trunk - Updated
              active: false
              channel_limit: 15
              contact_ip: 1.2.3.5:5060
              caller_id_name: Main Line Updated
      responses:
        '200':
          description: SIP Trunk updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipTrunkResponse'
              example:
                id: 161
                site_id: 6
                name: Primary Outbound Trunk - Updated
                login: main_trunk_user
                active: false
                channel_limit: 15
                contact_ip: 1.2.3.5:5060
                acl: 0.0.0.0/0
                caller_id_name: Main Line Updated
                caller_id_number: '+13035551212'
                disable_comfort_noise: false
                timeout: 120
                fail_over_destination_code: menu:main_ivr
                fail_over_destination:
                  name: Main IVR Menu
                  code: menu:main_ivr
                user_id: null
                links:
                  - href: /sites/6/sip-trunks/161
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SipTrunkNotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
    delete:
      tags:
        - Site Features - SIP Trunks
      summary: Delete a SIP Trunk
      operationId: deleteSiteSipTrunkById
      description: Permanently deletes a SIP Trunk.
      security:
        - oAuth2:
            - write
      responses:
        '204':
          description: SIP Trunk deleted successfully.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SipTrunkNotFoundError'
  /sites/{siteId}/sip-trunks/{sipTrunkId}/regenerate-password:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/SipTrunkIdPath'
    patch:
      tags:
        - Site Features - SIP Trunks
      summary: Regenerate SIP Trunk Password
      operationId: regenerateSiteSipTrunkPassword
      description: |
        Generates a new random SIP password for the specified SIP Trunk.
        The old password will no longer be valid. The SIP Trunk endpoint will need to be updated.
        The new password is included in the response.
      security:
        - oAuth2:
            - write
      responses:
        '200':
          description: SIP Trunk password regenerated successfully. The new password is included.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipTrunkResponseWithPassword'
              example:
                id: 161
                site_id: 6
                name: Main Office SIP Trunk
                login: main_trunk_user
                password: newGeneratedS3cur3SipP@ss!
                active: true
                links:
                  - href: /sites/6/sip-trunks/161
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SipTrunkNotFoundError'
  /sites/{siteId}/sip-trunks/{sipTrunkId}/status:
    $ref: ./sites/sip-trunks/status.yaml#/paths/~1sites~1{siteId}~1sip-trunks~1{sipTrunkId}~1status
  /sites/{siteId}/sip-trunks/{sipTrunkId}/transfer:
    parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/SipTrunkIdPath'
    post:
      tags:
        - Site Features - SIP Trunks
      summary: Transfer SIP Trunk
      operationId: transfer_sip_trunk
      description: Transfer a SIP Trunk to a different Site
      security:
        - oAuth2:
            - write
            - admin
      requestBody:
        description: Transfer parameters
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                      enum:
                        - transfer
                      example: transfer
                    attributes:
                      type: object
                      required:
                        - new_site_id
                      properties:
                        new_site_id:
                          type: integer
                          format: int64
                          description: ID of the site to transfer the SIP Trunk to
                          example: 8
              example:
                data:
                  type: transfer
                  attributes:
                    new_site_id: 8
      responses:
        '200':
          description: SIP Trunk Detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SipTrunkResponse'
              example:
                id: 161
                site_id: 8
                name: Main Office SIP Trunk
                login: main_trunk_user
                active: true
                channel_limit: 10
                contact_ip: 1.2.3.4:5060
                acl: 0.0.0.0/0
                caller_id_name: Teliax HQ
                caller_id_number: '+13035551212'
                disable_comfort_noise: false
                timeout: 120
                fail_over_destination_code: menu:main_ivr
                fail_over_destination:
                  name: Main IVR Menu
                  code: menu:main_ivr
                user_id: null
                links:
                  - href: /sites/8/sip-trunks/161
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Couldn't find Site or the SIP Trunk Record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: error
                error: Original SIP Trunk, current site, or target site not found.
                error_code: RESOURCE_NOT_FOUND_FOR_TRANSFER
  /sites/{siteId}/voice-mail-boxes:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Voicemail Boxes
      summary: List Voicemail Boxes for a Site
      operationId: listSiteVoicemailBoxes
      description: Retrieve a paginated list of all voicemail boxes configured for the specified site.
      security:
        - oAuth2:
            - read
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of voicemail boxes per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
      responses:
        '200':
          description: A paginated list of voicemail boxes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVoicemailBoxListResponse'
              example:
                data:
                  - id: '553'
                    type: voicemail-box
                    attributes:
                      name: Sales Team Voicemail
                      pin: '****'
                      notification_emails: sales@example.com,manager@example.com
                      status: active
                      site_id: 6
                      announcement_url: https://cdn.example.com/greetings/vm553.mp3
                    links:
                      self:
                        href: /sites/6/voice-mail-boxes/553
                        rel: self
                        method: GET
                links:
                  self:
                    href: /sites/6/voice-mail-boxes?page%5Bnumber%5D=1&page_size=25
                    rel: self
                    method: GET
                  first:
                    href: /sites/6/voice-mail-boxes?page%5Bnumber%5D=1&page_size=25
                    rel: first
                    method: GET
                  last:
                    href: /sites/6/voice-mail-boxes?page%5Bnumber%5D=1&page_size=25
                    rel: last
                    method: GET
                meta:
                  total_items: 1
                  total_pages: 1
                  current_page: 1
                  per_page: 25
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
    post:
      tags:
        - Site Features - Voicemail Boxes
      summary: Create Voicemail Box for a Site
      operationId: createSiteVoicemailBox
      description: Adds a new voicemail box to the specified site. Announcement greeting can be uploaded.
      security:
        - oAuth2:
            - write
      requestBody:
        description: Configuration details for the new voicemail box.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VoicemailBoxCreateRequest'
      responses:
        '201':
          description: Voicemail Box Created Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoicemailBoxResponseData'
              example:
                id: '554'
                type: voicemail-box
                attributes:
                  name: Support Voicemail
                  pin: '****'
                  notification_emails: support@example.com
                  status: active
                  site_id: 6
                  announcement_url: https://cdn.example.com/greetings/vm554_uploaded.mp3
                links:
                  self:
                    href: /sites/6/voice-mail-boxes/554
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/voice-mail-boxes/{voiceMailBoxId}:
    $ref: ./sites/voice-mail-boxes/voice-mail-box.yaml#/paths/~1sites~1{siteId}~1voice-mail-boxes~1{voiceMailBoxId}
  /sites/{siteId}/voice-mail-boxes/available:
    parameters:
      - $ref: '#/components/parameters/SiteId'
    get:
      tags:
        - Site Features - Voicemail Boxes
      summary: List Available Voicemail Boxes for a Site
      operationId: listSiteAvailableVoicemailBoxes
      description: Retrieves available Voicemail Boxes that could be used by the Site or a User on the Site.
      security:
        - oAuth2:
            - read
      parameters:
        - name: user_id
          in: query
          description: Optional. User ID to filter or contextualize available voicemail boxes.
          required: false
          schema:
            type: integer
            format: int64
            example: 10
      responses:
        '200':
          description: A list of available voicemail boxes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVoicemailBoxListResponse'
              example:
                data:
                  - id: vm_template_1
                    type: voicemail-box
                    attributes:
                      name: General Voicemail Template
                      pin: '****'
                      notification_emails: template@example.com
                      status: active
                      site_id: null
                    links:
                      self:
                        href: /voicemail-templates/vm_template_1
                        rel: self
                        method: GET
                links:
                  self:
                    href: /sites/6/voice-mail-boxes/available?page%5Bnumber%5D=1&page_size=25
                    rel: self
                    method: GET
                  first:
                    href: /sites/6/voice-mail-boxes/available?page%5Bnumber%5D=1&page_size=25
                    rel: first
                    method: GET
                  last:
                    href: /sites/6/voice-mail-boxes/available?page%5Bnumber%5D=1&page_size=25
                    rel: last
                    method: GET
                meta:
                  total_items: 1
                  total_pages: 1
                  current_page: 1
                  per_page: 25
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
  /sites/{siteId}/voice-mail-boxes/{voiceMailBoxId}/transfer:
    $ref: ./sites/voice-mail-boxes/transfer.yaml#/paths/~1sites~1{siteId}~1voice-mail-boxes~1{voiceMailBoxId}~1transfer
  /sites/{siteId}/voice-mail-boxes/{voiceMailBoxId}/upload:
    $ref: ./sites/voice-mail-boxes/upload.yaml#/paths/~1sites~1{siteId}~1voice-mail-boxes~1{voiceMailBoxId}~1upload
  /sites/{siteId}/voicemails:
    $ref: ./sites/voicemails/index.yaml#/paths/~1sites~1{siteId}~1voicemails
  /sites/{siteId}/voicemails/{voicemailId}/transfer:
    $ref: ./sites/voicemails/transfer.yaml#/paths/~1sites~1{siteId}~1voicemails~1{voicemailId}~1transfer
  /sites/{siteId}/voicemails/{voicemailId}/upload:
    $ref: ./sites/voicemails/upload.yaml#/paths/~1sites~1{siteId}~1voicemails~1{voicemailId}~1upload
  /statements:
    get:
      tags:
        - Statements
      summary: List Account Statements
      description: |
        Retrieves a list of account statements (receipts) for the authenticated user's account.
        Statements are generated at the end of each service interval (e.g., monthly) and are typically paginated.
      operationId: listStatements
      security:
        - oAuth2:
            - read
      parameters:
        - name: page_size
          in: query
          description: The number of statement entries to return per page.
          required: false
          schema:
            type: integer
            default: 25
            minimum: 1
            maximum: 100
            example: 25
        - name: page
          in: query
          description: The page number of the result set to return.
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
            example: 1
      responses:
        '200':
          description: A list of account statements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementListResponse'
              example:
                statements:
                  - id: 501
                    statement_number: STMT-2023-10-001
                    period_start: '2023-10-01T00:00:00Z'
                    period_end: '2023-10-31T23:59:59Z'
                    issue_date: '2023-11-01T00:00:00Z'
                    due_date: '2023-11-15T00:00:00Z'
                    total_amount: '150.75'
                    currency: USD
                    status: paid
                    created_at_original: 02/02/2018
                    closed_at_original: 02/02/2018
                    image_url: https://cdn.example.com/statements/stmt_501.png
                    pdf_url: https://cdn.example.com/statements/stmt_501.pdf
                    cdr_export_url: https://cdn.example.com/reports/cdr_stmt_501.csv
                    links:
                      - href: /statements/501
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: /statements?page=1&page_size=25
                    rel: self
        '401':
          $ref: '#/components/responses/statements_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/statements_components-responses-ForbiddenError'
  /statements/{statementId}:
    parameters:
      - name: statementId
        in: path
        description: The unique identifier of the statement.
        required: true
        schema:
          type: integer
          format: int64
          example: 501
    get:
      tags:
        - Statements
      summary: Get Statement Details
      description: Retrieves detailed information for a specific account statement by its ID.
      operationId: getStatementById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Successfully retrieved statement details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementResponse'
              example:
                id: 501
                statement_number: STMT-2023-10-001
                period_start: '2023-10-01T00:00:00Z'
                period_end: '2023-10-31T23:59:59Z'
                issue_date: '2023-11-01T00:00:00Z'
                due_date: '2023-11-15T00:00:00Z'
                total_amount: '150.75'
                currency: USD
                status: paid
                created_at_original: 02/02/2018
                closed_at_original: 02/02/2018
                image_url: https://cdn.example.com/statements/stmt_501.png
                pdf_url: https://cdn.example.com/statements/stmt_501.pdf
                cdr_export_url: https://cdn.example.com/reports/cdr_stmt_501.csv
                links:
                  - href: /statements/501
                    rel: self
                    method: GET
                  - href: /statements/501/download?format=pdf
                    rel: download
                    title: Download PDF
                    method: GET
        '401':
          $ref: '#/components/responses/statements_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/statements_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/statements_components-responses-NotFoundError'
  /templates:
    get:
      tags:
        - Templates
      summary: List Templates
      description: |
        Retrieves a list of service templates available to the authenticated account.
        Can be paginated and filtered, for example, to show all templates in the system (with `all=true`) or search by name (`q`).
      operationId: listTemplates
      security:
        - oAuth2:
            - read
      parameters:
        - name: page_size
          in: query
          description: Number of template entries per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
        - name: page
          in: query
          description: Page number of the result set.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: all
          in: query
          description: If true, fetches all templates in the system (admin); otherwise, fetches current account's templates.
          required: false
          schema:
            type: boolean
            default: false
        - name: q
          in: query
          description: Free text search string to filter templates by name.
          required: false
          schema:
            type: string
            example: Sales Profile
      responses:
        '200':
          description: A list of templates.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateListResponse'
              example:
                templates:
                  - $ref: '#/components/schemas/TemplateResponse/example'
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: /templates?page=1&page_size=25
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/templates_components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/templates_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/templates_components-responses-ForbiddenError'
    post:
      tags:
        - Templates
      summary: Create a New Template
      description: |
        Creates a new service template with a defined set of features and their configurations.
        This allows for streamlined provisioning of new users or services.
      operationId: createTemplate
      security:
        - oAuth2:
            - write
      requestBody:
        description: Configuration details for the new template.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateCreateRequest'
            example:
              name: Standard Employee Setup
              features:
                switchable: PhoneNumber
                position: 1
                attrs:
                  - name: name
                    derivative: calculated
                    default: User Phone
                destinations:
                  - switchable: Device
                    position: 2
                    target_type: destination
                    attrs:
                      - name: name
                        derivative: calculated
                        default: Desk Phone
      responses:
        '201':
          description: Template created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
        '400':
          $ref: '#/components/responses/templates_components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/templates_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/templates_components-responses-ForbiddenError'
  /templates/{templateId}:
    parameters:
      - name: templateId
        in: path
        description: The unique identifier of the template.
        required: true
        schema:
          type: integer
          format: int64
          example: 1
    get:
      tags:
        - Templates
      summary: Get Template Details
      description: Retrieves detailed information for a specific service template by its ID.
      operationId: getTemplateById
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: Successfully retrieved template details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
        '401':
          $ref: '#/components/responses/templates_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/templates_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/templates_components-responses-NotFoundError'
    put:
      tags:
        - Templates
      summary: Update an Existing Template
      description: Updates the configuration of an existing service template.
      operationId: updateTemplateById
      security:
        - oAuth2:
            - write
      requestBody:
        description: Template attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateUpdateRequest'
            example:
              name: Standard Employee Setup - Revised
              features:
                switchable: PhoneNumber
                position: 1
                attrs:
                  - name: name
                    derivative: calculated
                    default: User Direct Line
      responses:
        '200':
          description: Template updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
        '400':
          $ref: '#/components/responses/templates_components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/templates_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/templates_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/templates_components-responses-NotFoundError'
    delete:
      tags:
        - Templates
      summary: Delete a Template
      description: Permanently deletes a specific service template. This action cannot be undone.
      operationId: deleteTemplateById
      security:
        - oAuth2:
            - write
            - admin
      parameters:
        - $ref: '#/components/parameters/TemplateIdPath'
      responses:
        '204':
          description: Template deleted successfully. No content is returned.
        '401':
          $ref: '#/components/responses/templates_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/templates_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/templates_components-responses-NotFoundError'
  /thin-clients:
    get:
      tags:
        - Thin Clients
      summary: List Available Thin Clients
      description: |
        Retrieves a list of all available Thin Clients that can be assigned to Sites.
        This information is typically used during Site setup or modification to select the appropriate call processing node.
      operationId: listAvailableThinClients
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: A list of available Thin Clients.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThinClientListResponse'
              example:
                thin_clients:
                  - id: 11
                    name: Denver - Bonsai 5
                    active: true
                    category: public
                    ipv4_address: 63.211.239.115
                    provider: Teliax Inc.
                    identification: 00-21-5e-96-e3-bc
                  - id: 12
                    name: Denver - Bonsai 6
                    active: true
                    category: public
                    ipv4_address: 63.211.239.116
                    provider: Teliax Inc.
                    identification: 00-21-5e-96-fe-6c
        '401':
          $ref: '#/components/responses/thin-clients_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/thin-clients_components-responses-ForbiddenError'
  /thin-clients/{thinClientId}:
    $ref: ./thin-clients.yaml#/paths/~1thin-clients~1{thinClientId}
  /timezones:
    get:
      tags:
        - Timezones
      summary: List Available Timezones
      description: |
        Retrieves a list of all IANA timezone identifiers supported by the system.
        This information is essential for accurately configuring any time-dependent settings or features.
      operationId: listAvailableTimezones
      security:
        - oAuth2:
            - read
      responses:
        '200':
          description: A list of available IANA timezone identifiers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimezoneListResponse'
              example:
                timezones:
                  - America/New_York
                  - America/Chicago
                  - America/Denver
                  - America/Los_Angeles
                  - Europe/London
                  - Etc/UTC
        '401':
          $ref: '#/components/responses/timezones_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/timezones_components-responses-ForbiddenError'
  /users:
    get:
      tags:
        - Users
      summary: List Users
      description: |
        Retrieves a list of all users associated with the authenticated account.
        The list can be paginated and is typically sorted by user name.
      operationId: listUsers
      security:
        - oAuth2:
            - read
            - admin
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of users per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
      responses:
        '200':
          description: A paginated list of users associated with the account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
              example:
                users:
                  - id: 5
                    first_name: Jane
                    last_name: Doe
                    email: jane.doe@example.com
                    role: administrator
                    active: true
                    locale: en-US
                    links:
                      - href: /users/5
                        rel: self
                        method: GET
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: /users?page=1&page_size=25
                    rel: self
                    method: GET
        '401':
          $ref: '#/components/responses/users_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/users_components-responses-ForbiddenError'
    post:
      tags:
        - Users
      summary: Add a New User
      description: |
        Creates a new user within the authenticated account.
        The new user will typically receive a confirmation email to activate their account and set a password.
        Requires administrative privileges.
      operationId: addUser
      security:
        - oAuth2:
            - write
            - admin
      requestBody:
        description: Details of the new user to be created.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
            example:
              first_name: Alice
              last_name: Wonderland
              email: alice.wonder@example.com
              role: user
              active: false
              locale: en-GB
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
              example:
                id: 7
                first_name: Alice
                last_name: Wonderland
                email: alice.wonder@example.com
                role: user
                active: false
                locale: en-GB
                links:
                  - href: /users/7
                    rel: self
                    method: GET
        '400':
          $ref: '#/components/responses/users_components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/users_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/users_components-responses-ForbiddenError'
        '409':
          $ref: '#/components/responses/users_components-responses-ConflictError'
  /users/{userId}:
    parameters:
      - $ref: '#/components/parameters/UserIdPath'
    get:
      tags:
        - Users
      summary: Get User Details
      description: Retrieves detailed information for a specific user by their ID.
      operationId: getUserById
      security:
        - oAuth2:
            - read
            - admin
      responses:
        '200':
          description: Successfully retrieved user details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          $ref: '#/components/responses/users_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/users_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/users_components-responses-NotFoundError'
    put:
      tags:
        - Users
      summary: Update User Information
      description: |
        Updates information for a specific user by their ID.
        Any parameters not provided in the request body will be left unchanged (PATCH-like behavior for PUT).
        Requires administrative privileges.
      operationId: updateUserById
      security:
        - oAuth2:
            - write
            - admin
      requestBody:
        description: User attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
            example:
              first_name: Alice Anne
              locale: en-US
              role: team_lead
      responses:
        '200':
          description: User updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          $ref: '#/components/responses/users_components-responses-BadRequestError'
        '401':
          $ref: '#/components/responses/users_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/users_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/users_components-responses-NotFoundError'
    delete:
      tags:
        - Users
      summary: Delete User
      description: |
        Permanently deletes a specific user by their ID.
        This action cannot be undone. Requires administrative privileges.
      operationId: deleteUserById
      security:
        - oAuth2:
            - write
            - admin
      responses:
        '204':
          description: User deleted successfully. No content is returned.
        '401':
          $ref: '#/components/responses/users_components-responses-UnauthorizedError'
        '403':
          $ref: '#/components/responses/users_components-responses-ForbiddenError'
        '404':
          $ref: '#/components/responses/users_components-responses-NotFoundError'
components:
  securitySchemes:
    oAuth2:
      type: oauth2
      description: |
        OAuth 2.0 Authentication
        This API uses OAuth 2.0 for authentication. To obtain an access token:
        1. Make a POST request to the `/auth/token` endpoint with your client credentials
        2. Include the access token in subsequent requests using the Authorization header:
           `Authorization: Bearer YOUR_ACCESS_TOKEN`
        Contact your account manager to obtain client credentials.
      flows:
        clientCredentials:
          tokenUrl: https://api.ringer.tel/v1/auth/token
          scopes:
            read: Read access to API resources
            write: Write access to API resources
            admin: Administrative access
  schemas:
    AccountUpdateRequest:
      type: object
      description: Specifies the fields that can be updated for an account.
      properties:
        name:
          type: string
          description: The official name of the account/company.
          example: Innovatech Global Solutions Ltd.
        locale:
          type: string
          description: Preferred language and regional settings (e.g., "en-US", "en-GB").
          example: en-GB
        balance_preference_in_dollars:
          type: string
          description: Desired minimum balance to maintain, in dollars.
          example: '150.00'
        recharge_preference_in_dollars:
          type: string
          description: Amount to automatically recharge when balance falls below preference, in dollars.
          example: '250.00'
        maximum_recharge_preference_in_dollars:
          type: string
          description: Maximum permissible auto-recharge amount in a single transaction, in dollars.
          example: '1500.00'
      example:
        name: Innovatech Solutions - EMEA Branch
    AccountResponse:
      type: object
      description: Detailed information about a customer account.
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the account.
          example: 101
        name:
          type: string
          description: The official name of the account/company.
          example: Innovatech Solutions Ltd.
        status:
          type: string
          description: Current status of the account.
          enum:
            - active
            - inactive
            - suspended
            - pending_confirmation
            - closed
          example: active
        plan:
          type: string
          description: Identifier or name of the current subscription plan.
          example: enterprise_annual_v2
        email:
          type: string
          format: email
          description: Primary contact email for the account (often billing or admin).
          example: billing@innovatech.com
        phone:
          type: string
          description: Primary contact phone number for the account.
          example: '+14155550100'
        created_at:
          type: string
          format: date-time
          description: Timestamp of when the account was created.
          example: '2023-01-15T10:30:00Z'
        locale:
          type: string
          description: Preferred language and regional settings for the account.
          example: en-US
        balance:
          type: string
          description: Current monetary balance of the account.
          example: '4276.85'
        balance_preference_in_dollars:
          type: string
          description: Desired minimum balance to maintain, in dollars.
          example: '100.00'
        recharge_preference_in_dollars:
          type: string
          description: Amount to automatically recharge when balance falls below preference, in dollars.
          example: '200.00'
        maximum_recharge_preference_in_dollars:
          type: string
          description: Maximum permissible auto-recharge amount in a single transaction, in dollars.
          example: '1000.00'
        international_enabled:
          type: boolean
          description: Flag indicating if international calling/services are enabled.
          example: true
        current_user:
          $ref: '#/components/schemas/UserSummary'
        address:
          $ref: '#/components/schemas/AddressResponse'
        links:
          type: array
          description: HATEOAS links related to the account.
          items:
            $ref: '#/components/schemas/schemas-Link'
      required:
        - id
        - name
        - status
        - email
        - created_at
        - locale
        - balance
      example:
        id: 101
        name: Innovatech Solutions Ltd.
        status: active
        plan: enterprise_annual_v2
        email: billing@innovatech.com
        phone: '+14155550100'
        created_at: '2023-01-15T10:30:00Z'
        locale: en-US
        balance: '4276.85'
        balance_preference_in_dollars: '100.00'
        recharge_preference_in_dollars: '200.00'
        maximum_recharge_preference_in_dollars: '1000.00'
        international_enabled: true
        current_user:
          id: 5
          first_name: Jane
          last_name: Doe
          email: jane.doe@innovatech.com
          role: administrator
        address:
          id: 25
          email: billing@innovatech.com
          street_address: 123 Tech Park, Suite 100
          country: US
          city: San Francisco
          state_province: CA
          postal_code: '94107'
          contact_number: '+14155550100'
        links:
          - href: /account
            rel: self
            method: GET
    UserSummary:
      type: object
      description: A brief summary of a user associated with an account.
      properties:
        id:
          type: integer
          format: int64
          example: 5
        first_name:
          type: string
          example: Jane
        last_name:
          type: string
          example: Doe
        email:
          type: string
          format: email
          example: jane.doe@innovatech.com
        role:
          type: string
          description: Role of the user within the account (e.g., administrator, user).
          example: administrator
      required:
        - id
        - email
        - role
    AddressCore:
      type: object
      description: Core fields defining an address.
      properties:
        email:
          type: string
          format: email
          description: Contact email address associated with this address record.
          example: contact@example.com
        street_address:
          type: string
          description: Full street address, including building number, street name, and suite/apartment if applicable.
          example: 123 Commerce Street, Suite 101
        country:
          type: string
          description: Two-letter ISO 3166-1 alpha-2 country code (e.g., US, GB, CA).
          example: US
        city:
          type: string
          description: City name.
          example: Metropolis
        state_province:
          type: string
          description: State, province, or region, as applicable for the country.
          example: NY
        postal_code:
          type: string
          description: Postal or ZIP code.
          example: '10001'
        contact_number:
          type: string
          description: A contact phone number associated with this address, preferably in E.164 format.
          example: '+12125551234'
      required:
        - email
        - street_address
        - country
        - city
        - postal_code
        - contact_number
      example:
        email: shipping@example.com
        street_address: 789 Distribution Way
        country: CA
        city: Toronto
        state_province: 'ON'
        postal_code: M5V 2T6
        contact_number: '+14165550199'
    AddressUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/AddressCore'
      description: All fields required to update an existing address. For PUT, typically all fields are provided.
      required:
        - email
        - street_address
        - country
        - city
        - postal_code
        - contact_number
      example:
        email: billing.dept@example.com
        street_address: Main Square 1, Finance Tower
        country: DE
        city: Frankfurt
        state_province: HE
        postal_code: '60313'
        contact_number: '+496912345678'
    AddressResponse:
      allOf:
        - $ref: '#/components/schemas/AddressCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the address record.
              example: 671
            links:
              type: array
              description: HATEOAS links related to this address.
              items:
                $ref: '#/components/schemas/schemas-Link'
              nullable: true
          required:
            - id
            - email
            - street_address
            - country
            - city
            - postal_code
            - contact_number
      description: Detailed information about an address record, including its unique ID.
      example:
        id: 671
        email: contact@example.com
        street_address: 123 Commerce Street, Suite 101
        country: US
        city: Metropolis
        state_province: NY
        postal_code: '10001'
        contact_number: '+12125551234'
        links:
          - href: /addresses/671
            rel: self
            method: GET
          - href: /account
            rel: account
            method: GET
    TokenRequest:
      type: object
      description: Parameters for requesting an OAuth 2.0 access token. Required fields vary by grant_type.
      properties:
        grant_type:
          type: string
          enum:
            - password
            - client_credentials
            - refresh_token
          description: The OAuth 2.0 grant type.
          example: password
        username:
          type: string
          nullable: true
          description: User's email address (required for `password` grant).
          example: developer@example.com
        password:
          type: string
          format: password
          nullable: true
          description: User's password (required for `password` grant).
          example: aVerySecurePassword123!
        refresh_token:
          type: string
          nullable: true
          description: Refresh token (required for `refresh_token` grant).
          example: def50200f29a807a83012f9a0904d71a...
        client_id:
          type: string
          description: The application's client ID.
          example: your_application_client_id
        client_secret:
          type: string
          description: The application's client secret.
          example: your_application_client_secret
        scope:
          type: string
          nullable: true
          description: (Optional) A space-separated list of requested scopes. The granted scopes may differ.
          example: read:profile write:data
      required:
        - grant_type
        - client_id
        - client_secret
      example:
        grant_type: client_credentials
        client_id: your_generic_client_id
        client_secret: your_generic_client_secret
        scope: read write
    TokenResponse:
      type: object
      description: Response containing the access token and related information.
      properties:
        access_token:
          type: string
          description: The issued OAuth 2.0 access token.
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOi...
        token_type:
          type: string
          description: Type of the token issued (typically "Bearer").
          example: Bearer
        expires_in:
          type: integer
          description: The lifetime in seconds of the access token.
          example: 7200
        refresh_token:
          type: string
          nullable: true
          description: Token that can be used to obtain a new access token when the current access token expires.
          example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOi...
        scope:
          type: string
          nullable: true
          description: Space-separated list of scopes that have been granted for this access token.
          example: read write
      required:
        - access_token
        - token_type
        - expires_in
      example:
        access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOi...
        token_type: Bearer
        expires_in: 7200
        refresh_token: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOi...
        scope: read write profile
    RevokeRequest:
      type: object
      description: Parameters for revoking an OAuth 2.0 token.
      properties:
        token:
          type: string
          description: The access token or refresh token to be revoked.
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOi...
        client_id:
          type: string
          description: The client ID of the application making the revocation request.
          example: your_application_client_id
        client_secret:
          type: string
          description: The client secret of the application making the revocation request.
          example: your_application_client_secret
      required:
        - token
        - client_id
        - client_secret
      example:
        token: specific_token_string_to_revoke
        client_id: your_application_client_id
        client_secret: your_application_client_secret
    ConfirmationRequest:
      type: object
      description: Contains the token needed to confirm a user account.
      properties:
        confirmation_token:
          type: string
          description: The unique token sent to the user after registration, used to verify and activate their account.
          example: i2W9OXLqCaKNHoQY07lVAkgPVaI
      required:
        - confirmation_token
      example:
        confirmation_token: valid_confirmation_token_string
    PasswordResetRequest:
      $ref: ./password.yaml#/components/schemas/PasswordResetRequest
    SignUpRequest:
      $ref: ./sign-up.yaml#/components/schemas/SignUpRequest
    CallBlockRequest:
      $ref: ./call-blocks.yaml#/components/schemas/CallBlockRequest
    CallBlockResponse:
      allOf:
        - $ref: '#/components/schemas/CallBlockCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the call block rule.
              example: 101
            site_id:
              type: integer
              format: int64
              description: Identifier of the site this call block rule belongs to.
              example: 6
            links:
              type: array
              description: HATEOAS links related to this call block rule.
              items:
                $ref: '#/components/schemas/schemas-Link'
              nullable: true
          required:
            - id
            - site_id
            - number_to_block
            - block_all_extensions
      description: Detailed information about a call block rule.
      example:
        id: 101
        site_id: 6
        number_to_block: '+14155550100'
        block_all_extensions: true
        applicable_extensions: null
        notes: Blocked due to spam reports.
        links:
          - href: /sites/6/call-blocks/101
            rel: self
            method: GET
    CallRecordResponse:
      $ref: ./call-records.yaml#/components/schemas/CallRecordResponse
    CountryCodeResponse:
      $ref: ./country-codes.yaml#/components/schemas/CountryCodeResponse
    CreditCardRequest:
      $ref: ./credit-cards.yaml#/components/schemas/CreditCardRequest
    CreditCardResponse:
      allOf:
        - $ref: '#/components/schemas/CreditCardCore'
        - type: object
          properties:
            links:
              type: array
              description: HATEOAS links related to this credit card.
              items:
                $ref: '#/components/schemas/schemas-Link'
              nullable: true
      description: Detailed information about a stored credit card (excluding sensitive full PAN).
      example:
        id: 101
        name: Primary Visa
        last4: '1111'
        brand: Visa
        exp_month: 12
        exp_year: 2025
        priority: 100
        active: true
        verified: true
        expired: false
        links:
          - href: /credit-cards/101
            rel: self
            method: GET
          - href: /credit-cards/101/verify
            rel: verify
            method: PATCH
    ItemRequest:
      $ref: ./items.yaml#/components/schemas/ItemRequest
    ItemResponse:
      allOf:
        - $ref: '#/components/schemas/ItemCore'
        - type: object
          properties:
            links:
              type: array
              description: HATEOAS links related to this item.
              items:
                $ref: '#/components/schemas/schemas-Link'
              nullable: true
      description: Detailed information about a billable item or feature.
      example:
        id: 449
        name: Emergency Call Service (E911)
        item_type: service_fee
        item_rules: e911_access
        item_price: '1.50'
        currency: USD
        price_deck_id: 10
        tax_category: 59
        tax_code: 8
        links:
          - href: /items/449
            rel: self
            method: GET
          - href: /price-decks/10
            rel: priceDeck
            method: GET
    PackageRequest:
      $ref: ./packages.yaml#/components/schemas/PackageRequest
    PackageResponse:
      allOf:
        - $ref: '#/components/schemas/PackageCore'
        - type: object
          properties:
            links:
              type: array
              description: HATEOAS links related to this package.
              items:
                $ref: '#/components/schemas/schemas-Link'
              nullable: true
      description: Detailed information about a service package.
      example:
        id: 94
        name: Plan Subscription Fee
        description: Monthly fee for the Unlimited Device Plan.
        item_type: subscription
        item_rules: base_fee
        item_quantity: 1
        price: '25.00'
        currency: USD
        plan_id: 1
        included: true
        removable: false
        category: base_plan
        renewable: true
        links:
          - href: /packages/94
            rel: self
            method: GET
          - href: /plans/1
            rel: relatedPlan
            method: GET
    PaymentRequest:
      $ref: ./payments.yaml#/components/schemas/PaymentRequest
    PaymentResponse:
      allOf:
        - $ref: '#/components/schemas/PaymentCore'
        - type: object
          properties:
            links:
              type: array
              description: HATEOAS links related to this payment.
              items:
                $ref: '#/components/schemas/schemas-Link'
              nullable: true
      description: Detailed information about a specific payment transaction.
      example:
        id: 7001
        amount_in_dollars: '50.00'
        currency: USD
        status: succeeded
        success: true
        payment_method_summary: Visa ending in 1111
        transaction_id: ch_1JaelG2eZvKYlo2CiHq9D3S7
        created_at: '2023-10-26T10:00:00Z'
        links:
          - href: /payments/7001
            rel: self
            method: GET
    PhoneNumberRequest:
      $ref: ./phone-numbers.yaml#/components/schemas/PhoneNumberRequest
    PhoneNumberResponse:
      allOf:
        - $ref: '#/components/schemas/schemas-PhoneNumberCore'
        - type: object
          properties:
            site_id:
              type: integer
              format: int64
              description: Identifier of the site this phone number is assigned to.
              example: 6
            destination:
              oneOf:
                - $ref: '#/components/schemas/SiteDestination'
                - type: object
                  nullable: true
                  properties: {}
                  additionalProperties: false
            fail_over_destination:
              oneOf:
                - $ref: '#/components/schemas/SiteDestination'
                - type: object
                  nullable: true
                  properties: {}
                  additionalProperties: false
            links:
              $ref: '#/components/schemas/LinkObject'
          required:
            - id
            - name
            - number
            - site_id
            - destination_code
      example:
        id: 127
        name: Main Sales Line
        number: '+13035551234'
        site_id: 6
        destination:
          name: 'Sales IVR (Menu: main_sales_ivr)'
          code: menu:main_sales_ivr
        links:
          self:
            href: /sites/6/phone-numbers/127
            rel: self
            method: GET
    PlanResponse:
      allOf:
        - $ref: '#/components/schemas/PlanCore'
        - type: object
          properties:
            items:
              type: array
              description: A list of individual billable items or features included or defined by this plan.
              items:
                $ref: '#/components/schemas/ItemResponse'
              nullable: true
            packages:
              type: object
              description: Included and optional packages associated with this plan.
              properties:
                included_packages:
                  type: array
                  items:
                    $ref: '#/components/schemas/PackageResponse'
                  description: Packages that are automatically part of this plan.
                optional_packages:
                  type: array
                  items:
                    $ref: '#/components/schemas/PackageResponse'
                  description: Additional packages that can be added to this plan at an extra cost.
              nullable: true
            links:
              type: array
              description: HATEOAS links related to this plan.
              items:
                $ref: '#/components/schemas/schemas-Link'
              nullable: true
      description: Detailed information about a subscription plan.
      example:
        id: 1
        name: Standard Business Plan
        description: Includes core calling features, 1000 domestic minutes, and basic voicemail.
        total_cost: '49.99'
        currency: USD
        removable: true
        active: true
        approved: true
        finalized: true
        items:
          - id: 449
            name: Emergency Call Service
            item_type: service_fee
            item_rules: e911_access
            item_price: '1.50'
            currency: USD
        packages:
          included_packages:
            - id: 10
              name: Core Calling Features
              item_type: feature_set
              item_rules: standard_call_handling
              item_quantity: 1
              price: '0.00'
              currency: USD
              plan_id: 1
              included: true
              removable: false
          optional_packages:
            - id: 22
              name: International Calling Pack - 100 Mins
              item_type: usage_minutes
              item_rules: international_zone_a
              item_quantity: 100
              price: '10.00'
              currency: USD
              plan_id: 1
              included: false
              removable: true
        links:
          - href: /plans/1
            rel: self
            method: GET
          - href: /plans/1/packages
            rel: listPackages
            method: GET
    SiteRequest:
      $ref: ./sites.yaml#/components/schemas/SiteRequest
    SiteResponse:
      allOf:
        - $ref: '#/components/schemas/SiteCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the site.
              example: 6
            dns_name:
              type: string
              description: The fully qualified DNS name for the site (e.g., hq.ivy.teliax.com).
              example: hq.ivy.teliax.com
            thin_client_name:
              type: string
              nullable: true
              description: Name of the assigned thin client.
              example: Denver Bonsai 7
            links:
              type: array
              description: HATEOAS links related to this site.
              items:
                $ref: '#/components/schemas/schemas-Link'
              nullable: true
          required:
            - id
            - dns_name
            - name
            - dns_extension
            - active
            - caller_id_name
            - caller_id_number
            - thin_client_id
            - acl
            - channel_limit
            - permitted_country_codes
      description: Detailed information about a specific site.
      example:
        id: 6
        name: Main Office Site
        dns_extension: hq
        dns_name: hq.ivy.teliax.com
        active: true
        caller_id_name: Teliax Inc HQ
        caller_id_number: '+13035551212'
        thin_client_id: 12
        thin_client_name: Denver Bonsai 7
        acl: 0.0.0.0/0
        channel_limit: 55
        music_on_hold_url: https://cdn.example.com/moh/default.mp3
        permitted_country_codes:
          - US
          - CA
        links:
          - href: /sites/6
            rel: self
            method: GET
          - href: /sites/6/devices
            rel: devices
            title: Manage Devices for this Site
            method: GET
    StatementResponse:
      allOf:
        - $ref: '#/components/schemas/StatementCore'
        - type: object
          properties:
            links:
              type: array
              description: HATEOAS links related to this statement.
              items:
                $ref: '#/components/schemas/schemas-Link'
              nullable: true
      description: Detailed information about a specific account statement.
      example:
        id: 501
        statement_number: STMT-2023-10-001
        period_start: '2023-10-01T00:00:00Z'
        period_end: '2023-10-31T23:59:59Z'
        issue_date: '2023-11-01T00:00:00Z'
        due_date: '2023-11-15T00:00:00Z'
        total_amount: '150.75'
        currency: USD
        status: paid
        created_at_original: 02/02/2018
        closed_at_original: 02/02/2018
        image_url: https://cdn.example.com/statements/stmt_501.png
        pdf_url: https://cdn.example.com/statements/stmt_501.pdf
        cdr_export_url: https://cdn.example.com/reports/cdr_stmt_501.csv
        links:
          - href: /statements/501
            rel: self
            method: GET
    TemplateRequest:
      $ref: ./templates.yaml#/components/schemas/TemplateRequest
    TemplateResponse:
      allOf:
        - $ref: '#/components/schemas/TemplateCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
            last_updated_by:
              type: string
              nullable: true
            owner:
              type: string
              nullable: true
            links:
              type: array
              items:
                $ref: '#/components/schemas/schemas-Link'
              nullable: true
          required:
            - id
      example:
        id: 1
        name: Sales Team Standard Setup
        features:
          switchable: PhoneNumber
          position: 1
          attrs:
            - name: name
              derivative: calculated
              default: Phone Number
        last_updated_by: jane.doe@example.com
        owner: Account ABC
        links:
          - href: /templates/1
            rel: self
            method: GET
    ThinClientRequest:
      $ref: ./thin-clients.yaml#/components/schemas/ThinClientRequest
    ThinClientResponse:
      $ref: ./thin-clients.yaml#/components/schemas/ThinClientResponse
    TimezoneResponse:
      $ref: ./timezones.yaml#/components/schemas/TimezoneResponse
    UserRequest:
      $ref: ./users.yaml#/components/schemas/UserRequest
    UserResponse:
      allOf:
        - $ref: '#/components/schemas/UserCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the user.
              example: 5
            links:
              type: array
              description: HATEOAS links related to the user.
              items:
                $ref: '#/components/schemas/schemas-Link'
          required:
            - id
      description: Detailed information about a user.
      example:
        id: 5
        first_name: Jane
        last_name: Doe
        email: jane.doe@example.com
        role: administrator
        active: true
        locale: en-US
        links:
          - href: /users/5
            rel: self
            method: GET
    Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
          description: A general status indicator for the error.
        error:
          type: string
          description: A human-readable description of the error.
          example: An unexpected error occurred.
        error_code:
          type: string
          description: A machine-parsable error code specific to this error condition.
          example: INTERNAL_ERROR
        details:
          type: array
          nullable: true
          description: Optional. An array containing more specific error details.
          items:
            type: object
            properties:
              field:
                type: string
                description: JSON pointer to the field that caused the error (if applicable).
                example: /data/attributes/email
              issue:
                type: string
                description: Specific issue with the field or operation.
                example: Email address is not valid.
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: A generic error has occurred.
        error_code: GENERIC_ERROR
    Link:
      type: object
      description: Represents a HATEOAS link.
      properties:
        href:
          type: string
          format: uri-reference
          description: The target URI of the link.
          example: /example/resource/123
        rel:
          type: string
          description: The relation type of the link (e.g., self, next, prev, item).
          example: self
        method:
          type: string
          enum:
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
            - OPTIONS
            - HEAD
          description: The HTTP method to use for the link's action.
          default: GET
          example: GET
        title:
          type: string
          nullable: true
          description: A human-readable title for the link.
          example: View Example Resource
      required:
        - href
        - rel
    LinkObject:
      type: object
      description: An object containing various HATEOAS links, where each key is the link relation type.
      additionalProperties:
        $ref: '#/components/schemas/Link'
      example:
        self:
          href: /resource/id
          rel: self
          method: GET
        parent:
          href: /parent_resource
          rel: collection
          method: GET
    PaginationLinks:
      type: object
      description: HATEOAS links for paginated collections.
      properties:
        self:
          $ref: '#/components/schemas/Link'
        first:
          $ref: '#/components/schemas/Link'
        prev:
          oneOf:
            - $ref: '#/components/schemas/Link'
            - type: object
              nullable: true
              properties: {}
              additionalProperties: false
          description: Link to the previous page, null if this is the first page.
        next:
          oneOf:
            - $ref: '#/components/schemas/Link'
            - type: object
              nullable: true
              properties: {}
              additionalProperties: false
          description: Link to the next page, null if this is the last page.
        last:
          $ref: '#/components/schemas/Link'
      required:
        - self
        - first
        - last
      example:
        self:
          href: /items?page=2&per_page=10
          rel: self
          method: GET
        first:
          href: /items?page=1&per_page=10
          rel: first
          method: GET
        last:
          href: /items?page=5&per_page=10
          rel: last
          method: GET
        next:
          href: /items?page=3&per_page=10
          rel: next
          method: GET
        prev:
          href: /items?page=1&per_page=10
          rel: prev
          method: GET
    SiteDestination:
      type: object
      description: Represents a routing destination within a site.
      properties:
        name:
          type: string
          description: Human-readable name of the destination.
          example: Sales IVR Menu
        code:
          type: string
          description: System code for the destination (e.g., menu:id, device:id, voicemailbox:id, ring_group:id, forward:id, extension:id, user:id).
          example: menu:main_sales_ivr
      required:
        - name
        - code
      example:
        name: Support Voicemail
        code: voicemailbox:vm_support
    DeviceCore:
      type: object
      description: Core properties of a device, used for creation and as part of responses.
      properties:
        name:
          type: string
          description: A user-friendly name for the device.
          example: Sales Desk Phone 1
        login:
          type: string
          description: SIP username for the device.
          example: sales.phone1.site_alpha
        active:
          type: boolean
          description: Whether the device is active.
          default: true
          example: true
        channel_limit:
          type: integer
          description: Maximum concurrent calls for this device.
          default: 2
          example: 2
        timeout:
          type: integer
          description: Ring timeout in seconds.
          default: 120
          example: 60
        caller_id_name:
          type: string
          description: Caller ID name to present for outbound calls from this device.
          nullable: true
          example: Sales Department
        caller_id_number:
          type: string
          description: Caller ID number (E.164) to present for outbound calls.
          nullable: true
          example: '+13035550100'
        acl:
          type: string
          description: Access Control List (IP/CIDR) for device registration.
          nullable: true
          default: 0.0.0.0/0
          example: 70.100.10.0/24
        fail_over_destination_code:
          type: string
          description: System code for the destination if the device is unreachable or times out.
          nullable: true
          example: voicemailbox:sales_vm_unavailable
      required:
        - name
        - login
      example:
        name: Main Conference Phone
        login: conf.phone.main
        active: true
        channel_limit: 4
        timeout: 180
        caller_id_name: Conference Room
        caller_id_number: '+13035550100'
        acl: 192.168.0.0/16
        fail_over_destination_code: voicemailbox:general_conf_vm
    schemas-Link:
      type: object
      description: Represents a HATEOAS link.
      properties:
        href:
          type: string
          format: uri-reference
        rel:
          type: string
        title:
          type: string
          nullable: true
        method:
          type: string
          enum:
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
            - OPTIONS
            - HEAD
      required:
        - href
        - rel
    schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          example: Action not permitted for the current user.
        error_code:
          type: string
          example: FORBIDDEN_ACTION
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: A generic error occurred.
        error_code: GENERIC_ERROR
    components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          example: An error occurred.
        error_code:
          type: string
          example: GENERIC_ERROR
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: A specific address error occurred.
        error_code: ADDRESS_ERROR
    oauth_components-schemas-Error:
      type: object
      description: Standard error response structure.
      properties:
        status:
          type: string
          description: A general status indicator for the error.
          example: error
        error:
          type: string
          description: A human-readable description of the error.
          example: The requested resource was not found.
        error_code:
          type: string
          description: A machine-parsable error code specific to this error condition.
          example: RESOURCE_NOT_FOUND
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: Authentication failed due to invalid credentials.
        error_code: AUTHENTICATION_FAILURE
    components-schemas-Link:
      type: object
      description: Represents a HATEOAS link.
      properties:
        href:
          type: string
          format: uri-reference
          description: The target URI of the link.
        rel:
          type: string
          description: The relation type of the link.
        title:
          type: string
          nullable: true
          description: A human-readable title for the link.
        method:
          type: string
          description: The HTTP method to use for the link's action.
          enum:
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
            - OPTIONS
            - HEAD
      required:
        - href
        - rel
      example:
        href: /auth/token
        rel: login
        title: Login
        method: POST
    ConfirmationResponse:
      type: object
      description: Response message indicating the result of the account confirmation attempt.
      properties:
        message:
          type: string
          description: A success message indicating the account has been confirmed.
          example: Your account has been successfully confirmed.
        links:
          type: array
          description: HATEOAS links for next actions, like logging in.
          items:
            $ref: '#/components/schemas/components-schemas-Link'
          nullable: true
      required:
        - message
      example:
        message: Account confirmed successfully. You may now log in.
        links:
          - href: /auth/token
            rel: login
            title: Proceed to Login
            method: POST
    confirmation_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          description: General error status.
          example: error
        error:
          type: string
          description: A human-readable description of the error.
          example: Invalid confirmation token provided.
        error_code:
          type: string
          description: A machine-parsable code for the error.
          example: INVALID_TOKEN
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: Confirmation token has expired or is invalid.
        error_code: TOKEN_EXPIRED_OR_INVALID
    AddressUserProvided:
      type: object
      description: Address information provided by the user during sign-up.
      properties:
        email:
          type: string
          format: email
          description: Primary contact email address for the account.
          example: contact@exampleinnovations.com
        street_address:
          type: string
          description: Street name and number, including suite or apartment if applicable.
          example: 123 Innovation Drive, Suite 400
        country:
          type: string
          description: Two-letter ISO 3166-1 alpha-2 country code (e.g., US, GB, CA).
          example: US
        city:
          type: string
          description: City name.
          example: Techville
        state_province:
          type: string
          description: State or province name or code, as applicable for the country.
          example: CA
        postal_code:
          type: string
          description: Postal or ZIP code.
          example: '90210'
        contact_number:
          type: string
          description: Primary contact phone number, preferably in E.164 format.
          example: '+18005551212'
      required:
        - email
        - street_address
        - country
        - city
        - postal_code
        - contact_number
      example:
        email: newuser@domain.com
        street_address: 789 Startup Street
        country: US
        city: Anytown
        state_province: NY
        postal_code: '10001'
        contact_number: '+12125550100'
    CustomerRegistrationRequest:
      type: object
      description: Information required to register a new customer account.
      properties:
        name:
          type: string
          description: The legal name of the company or business.
          example: Example Innovations Inc.
        address:
          $ref: '#/components/schemas/AddressUserProvided'
      required:
        - name
        - address
      example:
        name: Global Solutions Ltd.
        address:
          email: info@globalsolutions.com
          street_address: 456 Enterprise Ave
          country: GB
          city: London
          postal_code: SW1A 1AA
          contact_number: '+442079460958'
    AddressRegistered:
      allOf:
        - $ref: '#/components/schemas/AddressUserProvided'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the address record.
              example: 672
          required:
            - id
            - email
            - street_address
            - country
            - city
            - postal_code
            - contact_number
      description: Registered address information, including its unique ID.
      example:
        id: 672
        email: contact@exampleinnovations.com
        street_address: 123 Innovation Drive, Suite 400
        country: US
        city: Techville
        state_province: CA
        postal_code: '90210'
        contact_number: '18005551212'
    sign-up_components-schemas-Link:
      type: object
      description: Represents a HATEOAS link.
      properties:
        href:
          type: string
          format: uri-reference
          description: The target URI of the link.
        rel:
          type: string
          description: The relation type of the link.
        title:
          type: string
          nullable: true
          description: A human-readable title for the link.
        method:
          type: string
          description: The HTTP method to use for the link's action.
          enum:
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
            - OPTIONS
            - HEAD
      required:
        - href
        - rel
      example:
        href: /account/123
        rel: self
        title: View Account Details
        method: GET
    CustomerRegistrationResponse:
      type: object
      description: Details of the newly created customer account, including a confirmation token.
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the newly created account.
          example: 123
        name:
          type: string
          description: The name of the registered company.
          example: Example Innovations Inc.
        active:
          type: boolean
          description: Indicates if the account is active. Typically false until confirmed.
          example: false
        locale:
          type: string
          description: The locale preference for the account (e.g., "en" for English).
          example: en
        international_enabled:
          type: boolean
          description: Indicates if international services are enabled for this account.
          example: false
        balance_preference_in_dollars:
          type: string
          description: Preferred account balance threshold (in dollars).
          example: '10.00'
        recharge_preference_in_dollars:
          type: string
          description: Preferred auto-recharge amount (in dollars).
          example: '20.00'
        address:
          $ref: '#/components/schemas/AddressRegistered'
        confirmation_token:
          type: string
          description: A unique token required to confirm and activate the account.
          example: abcdef123456ghijkl7890mnopqrst
        links:
          type: array
          description: HATEOAS links related to the new account.
          items:
            $ref: '#/components/schemas/sign-up_components-schemas-Link'
          example:
            - href: /confirmation
              rel: confirmAccount
              title: Confirm Account
              method: POST
            - href: /account/123
              rel: self
              title: View Account Details
              method: GET
      required:
        - id
        - name
        - active
        - address
        - confirmation_token
      example:
        id: 123
        name: Example Innovations Inc.
        active: false
        locale: en
        international_enabled: false
        balance_preference_in_dollars: '0.00'
        recharge_preference_in_dollars: '0.00'
        address:
          id: 672
          email: contact@exampleinnovations.com
          street_address: 123 Innovation Drive, Suite 400
          country: US
          city: Techville
          state_province: CA
          postal_code: '90210'
          contact_number: '18005551212'
        confirmation_token: abcdef123456ghijkl7890mnopqrst
        links:
          - href: /confirmation
            rel: confirmAccount
            title: Confirm Account
            method: POST
    sign-up_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          description: General error status.
          example: error
        error:
          type: string
          description: A human-readable description of the error.
          example: Invalid input parameters provided.
        error_code:
          type: string
          description: A machine-parsable code for the error.
          example: VALIDATION_ERROR
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: An account with the provided email already exists.
        error_code: ACCOUNT_ALREADY_EXISTS
    CallRecordItemSummary:
      type: object
      description: Summary details of a specific call event.
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for this call summary record.
        dni:
          type: string
          description: Dialed Number Identifier (DNIS).
        dni_name:
          type: string
          nullable: true
          description: Name associated with the DNI (e.g., location or service).
        raw_ani:
          type: string
          description: Automatic Number Identification (ANI) of the caller.
        name:
          type: string
          nullable: true
          description: A descriptive name for the call type or leg.
        zone:
          type: string
          nullable: true
          description: Dialing zone or rate category for the call.
        direction:
          type: string
          enum:
            - inbound
            - outbound
        start_stamp:
          type: string
          format: date-time
        answer_stamp:
          type: string
          format: date-time
          nullable: true
        end_stamp:
          type: string
          format: date-time
          nullable: true
        duration:
          type: integer
          description: Duration of the answered part of the call in seconds.
      required:
        - id
        - dni
        - raw_ani
        - direction
        - start_stamp
    CallRecord:
      type: object
      description: Represents a Call Detail Record (CDR).
      properties:
        id:
          type: integer
          format: int64
        item_type:
          type: string
        item_rules:
          type: string
          nullable: true
        item_options:
          type: object
          nullable: true
          additionalProperties: true
        item_summary:
          $ref: '#/components/schemas/CallRecordItemSummary'
        humanized_item_name:
          type: string
          nullable: true
        customer_balance_adjustment:
          type: string
          nullable: true
        links:
          type: array
          items:
            $ref: '#/components/schemas/schemas-Link'
          nullable: true
      required:
        - id
        - item_type
        - item_summary
        - humanized_item_name
    CallRecordListResponse:
      type: object
      description: A paginated list of call records.
      properties:
        call_records:
          type: array
          items:
            $ref: '#/components/schemas/CallRecord'
        total_items:
          type: integer
          description: Total number of records matching the query.
        total_pages:
          type: integer
          description: Total number of pages based on page_size.
        current_page:
          type: integer
          description: The current page number.
        per_page:
          type: integer
          description: Number of records per page.
        links:
          type: array
          items:
            $ref: '#/components/schemas/schemas-Link'
          nullable: true
      required:
        - call_records
      example:
        call_records:
          - id: 4332721964
            item_type: cdr
            item_rules: intrastate
            item_options:
              dni: '+17208888888'
            item_summary:
              id: 27815150409
              dni: '+17208888888'
              dni_name: CO LONGMONT
              raw_ani: '+12012222222'
              name: Intrastate Call
              zone: intrastate
              direction: outbound
              start_stamp: '2020-10-29T06:55:06-06:00'
              answer_stamp: '2020-10-29T06:55:10-06:00'
              end_stamp: '2020-10-29T07:02:39-06:00'
              duration: 449
            humanized_item_name: Intrastate call
            customer_balance_adjustment: '-0.08'
            links: null
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 50
        links:
          - href: /call-records?page%5Bnumber%5D=1&page%5Bsize%5D=50
            rel: self
            method: GET
    CallRecordError:
      type: object
      description: Describes an error encountered during a call record request.
      properties:
        error:
          type: string
          description: A human-readable message describing the validation error or issue.
      required:
        - error
      example:
        error: Query date range cannot exceed 30 days.
    call-records_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
        error_code:
          type: string
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: A general error occurred while processing call records.
        error_code: CALL_RECORD_PROCESSING_ERROR
    CountryCode:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
        region:
          type: string
          nullable: true
      required:
        - id
        - name
        - code
      example:
        id: GB
        name: United Kingdom - 44
        code: '44'
        region: Europe
    CountryCodeListResponse:
      type: object
      description: A list of available country codes.
      properties:
        country_codes:
          type: array
          items:
            $ref: '#/components/schemas/CountryCode'
      required:
        - country_codes
      example:
        country_codes:
          - id: US
            name: United States - 1
            code: INTERSTATE|INTRASTATE|LOCAL|TOLLFREE
            region: 'Zone 1: North America'
          - id: CA
            name: Canada - 1
            code: '1'
            region: 'Zone 1: North America'
          - id: GB
            name: United Kingdom - 44
            code: '44'
            region: Europe
    country-codes_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          example: Failed to retrieve country codes.
        error_code:
          type: string
          example: COUNTRY_CODE_LIST_ERROR
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: An error occurred with country codes.
        error_code: COUNTRY_CODE_GENERIC_ERROR
    CreditCardCore:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the credit card record.
          example: 101
        name:
          type: string
          description: A custom name or label for the credit card (e.g., "Work Visa", "Personal Amex").
          example: Primary Visa
        last4:
          type: string
          description: The last four digits of the credit card number.
          example: '1111'
        brand:
          type: string
          description: The brand of the credit card (e.g., Visa, Mastercard, American Express).
          example: Visa
        exp_month:
          type: integer
          description: The expiration month of the credit card (1-12).
          example: 12
        exp_year:
          type: integer
          description: The expiration year of the credit card (e.g., 2025).
          example: 2025
        priority:
          type: integer
          description: Priority for payment processing (higher numbers typically processed first). Range 0-100.
          minimum: 0
          maximum: 100
          example: 100
        active:
          type: boolean
          description: Indicates if the card is active for payments.
          example: true
        verified:
          type: boolean
          description: Indicates if the card has been successfully verified.
          example: true
        expired:
          type: boolean
          description: Indicates if the card is currently expired based on its expiration date.
          readOnly: true
          example: false
      required:
        - id
        - name
        - last4
        - brand
        - exp_month
        - exp_year
        - priority
        - active
        - verified
        - expired
    PaginatedCreditCardListResponse:
      type: object
      description: A paginated list of credit cards associated with an account.
      properties:
        credit_cards:
          type: array
          items:
            $ref: '#/components/schemas/CreditCardResponse'
        total_items:
          type: integer
          description: Total number of credit cards.
        total_pages:
          type: integer
          description: Total number of pages.
        current_page:
          type: integer
          description: Current page number.
        per_page:
          type: integer
          description: Number of items per page.
        links:
          type: array
          items:
            $ref: '#/components/schemas/schemas-Link'
          nullable: true
      required:
        - credit_cards
      example:
        credit_cards:
          - id: 101
            name: Primary Visa
            last4: '1111'
            brand: Visa
            exp_month: 12
            exp_year: 2025
            priority: 100
            active: true
            verified: true
            expired: false
            links:
              - href: /credit-cards/101
                rel: self
                method: GET
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: /credit-cards?page=1&page_size=25
            rel: self
            method: GET
    credit-cards_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          example: Credit card processing failed.
        error_code:
          type: string
          example: PAYMENT_METHOD_ERROR
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: A generic credit card error occurred.
        error_code: CREDIT_CARD_GENERIC_ERROR
    CreditCardCreateRequest:
      type: object
      description: Information required to add and tokenize a new credit card.
      properties:
        name:
          type: string
          description: A custom name for the credit card.
          example: Backup Mastercard
        card_number:
          type: string
          description: The full credit card number (PAN). This will be tokenized and not stored directly by Ringer.
          example: '5555444433332222'
        exp_month:
          type: integer
          description: Expiration month (1-12).
          example: 8
          minimum: 1
          maximum: 12
        exp_year:
          type: integer
          description: Expiration year (e.g., 2026). Future year expected.
          example: 2026
        cvv:
          type: string
          description: The 3 or 4-digit card verification value (CVV/CVC).
          example: '123'
        first_name:
          type: string
          description: Cardholder's first name.
          example: Jane
        last_name:
          type: string
          description: Cardholder's last name.
          example: Doe
        address_line1:
          type: string
          description: Cardholder's billing address - street line 1.
          example: 123 Payment Lane
        address_line2:
          type: string
          nullable: true
          description: Cardholder's billing address - street line 2 (e.g., apartment, suite).
          example: Suite B
        city:
          type: string
          description: Cardholder's billing address - city.
          example: Secure City
        state_province:
          type: string
          nullable: true
          description: Cardholder's billing address - state or province code.
          example: CA
        postal_code:
          type: string
          description: Cardholder's billing address - postal or ZIP code.
          example: '90210'
        country:
          type: string
          description: Cardholder's billing address - two-letter ISO 3166-1 alpha-2 country code.
          example: US
        priority:
          type: integer
          description: Payment priority (0-100). Higher values are typically tried first.
          minimum: 0
          maximum: 100
          default: 50
          example: 50
        active:
          type: boolean
          description: Set whether this card should be active for payments upon creation.
          default: true
          example: true
      required:
        - name
        - card_number
        - exp_month
        - exp_year
        - cvv
        - first_name
        - last_name
        - address_line1
        - city
        - postal_code
        - country
      example:
        name: Personal Amex
        card_number: '370012345678901'
        exp_month: 12
        exp_year: 2027
        cvv: '1234'
        first_name: John
        last_name: Public
        address_line1: 456 Token Street
        city: Cardville
        state_province: NV
        postal_code: '89101'
        country: US
        priority: 75
        active: true
    ItemUpdateRequest:
      type: object
      description: Specifies the fields that can be updated for an item.
      properties:
        name:
          type: string
          description: New name for the item.
          example: E911 Service Fee
        item_price:
          type: string
          description: New price for the item.
          example: '1.75'
        tax_category:
          type: integer
          nullable: true
          description: Updated tax category identifier.
          example: 60
        tax_code:
          type: integer
          nullable: true
          description: Updated tax code.
          example: 9
      example:
        name: Monthly DID Charge - Premium
        item_price: '2.50'
    ItemCore:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the item.
          example: 449
        name:
          type: string
          description: The human-readable name of the item or feature.
          example: Emergency Call Service (E911)
        item_type:
          type: string
          description: The general category or type of the item (e.g., cdr, service_fee, feature_license).
          example: service_fee
        item_rules:
          type: string
          nullable: true
          description: Specific rules or sub-classification for the item type that might affect rating or behavior.
          example: e911_access
        item_price:
          type: string
          description: The price of this individual item (e.g., per unit, per month).
          example: '1.50'
        currency:
          type: string
          description: Three-letter ISO currency code for the item price.
          default: USD
          example: USD
        price_deck_id:
          type: integer
          format: int64
          nullable: true
          description: Identifier of the price deck this item pricing might belong to.
          example: 10
        tax_category:
          type: integer
          nullable: true
          description: Identifier for the tax category applicable to this item.
          example: 59
        tax_code:
          type: integer
          nullable: true
          description: Specific tax code applicable to this item.
          example: 8
      required:
        - id
        - name
        - item_type
        - item_price
        - currency
    items_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          example: Item update failed due to invalid data.
        error_code:
          type: string
          example: ITEM_UPDATE_FAILED
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: A generic item error occurred.
        error_code: ITEM_GENERIC_ERROR
    PackageFeature:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
          description: Name of the feature
          example: Discounted Calls to Europe
        description:
          type: string
          description: Detailed description of the feature
          example: Calls to European countries at 5¢/minute
        value:
          type: string
          description: Value or metric for the feature
          example: '0.05'
    PackageCore:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the package.
          example: 94
        name:
          type: string
          description: The name of the package.
          example: Plan Subscription
        description:
          type: string
          nullable: true
          description: A brief description of what the package includes or its purpose.
          example: Core subscription fee for the selected plan.
        item_type:
          type: string
          description: The type of item this package represents or groups (e.g., subscription, feature_bundle, usage_minutes).
          example: subscription
        item_rules:
          type: string
          nullable: true
          description: Specific rules or subclassifications for the item type.
          example: monthly_fee
        item_quantity:
          type: integer
          description: The quantity of the item provided by this package (e.g., number of minutes, 1 for a subscription).
          example: 1
        price:
          type: string
          description: The cost of this package if it's optional or its contribution to a plan's price.
          example: '25.00'
        currency:
          type: string
          description: Three-letter ISO currency code for the package price.
          default: USD
          example: USD
        plan_id:
          type: integer
          format: int64
          nullable: true
          description: Identifier of the plan this package definition might be primarily associated with or templated from.
          example: 1
        included:
          type: boolean
          description: True if this package is an included part of a plan, false if it's optional.
          example: true
        removable:
          type: boolean
          description: Indicates if this package can be removed from a plan by the customer.
          example: false
        category:
          type: string
          description: Category of the package
          enum:
            - calling
            - messaging
            - conferencing
            - faxing
            - security
            - base_plan
            - add_on
          example: base_plan
        renewable:
          type: boolean
          description: Whether the package renews automatically
          example: true
        features:
          type: array
          description: List of features included in the package
          items:
            $ref: '#/components/schemas/PackageFeature'
          nullable: true
      required:
        - id
        - name
        - item_type
        - item_quantity
        - price
        - currency
        - included
        - removable
    PaginatedPackageListResponse:
      type: object
      description: A paginated list of packages.
      properties:
        packages:
          type: array
          items:
            $ref: '#/components/schemas/PackageResponse'
        total_items:
          type: integer
          description: Total number of packages matching the query.
          example: 50
        total_pages:
          type: integer
          description: Total number of pages based on `per_page`.
          example: 5
        current_page:
          type: integer
          description: The current page number being displayed.
          example: 1
        per_page:
          type: integer
          description: The number of items per page.
          example: 10
        links:
          type: array
          description: HATEOAS links for pagination and related resources.
          items:
            $ref: '#/components/schemas/schemas-Link'
          nullable: true
      required:
        - packages
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        packages:
          - id: 94
            name: Plan Subscription Fee
            description: Monthly fee for the Unlimited Device Plan.
            item_type: subscription
            item_rules: base_fee
            item_quantity: 1
            price: '25.00'
            currency: USD
            plan_id: 1
            included: true
            removable: false
            category: base_plan
            renewable: true
            features: null
            links:
              - href: /packages/94
                rel: self
                method: GET
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: /packages?page=1&page_size=25
            rel: self
            method: GET
    packages_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          example: Package not found.
        error_code:
          type: string
          example: PACKAGE_NOT_FOUND
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: A generic package error occurred.
        error_code: PACKAGE_GENERIC_ERROR
    PaymentCore:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the payment record.
          example: 7001
        amount_in_dollars:
          type: string
          description: The amount of the payment in dollars.
          example: '50.00'
        currency:
          type: string
          description: Three-letter ISO currency code (e.g., USD, CAD, EUR).
          default: USD
          example: USD
        status:
          type: string
          description: The status of the payment transaction.
          enum:
            - pending
            - succeeded
            - failed
            - requires_action
            - canceled
          example: succeeded
        success:
          type: boolean
          description: Indicates if the payment transaction was successful.
          example: true
        payment_method_summary:
          type: string
          nullable: true
          description: A brief summary of the payment method used (e.g., "Visa ending in 1234").
          example: Visa ending in 1111
        transaction_id:
          type: string
          nullable: true
          description: The unique identifier for the transaction from the payment processor.
          example: ch_1JaelG2eZvKYlo2CiHq9D3S7
        created_at:
          type: string
          format: date-time
          description: Timestamp of when the payment was created/processed.
          example: '2023-10-26T10:00:00Z'
      required:
        - id
        - amount_in_dollars
        - currency
        - status
        - created_at
    PaymentListResponse:
      type: object
      description: A paginated list of payment transactions.
      properties:
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentResponse'
        total_items:
          type: integer
          description: Total number of payment records available.
          example: 150
        total_pages:
          type: integer
          description: Total number of pages based on `per_page`.
          example: 6
        current_page:
          type: integer
          description: The current page number being displayed.
          example: 1
        per_page:
          type: integer
          description: The number of items per page.
          example: 25
        links:
          type: array
          description: HATEOAS links for pagination and related resources.
          items:
            $ref: '#/components/schemas/schemas-Link'
          nullable: true
      required:
        - payments
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        payments:
          - id: 7001
            amount_in_dollars: '50.00'
            currency: USD
            status: succeeded
            success: true
            payment_method_summary: Visa ending in 1111
            transaction_id: ch_1JaelG2eZvKYlo2CiHq9D3S7
            created_at: '2023-10-26T10:00:00Z'
            links:
              - href: /payments/7001
                rel: self
                method: GET
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: /payments?page=1&page_size=25
            rel: self
          - href: /payments?page=2&page_size=25
            rel: next
          - href: /payments?page=1&page_size=25
            rel: first
          - href: /payments?page=6&page_size=25
            rel: last
    payments_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          example: Payment processing failed.
        error_code:
          type: string
          example: PAYMENT_FAILED
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: A generic payment error occurred.
        error_code: PAYMENT_GENERIC_ERROR
    PlanCore:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Standard Business Plan
        description:
          type: string
          nullable: true
          example: Includes core calling features, 1000 domestic minutes, and basic voicemail.
        total_cost:
          type: string
          example: '49.99'
        currency:
          type: string
          default: USD
          example: USD
        removable:
          type: boolean
          example: true
        active:
          type: boolean
          example: true
        approved:
          type: boolean
          example: true
        finalized:
          type: boolean
          example: true
      required:
        - id
        - name
        - total_cost
        - currency
        - removable
        - active
        - approved
        - finalized
    PaginatedPlanListResponse:
      type: object
      description: A paginated list of subscription plans.
      properties:
        plans:
          type: array
          items:
            $ref: '#/components/schemas/PlanResponse'
        total_items:
          type: integer
          example: 10
        total_pages:
          type: integer
          example: 1
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 25
        links:
          type: array
          items:
            $ref: '#/components/schemas/schemas-Link'
          nullable: true
      required:
        - plans
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        plans:
          - $ref: '#/components/schemas/PlanResponse/example'
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: /plans?page=1&page_size=25
            rel: self
            method: GET
    plans_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
        error_code:
          type: string
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: A generic plan error occurred.
        error_code: PLAN_GENERIC_ERROR
    SiteCore:
      type: object
      properties:
        name:
          type: string
          description: A user-friendly name for the site (e.g., "Main Office", "Sales Department").
          example: Main Office Site
        dns_extension:
          type: string
          description: The DNS extension for the site, used to form part of its unique SIP domain.
          example: hq
        active:
          type: boolean
          description: Indicates if the site is active. Inactive sites cannot place or receive calls.
          example: true
        caller_id_name:
          type: string
          description: Default Caller ID name for outbound calls originating from this site.
          example: Innovatech Solutions
        caller_id_number:
          type: string
          description: Default Caller ID number for outbound calls from this site (e.g., main business number).
          example: '+14155550100'
        thin_client_id:
          type: integer
          format: int64
          description: Identifier of the thin client (call processing node) assigned to this site.
          example: 12
        acl:
          type: string
          description: Access Control List (e.g., IP addresses or ranges) defining who can connect to this site's SIP services.
          example: 0.0.0.0/0
        channel_limit:
          type: integer
          description: Maximum number of concurrent call channels allowed for this site.
          minimum: 0
          maximum: 1000
          example: 55
        permitted_country_codes:
          type: array
          items:
            type: string
          description: List of permitted outbound country codes or dialing zones for this site. Reference Country Codes API for available values.
          example:
            - US
            - CA
            - GB
        music_on_hold_url:
          type: string
          format: uri
          nullable: true
          description: URL to the music on hold audio file for the site.
          example: https://cdn.example.com/moh/site_default.mp3
      required:
        - name
        - dns_extension
        - active
        - caller_id_name
        - caller_id_number
        - thin_client_id
        - acl
        - channel_limit
        - permitted_country_codes
    SiteListResponse:
      type: object
      description: A list of sites associated with an account.
      properties:
        sites:
          type: array
          items:
            $ref: '#/components/schemas/SiteResponse'
      required:
        - sites
      example:
        sites:
          - id: 6
            name: Main Office Site
            dns_extension: hq
            dns_name: hq.ivy.teliax.com
            active: true
            caller_id_name: Teliax Inc HQ
            caller_id_number: '+13035551212'
            thin_client_id: 12
            thin_client_name: Denver Bonsai 7
            acl: 0.0.0.0/0
            channel_limit: 55
            music_on_hold_url: https://cdn.example.com/moh/default.mp3
            permitted_country_codes:
              - US
              - CA
            links:
              - href: /sites/6
                rel: self
                method: GET
    sites_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          example: Site operation failed.
        error_code:
          type: string
          example: SITE_ERROR
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: A generic site error occurred.
        error_code: SITE_GENERIC_ERROR
    SiteCreateRequest:
      allOf:
        - $ref: '#/components/schemas/SiteCore'
      description: Data required to create a new site.
      example:
        name: New Branch Office
        active: true
        dns_extension: branch
        caller_id_name: Ringer Inc Branch
        caller_id_number: '+17205550101'
        thin_client_id: 12
        acl: 0.0.0.0/0
        channel_limit: 25
        permitted_country_codes:
          - US
        music_on_hold_url: https://cdn.example.com/moh/branch_moh.mp3
    SiteUpdateRequest:
      type: object
      description: Data for updating an existing site. Provide only fields to be changed.
      properties:
        name:
          type: string
          description: A user-friendly name for the site.
          example: Main Office Site - Updated
        dns_extension:
          type: string
          description: The DNS extension for the site.
          example: hq-updated
        active:
          type: boolean
          description: Indicates if the site is active.
          example: false
        caller_id_name:
          type: string
          description: Default Caller ID name for outbound calls.
          example: Innovatech Solutions (Renovated)
        caller_id_number:
          type: string
          description: Default Caller ID number for outbound calls.
          example: '+14155550199'
        thin_client_id:
          type: integer
          format: int64
          description: Identifier of the thin client.
          example: 13
        acl:
          type: string
          description: Access Control List.
          example: 192.168.1.0/24
        channel_limit:
          type: integer
          minimum: 0
          maximum: 1000
          description: Maximum number of concurrent call channels.
          example: 60
        permitted_country_codes:
          type: array
          items:
            type: string
          description: List of permitted outbound country codes.
          example:
            - US
            - MX
        music_on_hold_url:
          type: string
          format: uri
          nullable: true
          description: URL to the music on hold audio file.
          example: https://cdn.example.com/moh/new_music.mp3
      example:
        name: Main Office Site - Renovated
        active: true
        caller_id_name: Teliax Inc HQ (New)
        music_on_hold_url: https://cdn.example.com/moh/new_hq_moh.mp3
    CallBlockAttributes:
      type: object
      properties:
        name:
          type: string
          description: Name of the Call Block rule.
        phone_number:
          type: string
          description: Phone number pattern to block.
        direction:
          type: string
          enum:
            - inbound
            - outbound
            - both
          default: inbound
          description: Direction of calls to block.
        status:
          type: string
          enum:
            - active
            - inactive
          default: active
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Creation timestamp.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Last update timestamp.
      required:
        - name
        - phone_number
    schemas-CallBlockResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
              format: int64
              description: Unique identifier for the Call Block rule.
            type:
              type: string
              enum:
                - call-block
            attributes:
              allOf:
                - $ref: '#/components/schemas/CallBlockAttributes'
                - type: object
                  properties:
                    site_id:
                      type: integer
                      format: int64
                      readOnly: true
        links:
          $ref: '#/components/schemas/LinkObject'
      example:
        data:
          id: '101'
          type: call-block
          attributes:
            name: Example Block Rule
            phone_number: '+15558675309'
            direction: inbound
            status: active
            site_id: 6
            created_at: '2023-01-15T10:00:00Z'
            updated_at: '2023-01-15T10:00:00Z'
          links:
            self:
              href: /sites/6/call-blocks/101
              rel: self
              method: GET
    CallBlockListResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/schemas-CallBlockResponse'
        links:
          $ref: '#/components/schemas/PaginationLinks'
      example:
        data:
          - data:
              id: '101'
              type: call-block
              attributes:
                name: Block nuisance caller
                phone_number: '+15551234567'
                direction: inbound
                status: active
                site_id: 6
                created_at: '2023-01-01T12:00:00Z'
                updated_at: '2023-01-01T12:00:00Z'
            links:
              self:
                href: /sites/6/call-blocks/101
                rel: self
                method: GET
          - data:
              id: '102'
              type: call-block
              attributes:
                name: Another Block Rule
                phone_number: '+15550001111'
                direction: inbound
                status: active
                site_id: 6
                created_at: '2023-01-02T14:00:00Z'
                updated_at: '2023-01-02T14:00:00Z'
            links:
              self:
                href: /sites/6/call-blocks/102
                rel: self
                method: GET
        links:
          self:
            href: /sites/6/call-blocks?page%5Bnumber%5D=1&page_size=25
            rel: self
            method: GET
          first:
            href: /sites/6/call-blocks?page%5Bnumber%5D=1&page_size=25
            rel: first
            method: GET
          last:
            href: /sites/6/call-blocks?page%5Bnumber%5D=1&page_size=25
            rel: last
            method: GET
          next: null
          prev: null
    CallBlockCreateRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          properties:
            type:
              type: string
              enum:
                - call-block
            attributes:
              $ref: '#/components/schemas/CallBlockAttributes'
      example:
        data:
          type: call-block
          attributes:
            name: Block Robocalls
            phone_number: +1234567xxxx
            direction: inbound
            status: active
    call-block_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          description: A human-readable description of the error.
        error_code:
          type: string
          description: A machine-parsable error code.
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
                description: JSON pointer to the field that caused the error.
              issue:
                type: string
                description: Specific issue with the field.
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: A generic error occurred for individual call block operation.
        error_code: CALL_BLOCK_DETAIL_ERROR
    CallBlockUpdateRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          properties:
            type:
              type: string
              enum:
                - call-block
            attributes:
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                phone_number:
                  type: string
                  nullable: true
                direction:
                  type: string
                  enum:
                    - inbound
                    - outbound
                    - both
                  nullable: true
                status:
                  type: string
                  enum:
                    - active
                    - inactive
                  nullable: true
      description: Data for updating an existing Call Block rule. Only provided fields are updated.
      example:
        data:
          type: call-block
          attributes:
            name: Priority Block - Updated
            status: inactive
    ConferenceRoomCore:
      type: object
      properties:
        name:
          type: string
          description: A user-friendly name for the conference room.
          example: Engineering Standup
        pin:
          type: string
          description: Numeric PIN required for participants to join the conference.
          example: '12345'
          nullable: true
        moderator_pin:
          type: string
          description: Numeric PIN required for the moderator to join and control the conference.
          example: '54321'
          nullable: true
        profile:
          type: string
          nullable: true
          description: Conference profile or type (e.g., default, enhanced audio). Specific values depend on system configuration.
          example: default
        user_id:
          type: integer
          format: int64
          nullable: true
          description: Identifier of the user primarily associated with this conference room, if any.
          example: 10
      required:
        - name
        - pin
        - moderator_pin
    ConferenceRoomResponse:
      allOf:
        - $ref: '#/components/schemas/ConferenceRoomCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the conference room.
              example: 3
            site_id:
              type: integer
              format: int64
              description: Identifier of the site this conference room belongs to.
              example: 6
              nullable: true
            greeting_url:
              type: string
              format: uri
              nullable: true
              description: URL to the current greeting audio file.
              example: https://cdn.example.com/greetings/conf_3.mp3
            music_on_hold_url:
              type: string
              format: uri
              nullable: true
              description: URL to the current music on hold audio file.
              example: https://cdn.example.com/moh/conf_3.mp3
            links:
              type: array
              description: HATEOAS links related to this conference room.
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
          required:
            - id
            - site_id
            - name
            - pin
            - moderator_pin
      description: Detailed information about a conference room.
      example:
        id: 3
        site_id: 6
        name: Weekly Sales Meeting
        pin: '****'
        moderator_pin: '****'
        profile: default
        greeting_url: https://cdn.example.com/greetings/sales_meeting.mp3
        music_on_hold_url: null
        user_id: 1
        links:
          - href: /sites/6/conference-rooms/3
            rel: self
            method: GET
    ConferenceRoomListResponse:
      type: object
      description: A list of conference rooms for a site.
      properties:
        conference_rooms:
          type: array
          items:
            $ref: '#/components/schemas/ConferenceRoomResponse'
      required:
        - conference_rooms
      example:
        conference_rooms:
          - id: 3
            site_id: 6
            name: Weekly Sales Meeting
            profile: default
            pin: '****'
            moderator_pin: '****'
            user_id: 1
            links:
              - href: /sites/6/conference-rooms/3
                rel: self
                method: GET
    ConferenceRoomCreateRequest:
      allOf:
        - $ref: '#/components/schemas/ConferenceRoomCore'
        - type: object
          properties:
            greeting:
              type: string
              format: binary
              nullable: true
              description: Audio file for the greeting message played when participants join.
            music_on_hold:
              type: string
              format: binary
              nullable: true
              description: Audio file for music played while participants are on hold waiting for the moderator.
      description: Data required to create a new conference room, including optional audio file uploads.
      required:
        - name
        - pin
        - moderator_pin
      example:
        name: Daily Huddle Room
        pin: '55555'
        moderator_pin: '11111'
        profile: default
    ConferenceRoomUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/ConferenceRoomCore'
        - type: object
          properties:
            greeting:
              type: string
              format: binary
              nullable: true
              description: New audio file for the greeting message. If not provided, existing greeting remains.
            music_on_hold:
              type: string
              format: binary
              nullable: true
              description: New audio file for music on hold. If not provided, existing music remains.
      description: Data for updating an existing conference room, including optional audio file uploads.
      example:
        name: Team Sync Room - Updated
    schemas-DeviceCore:
      type: object
      properties:
        name:
          type: string
          example: Sales Desk Phone 1
        login:
          type: string
          example: sales.phone1.site_alpha
        active:
          type: boolean
          default: true
        channel_limit:
          type: integer
          default: 2
        timeout:
          type: integer
          default: 120
        caller_id_name:
          type: string
          nullable: true
        caller_id_number:
          type: string
          nullable: true
        acl:
          type: string
          nullable: true
          default: 0.0.0.0/0
        fail_over_destination_code:
          type: string
          nullable: true
      required:
        - name
        - login
    schemas-SiteDestination:
      type: object
      description: Represents a potential call destination or failover point.
      properties:
        name:
          type: string
          description: A human-readable name for the destination.
          example: Main Menu (menu:main_menu)
        code:
          type: string
          description: A system-usable code or identifier for the destination.
          example: menu:main_menu
      required:
        - name
        - code
    DeviceResponse:
      allOf:
        - $ref: '#/components/schemas/schemas-DeviceCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
            site_id:
              type: integer
              format: int64
              nullable: true
            password:
              type: string
              description: (Returned on create only)
            fail_over_destination:
              oneOf:
                - $ref: '#/components/schemas/schemas-SiteDestination'
                - type: object
                  nullable: true
                  properties: {}
                  additionalProperties: false
            user_id:
              type: integer
              format: int64
              nullable: true
            links:
              type: array
              items:
                $ref: '#/components/schemas/schemas-Link'
              nullable: true
          required:
            - id
            - name
            - login
      example:
        id: 1763
        site_id: 6
        name: John Doe Desk Phone
        login: john.doe.phone1
        active: true
        channel_limit: 2
        timeout: 120
        caller_id_name: John Doe
        caller_id_number: '+13035551234'
        acl: 0.0.0.0/0
        password: aGeneratedPasswordExample
        fail_over_destination_code: voicemailbox:vm_john_doe
        fail_over_destination:
          name: Voicemail for John Doe
          code: voicemailbox:vm_john_doe
        user_id: 5
        links:
          - href: /sites/6/devices/1763/regenerate-password
            rel: regenerate-password
            method: PATCH
    DeviceListResponse:
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceResponse'
      required:
        - devices
      example:
        devices:
          - id: 1763
            site_id: 6
            name: John Doe Desk Phone
            login: john.doe.phone1
            active: true
            channel_limit: 2
            timeout: 120
            caller_id_name: John Doe
            caller_id_number: '+13035551234'
            acl: 0.0.0.0/0
            fail_over_destination_code: voicemailbox:vm_john_doe
            fail_over_destination:
              name: Voicemail for John Doe
              code: voicemailbox:vm_john_doe
            user_id: 5
            links:
              - href: /sites/6/devices/1763/regenerate-password
                rel: regenerate-password
                method: PATCH
    index_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
        error_code:
          type: string
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: A generic device error occurred.
        error_code: DEVICE_ERROR_GENERIC
    DeviceCreateRequest:
      allOf:
        - $ref: '#/components/schemas/schemas-DeviceCore'
      required:
        - name
        - login
      example:
        name: Lobby Phone
        login: lobby.phone.site_beta
        active: true
        channel_limit: 1
        timeout: 300
        caller_id_name: Lobby
        caller_id_number: '+13035550102'
        acl: 0.0.0.0/0
        fail_over_destination_code: voicemailbox:general_vm
    device_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
        error_code:
          type: string
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: A device-specific error occurred.
        error_code: DEVICE_ERROR
    DeviceUpdateRequest:
      type: object
      description: Fields that can be updated for an existing device. Login is typically not updatable.
      properties:
        name:
          type: string
          example: Sales Desk Phone 1 - Updated
        active:
          type: boolean
        channel_limit:
          type: integer
        timeout:
          type: integer
        caller_id_name:
          type: string
          nullable: true
        caller_id_number:
          type: string
          nullable: true
        acl:
          type: string
          nullable: true
        fail_over_destination_code:
          type: string
          nullable: true
      example:
        name: Marketing Phone
        active: false
        channel_limit: 1
        timeout: 90
        caller_id_name: Marketing Dept
        acl: 192.168.1.0/24
        fail_over_destination_code: menu:marketing_overflow
    DeviceResponseWithPassword:
      allOf:
        - $ref: '#/components/schemas/DeviceResponse'
        - type: object
          properties:
            password:
              type: string
              description: The newly generated SIP password for the device.
              example: newS3cureP@ssw0rd
          required:
            - password
      description: Device details including the newly regenerated SIP password.
      example:
        id: 1763
        site_id: 6
        name: John Doe Desk Phone
        login: john.doe.phone1
        password: newGeneratedS3cur3P@ss!
        active: true
        channel_limit: 2
        timeout: 120
        caller_id_name: John Doe
        caller_id_number: '+13035551234'
        acl: 0.0.0.0/0
        fail_over_destination_code: voicemailbox:vm_john_doe
        fail_over_destination:
          name: Voicemail for John Doe
          code: voicemailbox:vm_john_doe
        user_id: 5
        links:
          - href: /sites/6/devices/1763
            rel: self
            method: GET
    E911Core:
      type: object
      description: Core address and identification information for an E911 record.
      properties:
        name:
          type: string
          description: A descriptive name for this E911 record.
          example: Headquarters - Main Lobby E911
        caller_id_name:
          type: string
          description: The name to be displayed to the PSAP for 911 calls from this address.
          example: Innovatech Solutions - Lobby
        house_number:
          type: string
          description: Street number.
          example: '2150'
        house_number_suffix:
          type: string
          nullable: true
          description: Street number suffix (e.g., "A", "Unit 100").
          example: Suite 100
        street:
          type: string
          description: Street name.
          example: West 29th Avenue
        city:
          type: string
          description: City name.
          example: Denver
        state_province:
          type: string
          description: State or province code.
          example: CO
        postal_code:
          type: string
          description: Postal or ZIP code.
          example: '80211'
        country_code:
          type: string
          description: Two-letter ISO 3166-1 alpha-2 country code.
          example: US
      required:
        - name
        - caller_id_name
        - house_number
        - street
        - city
        - state_province
        - postal_code
        - country_code
      example:
        name: Shipping Dock E911
        caller_id_name: Innovatech Shipping
        house_number: '100'
        street: Industrial Way
        city: Warehouseville
        state_province: TX
        postal_code: '75000'
        country_code: US
    E911Response:
      allOf:
        - $ref: '#/components/schemas/E911Core'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the E911 record.
              example: 19
            site_id:
              type: integer
              format: int64
              description: Identifier of the site this E911 record is associated with.
              example: 6
            validated:
              type: boolean
              description: Indicates if the address has been successfully validated for E911 services.
              readOnly: true
              example: true
            did_number:
              type: string
              nullable: true
              readOnly: true
              description: The DID number automatically assigned to this E911 location for callback purposes.
              example: '+13035550100'
            links:
              type: array
              description: HATEOAS links related to this E911 record.
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
          required:
            - id
            - site_id
            - validated
            - name
            - caller_id_name
            - house_number
            - street
            - city
            - state_province
            - postal_code
            - country_code
      description: Detailed information about a specific E911 record.
      example:
        id: 19
        site_id: 6
        name: Main Office E911
        caller_id_name: Teliax Office Emergency
        house_number: '2150'
        house_number_suffix: Ste 310
        street: West 29th Ave
        city: Denver
        state_province: CO
        postal_code: '80211'
        country_code: US
        validated: true
        did_number: '+13035550123'
        links:
          - href: /sites/6/e911s/19
            rel: self
            method: GET
    E911ListResponse:
      type: object
      description: A list of E911 records for a site.
      properties:
        e911_records:
          type: array
          items:
            $ref: '#/components/schemas/E911Response'
      required:
        - e911_records
      example:
        e911_records:
          - id: 19
            site_id: 6
            name: Main Office E911
            caller_id_name: Teliax Office Emergency
            house_number: '2150'
            house_number_suffix: Ste 310
            street: West 29th Ave
            city: Denver
            state_province: CO
            postal_code: '80211'
            country_code: US
            validated: true
            did_number: '+13035550123'
            links:
              - href: /sites/6/e911s/19
                rel: self
                method: GET
    E911UpdateRequest:
      allOf:
        - $ref: '#/components/schemas/E911Core'
      description: Data for updating an existing E911 record. For PUT, all core fields are typically resubmitted.
      example:
        name: Warehouse E911 Address
        caller_id_name: Warehouse Emergency
        house_number: '789'
        street: Industrial Pkwy
        city: Commerce City
        state_province: CO
        postal_code: '80022'
        country_code: US
    ExtensionCore:
      type: object
      properties:
        number:
          type: string
          description: Extension number (e.g., "1001", "*123"). Typically 2-12 digits.
          example: '1001'
        name:
          type: string
          description: A user-friendly name for the extension (e.g., "Sales Hotline", "John Doe").
          example: Sales Department
        destination_code:
          type: string
          description: System code for the destination where calls to this extension are routed (e.g., "device:dev_xyz", "menu:ivr_main").
          example: ring_group:rg_sales
      required:
        - number
        - name
        - destination_code
    index_components-schemas-Link:
      type: object
      properties:
        href:
          type: string
          format: uri-reference
        rel:
          type: string
        method:
          type: string
          enum:
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
          default: GET
      required:
        - href
        - rel
      example:
        href: /sites/6/extensions/73
        rel: self
        method: GET
    ExtensionResponse:
      allOf:
        - $ref: '#/components/schemas/ExtensionCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the extension.
              example: 101
            site_id:
              type: integer
              format: int64
              description: Identifier of the site this extension belongs to.
              example: 6
              nullable: true
            destination_name:
              type: string
              description: Human-readable name of the destination this extension points to.
              example: Sales Team Ring Group
              nullable: true
            user_id:
              type: integer
              format: int64
              nullable: true
              description: Optional user ID associated with this extension.
              example: 5
            links:
              type: array
              items:
                $ref: '#/components/schemas/index_components-schemas-Link'
              nullable: true
          required:
            - id
            - site_id
            - destination_name
            - number
            - name
            - destination_code
      description: Detailed information about a site extension.
      example:
        id: 101
        site_id: 6
        number: '1001'
        name: Sales
        destination_code: ring_group:45
        destination_name: Sales Team Ring Group
        user_id: 5
        links:
          - href: /sites/6/extensions/101
            rel: self
            method: GET
    PaginatedExtensionListResponse:
      type: object
      description: A paginated list of extensions.
      properties:
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionResponse'
        total_items:
          type: integer
          example: 150
        total_pages:
          type: integer
          example: 6
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 25
        links:
          type: array
          items:
            $ref: '#/components/schemas/index_components-schemas-Link'
          nullable: true
      required:
        - extensions
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        extensions:
          - id: 101
            site_id: 6
            number: '1001'
            name: Sales
            destination_code: ring_group:45
            destination_name: Sales Team Ring Group
            user_id: 5
            links:
              - href: /sites/6/extensions/101
                rel: self
                method: GET
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: /sites/6/extensions?page=1&page_size=25
            rel: self
            method: GET
    index_components-schemas-Error-2:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          example: An extension processing error occurred.
        error_code:
          type: string
          example: EXTENSION_PROCESSING_ERROR
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code
    ExtensionCreateRequest:
      allOf:
        - $ref: '#/components/schemas/ExtensionCore'
      description: Data required to create a new extension.
      required:
        - number
        - name
        - destination_code
      example:
        number: '1003'
        name: Billing
        destination_code: voicemailbox:billing_vm
    extension_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
        error_code:
          type: string
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: An individual extension operation error occurred.
        error_code: EXTENSION_DETAIL_ERROR
    ExtensionUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/ExtensionCore'
        - type: object
          properties:
            user_id:
              type: integer
              format: int64
              nullable: true
              description: Optional user ID to associate with this extension.
              example: 10
      description: Data for updating an existing extension. Only provide fields to be changed.
      example:
        name: Marketing Hotdesk
        number: '2005'
        destination_code: user:jane_doe_vm
        user_id: null
    ExtensionListResponse:
      type: object
      description: A list of extensions.
      properties:
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionResponse'
      required:
        - extensions
      example:
        extensions:
          - id: 75
            site_id: null
            number: '7001'
            name: Available Ext 7001
            destination_code: ''
            destination_name: null
            user_id: null
            links: []
    transfer_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          description: A human-readable description of the error.
        error_code:
          type: string
          description: A machine-parsable error code.
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: An error occurred during extension transfer.
        error_code: EXTENSION_TRANSFER_ERROR
    FaxMachineCore:
      type: object
      properties:
        name:
          type: string
          description: A user-friendly name for the fax machine configuration.
          example: Main Office Fax
        notification_emails:
          type: string
          description: Comma-separated list of email addresses to which received faxes (as PDF) will be sent.
          example: incoming-faxes@example.com,admin-faxes@example.com
        user_id:
          type: integer
          format: int64
          nullable: true
          description: Identifier of the user primarily associated with this fax machine, if any.
          example: 25
      required:
        - name
        - notification_emails
      example:
        name: Accounting Fax
        notification_emails: accounts@example.com
        user_id: 30
    FaxMachineResponse:
      allOf:
        - $ref: '#/components/schemas/FaxMachineCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the fax machine configuration.
              example: 3
            site_id:
              type: integer
              format: int64
              description: Identifier of the site this fax machine belongs to.
              example: 6
              nullable: true
            code:
              type: string
              readOnly: true
              description: System-level code for this fax machine, often used in routing configurations.
              example: fax_machine:3
            links:
              type: array
              description: HATEOAS links related to this fax machine.
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
          required:
            - id
            - site_id
            - code
            - name
            - notification_emails
      description: Detailed information about a fax machine (Fax to Email) configuration.
      example:
        id: 3
        site_id: 6
        code: fax_machine:3
        name: Sales Department Fax
        notification_emails: sales-faxes@example.com,manager@example.com
        user_id: 1
        links:
          - href: /sites/6/fax-machines/3
            rel: self
            method: GET
    FaxMachineListResponse:
      type: object
      description: A list of fax machines for a site.
      properties:
        fax_machines:
          type: array
          items:
            $ref: '#/components/schemas/FaxMachineResponse'
      required:
        - fax_machines
      example:
        fax_machines:
          - id: 3
            site_id: 6
            code: fax_machine:3
            name: Sales Department Fax
            notification_emails: sales-faxes@example.com,manager@example.com
            user_id: 1
            links:
              - href: /sites/6/fax-machines/3
                rel: self
                method: GET
    FaxMachineCreateRequest:
      allOf:
        - $ref: '#/components/schemas/FaxMachineCore'
      description: Data required to create a new fax machine (Fax to Email) configuration.
      required:
        - name
        - notification_emails
      example:
        name: Customer Service Fax
        notification_emails: support-faxes@example.com
        user_id: null
    FaxMachineUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/FaxMachineCore'
      description: Data for updating an existing fax machine configuration. For PUT, all core fields are typically resubmitted.
      example:
        name: Support Fax - Updated
        notification_emails: support@example.com,helpdesk@example.com
        user_id: 35
    ForwardCore:
      type: object
      properties:
        name:
          type: string
          description: A user-friendly name for the forward configuration.
          example: Main Office After Hours
        destination_dial_string:
          type: string
          description: The external phone number (E.164 format recommended) to which calls will be forwarded.
          example: '+14155550100'
        timeout:
          type: integer
          description: How long (in seconds) the forward will be attempted before failing over or disconnecting.
          default: 20
          example: 30
        active:
          type: boolean
          description: Whether this call forward rule is currently active.
          default: true
          example: true
        fail_over_destination_code:
          type: string
          nullable: true
          description: System code for the destination if the forward attempt fails or times out.
          example: voicemailbox:general_voicemail
        user_id:
          type: integer
          format: int64
          nullable: true
          description: Optional. Identifier of the user primarily associated with this forward.
          example: 10
      required:
        - name
        - destination_dial_string
      example:
        name: Support Line Forward
        destination_dial_string: '+18005551212'
        timeout: 25
        active: true
        fail_over_destination_code: menu:support_options
        user_id: 15
    ForwardResponse:
      allOf:
        - $ref: '#/components/schemas/ForwardCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the forward.
              example: 77
            site_id:
              type: integer
              format: int64
              description: Identifier of the site this forward belongs to.
              example: 6
            links:
              type: array
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
          required:
            - id
            - site_id
            - name
            - destination_dial_string
      description: Detailed information about a call forward.
      example:
        id: 77
        site_id: 6
        name: After Hours
        destination_dial_string: '+13125559876'
        active: true
        timeout: 30
        fail_over_destination_code: voicemailbox:vm_general
        user_id: 10
        links:
          - href: /sites/6/forwards/77
            rel: self
            method: GET
    PaginatedForwardListResponse:
      type: object
      description: A paginated list of call forwards.
      properties:
        forwards:
          type: array
          items:
            $ref: '#/components/schemas/ForwardResponse'
        total_items:
          type: integer
          example: 50
        total_pages:
          type: integer
          example: 5
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 10
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      required:
        - forwards
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        forwards:
          - id: 77
            site_id: 6
            name: After Hours
            destination_dial_string: '+13125559876'
            active: true
            timeout: 30
            fail_over_destination_code: voicemailbox:vm_general
            user_id: 10
            links:
              - href: /sites/6/forwards/77
                rel: self
                method: GET
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: /sites/6/forwards?page=1&page_size=25
            rel: self
            method: GET
    ForwardCreateRequest:
      allOf:
        - $ref: '#/components/schemas/ForwardCore'
      description: Data required to create a new call forward.
      example:
        name: Holiday Backup Forward
        destination_dial_string: '+12125557890'
        timeout: 15
        active: false
    ForwardUpdateRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: A user-friendly name for the forward configuration.
          example: Main Office After Hours
        destination_dial_string:
          type: string
          nullable: true
          description: The external phone number (E.164 format recommended) to which calls will be forwarded.
          example: '+14155550100'
        timeout:
          type: integer
          nullable: true
          description: How long (in seconds) the forward will be attempted before failing over or disconnecting.
          example: 30
        active:
          type: boolean
          nullable: true
          description: Whether this call forward rule is currently active.
          example: true
        fail_over_destination_code:
          type: string
          nullable: true
          description: System code for the destination if the forward attempt fails or times out.
          example: voicemailbox:general_voicemail
        user_id:
          type: integer
          format: int64
          nullable: true
          description: Optional. Identifier of the user primarily associated with this forward.
          example: 10
      description: Data for updating an existing call forward. Only provide fields to change.
      example:
        name: Weekend On-Call Forward
        destination_dial_string: '+18885550102'
        active: true
        timeout: 25
    AvailableForward:
      type: object
      allOf:
        - $ref: '#/components/schemas/ForwardResponse'
        - type: object
          properties:
            assigned:
              type: boolean
              description: Whether the forward is currently assigned (e.g., to the user specified in query).
              example: true
            assigned_to:
              type: integer
              format: int64
              nullable: true
              description: ID of the user this forward is assigned to in this context, if any.
              example: 42
          required:
            - assigned
    AvailableForwardListResponse:
      type: object
      properties:
        forwards:
          type: array
          description: Array of Forwards considered available or assigned in this context.
          items:
            $ref: '#/components/schemas/AvailableForward'
      required:
        - forwards
      example:
        forwards:
          - id: 77
            site_id: 6
            name: After Hours
            destination_dial_string: '+13125559876'
            active: true
            timeout: 30
            fail_over_destination_code: voicemailbox:vm_general
            assigned: true
            assigned_to: 42
            user_id: 10
            links:
              - href: /sites/6/forwards/77
                rel: self
                method: GET
          - id: 78
            site_id: 6
            name: Lunch Break
            destination_dial_string: '+13125559877'
            active: false
            timeout: 20
            fail_over_destination_code: null
            assigned: false
            assigned_to: null
            user_id: null
            links:
              - href: /sites/6/forwards/78
                rel: self
                method: GET
    LocationCore:
      type: object
      properties:
        name:
          type: string
          description: A user-friendly name for this location (e.g., "Main Building", "Floor 2 Office").
          example: Headquarters - Reception
        house_number:
          type: string
          description: The street number of the address.
          example: '2150'
        house_number_suffix:
          type: string
          nullable: true
          description: Suffix for the street number, if any (e.g., "A", "1/2").
          example: Ste 310
        street:
          type: string
          description: The street name.
          example: West 29th Ave
        city:
          type: string
          description: The city name.
          example: Denver
        state_province:
          type: string
          description: The state or province code (e.g., "CO", "ON").
          example: CO
        postal_code:
          type: string
          description: The postal or ZIP code.
          example: '80211'
        country_code:
          type: string
          description: Two-letter ISO 3166-1 alpha-2 country code.
          example: US
        caller_id_name:
          type: string
          nullable: true
          description: Caller ID name to be used for E911 calls originating from this location.
          example: Teliax Office Main
        e911_enabled:
          type: boolean
          description: Indicates if E911 service is enabled for this location. Geocoding and validation occur upon setting this.
          default: true
          example: true
      required:
        - name
        - house_number
        - street
        - city
        - state_province
        - postal_code
        - country_code
      example:
        name: Satellite Office
        house_number: '1000'
        street: Commerce St
        city: Dallas
        state_province: TX
        postal_code: '75201'
        country_code: US
        caller_id_name: Dallas Office
        e911_enabled: true
    LocationResponse:
      allOf:
        - $ref: '#/components/schemas/LocationCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the location record.
              example: 9
            site_id:
              type: integer
              format: int64
              description: Identifier of the site this location belongs to.
              example: 6
            e911_id:
              type: integer
              format: int64
              nullable: true
              description: Identifier of the associated E911 record/validation, if e911_enabled is true.
              example: 123
            updated_by:
              type: string
              nullable: true
              readOnly: true
              description: Identifier of the user who last updated this location.
              example: jane.doe@example.com
            latitude:
              type: string
              nullable: true
              readOnly: true
            longitude:
              type: string
              nullable: true
              readOnly: true
            links:
              type: array
              description: HATEOAS links related to this location.
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
          required:
            - id
            - site_id
            - name
            - house_number
            - street
            - city
            - state_province
            - postal_code
            - country_code
      description: Detailed information about a site location.
      example:
        id: 9
        site_id: 6
        name: Main Office - Denver
        house_number: '2150'
        house_number_suffix: Ste 310
        street: West 29th Ave
        city: Denver
        state_province: CO
        postal_code: '80211'
        country_code: US
        caller_id_name: Teliax Office Denver
        e911_enabled: true
        e911_id: 123
        updated_by: system
        latitude: '39.759000'
        longitude: '-105.015000'
        links:
          - href: /sites/6/locations/9
            rel: self
            method: GET
    PaginatedLocationListResponse:
      type: object
      description: A paginated list of locations for a site.
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/LocationResponse'
        total_items:
          type: integer
          example: 50
        total_pages:
          type: integer
          example: 5
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 10
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      required:
        - locations
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        locations:
          - id: 9
            site_id: 6
            name: Main Office - Denver
            house_number: '2150'
            house_number_suffix: Ste 310
            street: West 29th Ave
            city: Denver
            state_province: CO
            postal_code: '80211'
            country_code: US
            caller_id_name: Teliax Office Denver
            e911_enabled: true
            e911_id: 123
            updated_by: system
            latitude: '39.759000'
            longitude: '-105.015000'
            links:
              - href: /sites/6/locations/9
                rel: self
                method: GET
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: /sites/6/locations?page=1&page_size=25
            rel: self
            method: GET
    LocationCreateRequest:
      allOf:
        - $ref: '#/components/schemas/LocationCore'
      description: Data required to create a new location for a site.
      example:
        name: Remote Warehouse
        house_number: '50'
        street: Storage Ln
        city: Aurora
        state_province: CO
        postal_code: '80011'
        country_code: US
        caller_id_name: Warehouse E911
        e911_enabled: false
    LocationUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/LocationCore'
      description: Data for updating an existing location. All fields are typically resubmitted for a PUT.
      example:
        name: HQ Front Desk - Updated
        house_number: '123'
        street: Main St
        city: Anytown
        state_province: CA
        postal_code: '90210'
        country_code: US
        caller_id_name: HQ Front Desk Emergency
        e911_enabled: true
    MenuCore:
      type: object
      properties:
        name:
          type: string
          description: A user-friendly name for the menu.
          example: Main Business Hours Menu
        pin:
          type: string
          nullable: true
          description: Numeric PIN for accessing menu options or management features (if applicable).
          example: '1234'
        fail_over_destination_code:
          type: string
          description: System code for the destination if no option is selected or an error occurs.
          example: voicemailbox:general_vm
      required:
        - name
        - fail_over_destination_code
      example:
        name: After Hours Menu
        pin: '9999'
        fail_over_destination_code: extension:operator
    MenuResponseOptions:
      type: object
      additionalProperties:
        type: string
        nullable: true
      example:
        '0': ring_group:sales_rg
        '1': extension:1001
        '*': voicemailbox:operator_vm
    MenuResponse:
      allOf:
        - $ref: '#/components/schemas/MenuCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the menu.
              example: 55
            site_id:
              type: integer
              format: int64
              description: Identifier of the site this menu belongs to.
              example: 6
            options:
              $ref: '#/components/schemas/MenuResponseOptions'
            greeting_url:
              type: string
              format: uri
              nullable: true
              description: URL to the current greeting audio file.
              example: https://cdn.example.com/greetings/menu_55.mp3
            links:
              type: array
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
          required:
            - id
            - site_id
            - name
            - fail_over_destination_code
      example:
        id: 55
        site_id: 6
        name: Main Business Hours Menu
        pin: '1234'
        fail_over_destination_code: voicemailbox:general_vm
        options:
          '0': ring_group:sales_rg
          '1': extension:1001
          '*': voicemailbox:operator_vm
        greeting_url: https://cdn.example.com/greetings/menu_55.mp3
        links:
          - href: /sites/6/menus/55
            rel: self
            method: GET
    PaginatedMenuListResponse:
      type: object
      description: A paginated list of menus.
      properties:
        menus:
          type: array
          items:
            $ref: '#/components/schemas/MenuResponse'
        total_items:
          type: integer
          example: 20
        total_pages:
          type: integer
          example: 2
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 10
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      required:
        - menus
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        menus:
          - id: 55
            site_id: 6
            name: Main Menu
            pin: '****'
            fail_over_destination_code: voicemailbox:42
            options:
              '0': ring_group:10
              '1': extension:101
            greeting_url: https://cdn.example.com/greetings/menu_55.mp3
            links:
              - href: /sites/6/menus/55
                rel: self
                method: GET
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: /sites/6/menus?page=1&page_size=25
            rel: self
            method: GET
    MenuCreateRequest:
      type: object
      properties:
        name:
          type: string
        pin:
          type: string
          nullable: true
        fail_over_destination_code:
          type: string
        greeting:
          type: string
          format: binary
          nullable: true
          description: Audio file for the menu greeting.
        option_routes[0]:
          type: string
          nullable: true
          description: Destination code for key '0'.
        option_routes[1]:
          type: string
          nullable: true
        option_routes[2]:
          type: string
          nullable: true
        option_routes[3]:
          type: string
          nullable: true
        option_routes[4]:
          type: string
          nullable: true
        option_routes[5]:
          type: string
          nullable: true
        option_routes[6]:
          type: string
          nullable: true
        option_routes[7]:
          type: string
          nullable: true
        option_routes[8]:
          type: string
          nullable: true
        option_routes[9]:
          type: string
          nullable: true
        option_routes[*]:
          type: string
          nullable: true
          description: Destination code for key '*'.
      required:
        - name
        - fail_over_destination_code
      example:
        name: New Support IVR
        pin: '5678'
        fail_over_destination_code: voicemailbox:support_vm
        option_routes[0]: ring_group:tech_support
        option_routes[1]: extension:105
    MenuUpdateRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        pin:
          type: string
          nullable: true
        fail_over_destination_code:
          type: string
          nullable: true
        greeting:
          type: string
          format: binary
          nullable: true
          description: New audio file for the menu greeting.
        option_routes[0]:
          type: string
          nullable: true
        option_routes[1]:
          type: string
          nullable: true
        option_routes[2]:
          type: string
          nullable: true
        option_routes[3]:
          type: string
          nullable: true
        option_routes[4]:
          type: string
          nullable: true
        option_routes[5]:
          type: string
          nullable: true
        option_routes[6]:
          type: string
          nullable: true
        option_routes[7]:
          type: string
          nullable: true
        option_routes[8]:
          type: string
          nullable: true
        option_routes[9]:
          type: string
          nullable: true
        option_routes[*]:
          type: string
          nullable: true
      description: Attributes for updating a menu. For multipart/form-data, only include fields to change.
      example:
        name: Holiday Menu
        pin: '2024'
        fail_over_destination_code: extension:holiday_info
        option_routes[1]: extension:santa
    PhoneNumberCore:
      type: object
      properties:
        name:
          type: string
          description: A user-friendly name for the phone number (e.g., "Main Line", "Sales Dept").
          example: Main Business Line
        number:
          type: string
          description: The actual phone number in E.164 format (e.g., +13035551212).
          example: '+14155550123'
        destination_code:
          type: string
          description: System code for the primary destination where calls to this number are routed.
          example: device:dev_main_reception
        fail_over_destination_code:
          type: string
          nullable: true
          description: System code for the failover destination if the primary is unavailable.
          example: voicemailbox:general_company_vm
        e911_id:
          type: integer
          format: int64
          nullable: true
          description: Identifier of the E911 record associated with this phone number for emergency calling.
          example: 45
        user_id:
          type: integer
          format: int64
          nullable: true
          description: Optional. Identifier of a user primarily associated with this phone number.
          example: 101
      required:
        - name
        - number
        - destination_code
      example:
        name: Support Line
        number: '+18885551234'
        destination_code: ring_group:support_rg
        fail_over_destination_code: menu:after_hours_support
        e911_id: 46
        user_id: 102
    schemas-PhoneNumberResponse:
      allOf:
        - $ref: '#/components/schemas/PhoneNumberCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
            site_id:
              type: integer
              format: int64
              nullable: true
            destination:
              nullable: true
              oneOf:
                - $ref: '#/components/schemas/SiteDestination'
            fail_over_destination:
              nullable: true
              oneOf:
                - $ref: '#/components/schemas/SiteDestination'
            links:
              type: array
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
          required:
            - id
            - name
            - number
            - destination_code
      description: Detailed information about a phone number assigned to a site.
      example:
        id: 123
        site_id: 6
        name: Main Office Line
        number: '+13035551212'
        destination_code: ring_group:10
        destination:
          name: Sales Team Ring Group
          code: ring_group:10
        fail_over_destination_code: voicemailbox:vm_sales
        fail_over_destination:
          name: Sales Voicemail
          code: voicemailbox:vm_sales
        e911_id: 45
        user_id: null
        links:
          - href: /sites/6/phone-numbers/123
            rel: self
            method: GET
    PaginatedPhoneNumberListResponse:
      type: object
      description: A paginated list of phone numbers.
      properties:
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/schemas-PhoneNumberResponse'
        total_items:
          type: integer
          example: 50
        total_pages:
          type: integer
          example: 5
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 10
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      required:
        - phone_numbers
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        phone_numbers:
          - id: 123
            site_id: 6
            name: Main Office Line
            number: '+13035551212'
            destination_code: ring_group:10
            destination:
              name: Sales Team Ring Group
              code: ring_group:10
            fail_over_destination_code: voicemailbox:vm_sales
            fail_over_destination:
              name: Sales Voicemail
              code: voicemailbox:vm_sales
            e911_id: 45
            user_id: null
            links:
              - href: /sites/6/phone-numbers/123
                rel: self
                method: GET
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: /sites/6/phone-numbers?page=1&page_size=25
            rel: self
            method: GET
    PhoneNumberCreateRequest:
      allOf:
        - $ref: '#/components/schemas/PhoneNumberCore'
      description: Data required to assign/create a phone number for a site.
      required:
        - name
        - number
        - destination_code
      example:
        name: Marketing Campaign DID
        number: +1800555PROMO
        destination_code: menu:marketing_ivr
        e911_id: null
    PhoneNumberUpdateRequest:
      type: object
      description: Data for updating an existing phone number's configuration on a site.
      properties:
        name:
          type: string
          nullable: true
          description: New user-friendly name for the phone number.
          example: Support Hotline - Updated
        destination_code:
          type: string
          nullable: true
          description: New system code for the call routing destination.
          example: voicemailbox:support_general_vm
        fail_over_destination_code:
          type: string
          nullable: true
          description: New system code for the failover destination.
          example: menu:after_hours_support_menu
        e911_id:
          type: integer
          format: int64
          nullable: true
          description: New E911 record ID to associate.
          example: 47
        user_id:
          type: integer
          format: int64
          nullable: true
          description: New user ID to associate with the phone number.
          example: 103
      example:
        name: Main Office Line (Primary - Updated)
        destination_code: device:reception_phone_new
    AvailablePhoneNumber:
      type: object
      allOf:
        - $ref: '#/components/schemas/schemas-PhoneNumberResponse'
        - type: object
          properties:
            assigned:
              type: boolean
              description: Whether the phone number is currently assigned (e.g. to the specified user or any user on the site).
              example: true
            assigned_to:
              type: integer
              format: int64
              nullable: true
              description: ID of the user this phone number is assigned to, if any.
              example: 42
          required:
            - assigned
    AvailablePhoneNumberListResponse:
      type: object
      description: A list of available or contextually relevant phone numbers.
      properties:
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/AvailablePhoneNumber'
      required:
        - phone_numbers
      example:
        phone_numbers:
          - id: 125
            site_id: null
            name: Inventory DID 1
            number: '+17205551000'
            destination_code: ''
            destination: null
            fail_over_destination_code: null
            fail_over_destination: null
            e911_id: null
            user_id: null
            assigned: false
            assigned_to: null
            links:
              - href: /phone-number-inventory/125
                rel: inventoryDetails
                method: GET
          - id: 123
            site_id: 6
            name: Main Office
            number: '+13125551234'
            destination_code: ring_group:10
            destination:
              code: ring_group:10
              name: Sales Team
            fail_over_destination:
              code: voicemailbox:vm_sales
              name: Sales Voicemail
            e911_id: 45
            user_id: 42
            assigned: true
            assigned_to: 42
            links:
              - href: /sites/6/phone-numbers/123
                rel: self
                method: GET
    RingGroupCore:
      type: object
      properties:
        name:
          type: string
          description: A user-friendly name for the ring group.
          example: Main Sales Line
        destination_codes:
          type: array
          items:
            type: string
          description: An array of system codes for the destinations to be rung.
          example:
            - device:dev123
            - extension:ext456
        ring_strategy:
          type: string
          enum:
            - simultaneous
            - sequential
            - random
          description: How the destinations are rung.
          example: simultaneous
        timeout:
          type: integer
          description: Duration in seconds to ring the group before proceeding to failover.
          default: 20
          example: 30
        fail_over_destination_code:
          type: string
          nullable: true
          description: System code for the failover destination if the ring group is not answered.
          example: voicemailbox:general_sales_vm
        user_id:
          type: integer
          format: int64
          nullable: true
          description: Optional. Identifier of a user primarily associated with this ring group.
          example: 10
      required:
        - name
        - destination_codes
        - ring_strategy
        - timeout
      example:
        name: Customer Support
        destination_codes:
          - device:agent1
          - extension:agent2_mobile
        ring_strategy: random
        timeout: 25
        fail_over_destination_code: menu:support_escalation
        user_id: 20
    RingGroupResponse:
      allOf:
        - $ref: '#/components/schemas/RingGroupCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
            site_id:
              type: integer
              format: int64
            destinations:
              type: array
              items:
                $ref: '#/components/schemas/SiteDestination'
            fail_over_destination:
              type: object
              nullable: true
              allOf:
                - $ref: '#/components/schemas/SiteDestination'
            links:
              type: array
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
          required:
            - id
            - site_id
            - name
            - destination_codes
            - ring_strategy
            - timeout
      description: Detailed information about a ring group.
      example:
        id: 10
        site_id: 6
        name: Sales Team
        destination_codes:
          - device:dev_sales1
          - extension:ext_sales_mobile
        destinations:
          - name: Sales Device 1
            code: device:dev_sales1
          - name: Sales Extension Mobile
            code: extension:ext_sales_mobile
        ring_strategy: simultaneous
        timeout: 30
        fail_over_destination_code: voicemailbox:vm_sales
        fail_over_destination:
          name: Sales Voicemail
          code: voicemailbox:vm_sales
        user_id: null
        links:
          - href: /sites/6/ring-groups/10
            rel: self
            method: GET
    PaginatedRingGroupListResponse:
      type: object
      description: A paginated list of ring groups.
      properties:
        ring_groups:
          type: array
          items:
            $ref: '#/components/schemas/RingGroupResponse'
        total_items:
          type: integer
          example: 30
        total_pages:
          type: integer
          example: 3
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 10
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      required:
        - ring_groups
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        ring_groups:
          - id: 10
            site_id: 6
            name: Sales Team
            destination_codes:
              - device:dev_sales1
              - extension:ext_sales_mobile
            destinations:
              - name: Sales Device 1
                code: device:dev_sales1
              - name: Sales Extension Mobile
                code: extension:ext_sales_mobile
            ring_strategy: simultaneous
            timeout: 30
            fail_over_destination_code: voicemailbox:vm_sales
            fail_over_destination:
              name: Sales Voicemail
              code: voicemailbox:vm_sales
            user_id: null
            links:
              - href: /sites/6/ring-groups/10
                rel: self
                method: GET
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: /sites/6/ring-groups?page=1&page_size=25
            rel: self
            method: GET
    RingGroupCreateRequest:
      allOf:
        - $ref: '#/components/schemas/RingGroupCore'
      description: Data required to create a new ring group.
      required:
        - name
        - destination_codes
        - ring_strategy
        - timeout
      example:
        name: Tech Support Tier 1
        destination_codes:
          - user:tech1
          - user:tech2
        ring_strategy: simultaneous
        timeout: 60
        fail_over_destination_code: ring_group:tech_support_tier2
    RingGroupUpdateRequest:
      type: object
      description: Attributes for updating a ring group. Only provide fields to be changed.
      properties:
        name:
          type: string
          nullable: true
        destination_codes:
          type: array
          items:
            type: string
          nullable: true
        ring_strategy:
          type: string
          enum:
            - simultaneous
            - sequential
            - random
          nullable: true
        timeout:
          type: integer
          nullable: true
        fail_over_destination_code:
          type: string
          nullable: true
        user_id:
          type: integer
          format: int64
          nullable: true
          description: Optional. Identifier of a user primarily associated with this ring group.
          example: 10
      example:
        name: Billing Department RG
        destination_codes:
          - user:billing_agent1
          - user:billing_agent2
        ring_strategy: simultaneous
        timeout: 15
    ScheduleAttributes:
      type: object
      properties:
        name:
          type: string
          description: A user-friendly name for the schedule.
          example: Weekday Business Hours
        time_zone:
          type: string
          description: IANA Timezone Database name (e.g., America/New_York).
          example: America/Denver
        start_hour:
          type: string
          description: Start hour (00-23) for the schedule active period.
          example: '08'
        start_minute:
          type: string
          description: Start minute (00-59).
          example: '30'
        end_hour:
          type: string
          description: End hour (00-23).
          example: '17'
        end_minute:
          type: string
          description: End minute (00-59).
          example: '00'
        start_weekday:
          type: string
          description: Weekday when the schedule active period starts.
          example: Mon
        end_weekday:
          type: string
          description: Weekday when the schedule active period ends.
          example: Fri
        exceptions:
          type: string
          nullable: true
          description: Space-separated list of dates (MM/DD format) when this schedule is inactive.
          example: 01/01 12/25
        positive_destination_code:
          type: string
          description: System code for the destination if the current time falls within the schedule.
          example: menu:main_day_menu
        negative_destination_code:
          type: string
          description: System code for the destination if the current time falls outside the schedule.
          example: voicemailbox:after_hours_vm
      required:
        - name
        - time_zone
        - start_hour
        - start_minute
        - end_hour
        - end_minute
        - start_weekday
        - end_weekday
        - positive_destination_code
        - negative_destination_code
      example:
        name: Holiday Hours
        time_zone: America/Los_Angeles
        start_hour: '10'
        start_minute: '00'
        end_hour: '16'
        end_minute: '00'
        start_weekday: Mon
        end_weekday: Mon
        exceptions: ''
        positive_destination_code: menu:holiday_greeting
        negative_destination_code: voicemailbox:closed_vm
    ScheduleResponseData:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - schedule
        attributes:
          allOf:
            - $ref: '#/components/schemas/ScheduleAttributes'
            - type: object
              properties:
                site_id:
                  type: integer
                  format: int64
                  nullable: true
                positive_destination:
                  $ref: '#/components/schemas/SiteDestination'
                negative_destination:
                  $ref: '#/components/schemas/SiteDestination'
        links:
          $ref: '#/components/schemas/LinkObject'
      required:
        - id
        - type
        - attributes
    PaginatedScheduleListResponse:
      type: object
      description: A paginated list of schedules.
      properties:
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleResponseData'
        total_items:
          type: integer
          example: 20
        total_pages:
          type: integer
          example: 2
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 10
        links:
          $ref: '#/components/schemas/PaginationLinks'
      required:
        - schedules
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        schedules:
          - id: '7'
            type: schedule
            attributes:
              name: Business Hours Rule
              time_zone: America/Denver
              start_hour: '09'
              start_minute: '00'
              end_hour: '17'
              end_minute: '00'
              start_weekday: Mon
              end_weekday: Fri
              exceptions: 12/25,01/01
              positive_destination_code: menu:day_menu
              negative_destination_code: voicemailbox:after_hours_vm
              site_id: 6
            links:
              self:
                href: /sites/6/schedules/7
                rel: self
                method: GET
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          self:
            href: /sites/6/schedules?page=1&page_size=25
            rel: self
            method: GET
          first:
            href: /sites/6/schedules?page=1&page_size=25
            rel: first
            method: GET
          last:
            href: /sites/6/schedules?page=1&page_size=25
            rel: last
            method: GET
    ScheduleCreateRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          properties:
            type:
              type: string
              enum:
                - schedule
            attributes:
              $ref: '#/components/schemas/ScheduleAttributes'
      example:
        data:
          type: schedule
          attributes:
            name: Lunch Break Schedule
            time_zone: America/Chicago
            start_hour: '12'
            start_minute: '00'
            end_hour: '13'
            end_minute: '00'
            start_weekday: Mon
            end_weekday: Fri
            positive_destination_code: forward:lunch_coverage_phone
            negative_destination_code: ring_group:main_office_rg
    ScheduleResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ScheduleResponseData'
      required:
        - data
      example:
        data:
          id: '7'
          type: schedule
          attributes:
            name: Business Hours Rule
            time_zone: America/Denver
            start_hour: '09'
            start_minute: '00'
            end_hour: '17'
            end_minute: '00'
            start_weekday: Mon
            end_weekday: Fri
            exceptions: 12/25,01/01
            positive_destination_code: menu:day_menu
            negative_destination_code: voicemailbox:after_hours_vm
            site_id: 6
            positive_destination:
              name: Day Menu
              code: menu:day_menu
            negative_destination:
              name: After Hours Voicemail
              code: voicemailbox:after_hours_vm
          links:
            self:
              href: /sites/6/schedules/7
              rel: self
              method: GET
    schedule_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          description: A human-readable description of the error.
        error_code:
          type: string
          description: A machine-parsable error code.
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
                description: JSON pointer to the field that caused the error.
              issue:
                type: string
                description: Specific issue with the field.
      required:
        - status
        - error
        - error_code
    ScheduleUpdateRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          properties:
            type:
              type: string
              enum:
                - schedule
            attributes:
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                time_zone:
                  type: string
                  nullable: true
                start_hour:
                  type: string
                  nullable: true
                start_minute:
                  type: string
                  nullable: true
                end_hour:
                  type: string
                  nullable: true
                end_minute:
                  type: string
                  nullable: true
                start_weekday:
                  type: string
                  nullable: true
                end_weekday:
                  type: string
                  nullable: true
                exceptions:
                  type: string
                  nullable: true
                positive_destination_code:
                  type: string
                  nullable: true
                negative_destination_code:
                  type: string
                  nullable: true
      description: Data for updating an existing Schedule. Only provided fields are updated.
      example:
        data:
          type: schedule
          attributes:
            name: Holiday Hours 2024
            exceptions: 12/24,12/25,12/31,01/01
            time_zone: America/New_York
            start_hour: '00'
            start_minute: '00'
            end_hour: '23'
            end_minute: '59'
            start_weekday: Mon
            end_weekday: Sun
            positive_destination_code: announcement:holiday_closed
            negative_destination_code: announcement:holiday_closed
    available_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          description: A human-readable description of the error.
        error_code:
          type: string
          description: A machine-parsable error code.
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: An error occurred while retrieving available schedules.
        error_code: AVAILABLE_SCHEDULES_ERROR
    transfer_components-schemas-Error-2:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          description: A human-readable description of the error.
        error_code:
          type: string
          description: A machine-parsable error code.
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: An error occurred during schedule transfer.
        error_code: SCHEDULE_TRANSFER_ERROR
    SeatCore:
      type: object
      properties:
        name:
          type: string
          description: A descriptive name for the seat assignment.
          example: John Doe - Standard Setup
        template_id:
          type: integer
          format: int64
          description: Identifier of the service template to use for provisioning this seat.
          example: 10
        user_id:
          type: integer
          format: int64
          nullable: true
          description: Identifier of the user to whom this seat is assigned.
          example: 42
      required:
        - name
        - template_id
      example:
        name: Jane Roe - Premium Setup
        template_id: 15
        user_id: 43
    SwitchableFeature:
      type: object
      description: Represents a provisioned feature within a seat.
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of this specific provisioned feature instance.
          example: 125
        feature_type:
          type: string
          description: The type of the provisioned feature (e.g., "device", "voicemailbox", "extension").
          example: voicemailbox
        feature_id:
          type: integer
          format: int64
          description: Identifier of the actual underlying feature resource (e.g., the ID of the voicemailbox).
          example: 16
        name:
          type: string
          description: The name assigned to this provisioned feature (may be derived from template or user).
          example: John Doe's Voicemail
      required:
        - id
        - feature_type
        - feature_id
        - name
      example:
        id: 130
        feature_type: device
        feature_id: 205
        name: Desk Phone - Model X
    SeatResponse:
      allOf:
        - $ref: '#/components/schemas/SeatCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
            site_id:
              type: integer
              format: int64
            switchables:
              type: array
              items:
                $ref: '#/components/schemas/SwitchableFeature'
            links:
              type: array
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
          required:
            - id
            - site_id
            - name
            - template_id
      description: Detailed information about a user seat on a site.
      example:
        id: 25
        site_id: 6
        name: Basic User Seat
        template_id: 10
        user_id: 42
        switchables:
          - id: 123
            feature_type: voicemailbox
            feature_id: 15
            name: User Voicemail
        links:
          - href: /sites/6/seats/25
            rel: self
            method: GET
    PaginatedSeatListResponse:
      type: object
      description: A paginated list of seats.
      properties:
        seats:
          type: array
          items:
            $ref: '#/components/schemas/SeatResponse'
        total_items:
          type: integer
          example: 30
        total_pages:
          type: integer
          example: 3
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 10
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      required:
        - seats
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        seats:
          - id: 25
            site_id: 6
            name: Basic User Seat
            template_id: 10
            user_id: 42
            switchables:
              - id: 123
                feature_type: voicemailbox
                feature_id: 15
                name: User Voicemail
            links:
              - href: /sites/6/seats/25
                rel: self
                method: GET
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: /sites/6/seats?page=1&page_size=25
            rel: self
            method: GET
    SeatCreateRequest:
      allOf:
        - $ref: '#/components/schemas/SeatCore'
      description: Data required to create a new seat for a user on a site using a template.
      required:
        - name
        - template_id
      example:
        name: Intern Seat - Basic
        template_id: 1
        user_id: 100
    SeatUpdateRequest:
      type: object
      description: Attributes for updating a seat. Only provide fields to be changed.
      properties:
        name:
          type: string
          nullable: true
          description: A descriptive name for the seat assignment.
          example: John Doe - Executive Setup
        user_id:
          type: integer
          format: int64
          nullable: true
          description: Identifier of the user to whom this seat is assigned.
          example: 45
      example:
        name: Updated Seat Name
        user_id: 46
    SipTrunkCore:
      type: object
      properties:
        name:
          type: string
          description: A user-friendly name for the SIP Trunk.
          example: Primary Outbound Trunk
        login:
          type: string
          description: Username for SIP registration/authentication. Can be system-generated if omitted on create.
          example: primary_trunk_user
        password:
          type: string
          format: password
          nullable: true
          writeOnly: true
          description: Password for SIP registration. System-generated if omitted on create. Not returned on GET.
          example: s3cureTrunkP@ss!
        active:
          type: boolean
          description: Indicates if the SIP Trunk is active.
          default: true
          example: true
        channel_limit:
          type: integer
          description: Maximum number of concurrent call channels allowed for this trunk.
          default: 10
          example: 10
        contact_ip:
          type: string
          nullable: true
          description: Optional. IP address and port (e.g., 63.211.239.14:5060) to send inbound calls to, bypassing registration.
          example: 1.2.3.4:5060
        acl:
          type: string
          nullable: true
          description: Access Control List (IP address or range) restricting where this trunk can connect from/to.
          default: 0.0.0.0/0
          example: 0.0.0.0/0
        caller_id_name:
          type: string
          nullable: true
          description: Default Caller ID name for outbound calls from this trunk.
          example: My Company Inc.
        caller_id_number:
          type: string
          nullable: true
          description: Default Caller ID number for outbound calls from this trunk.
          example: '+18005551212'
        disable_comfort_noise:
          type: boolean
          default: false
          description: Disable RFC3389 Comfort Noise if hardware does not support it.
          example: false
        timeout:
          type: integer
          default: 120
          description: Timeout in seconds for call attempts or registration.
          example: 120
        fail_over_destination_code:
          type: string
          nullable: true
          description: System code for the failover destination if the trunk is unavailable.
          example: menu:main_ivr
        user_id:
          type: integer
          format: int64
          nullable: true
          description: Optional. Identifier of a user primarily associated with this SIP trunk.
          example: 11
      required:
        - name
      example:
        name: Backup Outbound Trunk
        login: backup_trunk_user
        active: true
        channel_limit: 5
        contact_ip: 4.3.2.1:5060
        acl: 10.0.0.0/8
        caller_id_name: Backup Line
        caller_id_number: '+18005551213'
        disable_comfort_noise: true
        timeout: 90
        fail_over_destination_code: voicemailbox:general_backup_vm
        user_id: 12
    SipTrunkResponse:
      allOf:
        - $ref: '#/components/schemas/SipTrunkCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
            site_id:
              type: integer
              format: int64
            password:
              type: string
              format: password
              readOnly: true
              description: The SIP password (only returned on creation if generated by system).
            login:
              type: string
            fail_over_destination:
              type: object
              nullable: true
              allOf:
                - $ref: '#/components/schemas/SiteDestination'
            links:
              type: array
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
          required:
            - id
            - site_id
            - login
            - name
      description: Detailed information about a SIP Trunk.
      example:
        id: 161
        site_id: 6
        name: Main Office SIP Trunk
        login: main_trunk_user
        active: true
        channel_limit: 10
        contact_ip: 1.2.3.4:5060
        acl: 0.0.0.0/0
        caller_id_name: Teliax HQ
        caller_id_number: '+13035551212'
        disable_comfort_noise: false
        timeout: 120
        fail_over_destination_code: menu:main_ivr
        fail_over_destination:
          name: Main IVR Menu
          code: menu:main_ivr
        user_id: null
        links:
          - href: /sites/6/sip-trunks/161
            rel: self
            method: GET
    PaginatedSipTrunkListResponse:
      type: object
      description: A paginated list of SIP Trunks.
      properties:
        sip_trunks:
          type: array
          items:
            $ref: '#/components/schemas/SipTrunkResponse'
        total_items:
          type: integer
          example: 10
        total_pages:
          type: integer
          example: 1
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 25
        links:
          $ref: '#/components/schemas/PaginationLinks'
      required:
        - sip_trunks
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        sip_trunks:
          - id: 161
            site_id: 6
            name: Main Office SIP Trunk
            login: main_trunk_user
            active: true
            channel_limit: 10
            contact_ip: 1.2.3.4:5060
            acl: 0.0.0.0/0
            caller_id_name: Teliax HQ
            caller_id_number: '+13035551212'
            disable_comfort_noise: false
            timeout: 120
            fail_over_destination_code: menu:main_ivr
            user_id: null
            links:
              - href: /sites/6/sip-trunks/161
                rel: self
                method: GET
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          self:
            href: /sites/6/sip-trunks?page=1&page_size=25
            rel: self
            method: GET
          first:
            href: /sites/6/sip-trunks?page=1&page_size=25
            rel: first
            method: GET
          last:
            href: /sites/6/sip-trunks?page=1&page_size=25
            rel: last
            method: GET
    SipTrunkCreateRequest:
      allOf:
        - $ref: '#/components/schemas/SipTrunkCore'
      required:
        - name
      description: Data required to create a new SIP Trunk.
      example:
        name: New Office Trunk
        login: newoffice_user
        active: true
        channel_limit: 20
        caller_id_name: New Office Main
        caller_id_number: '+17205559999'
    SipTrunkUpdateRequest:
      type: object
      description: Attributes for updating a SIP Trunk. Password should be updated via regenerate-password endpoint.
      properties:
        name:
          type: string
          nullable: true
          example: Primary International Trunk
        login:
          type: string
          nullable: true
          example: international_user_updated
        active:
          type: boolean
          nullable: true
          example: true
        channel_limit:
          type: integer
          nullable: true
          example: 20
        contact_ip:
          type: string
          nullable: true
          example: 5.6.7.8:5060
        acl:
          type: string
          nullable: true
          example: 172.16.0.0/12
        caller_id_name:
          type: string
          nullable: true
          example: Intl. Calls
        caller_id_number:
          type: string
          nullable: true
          example: '+18005550105'
        disable_comfort_noise:
          type: boolean
          nullable: true
          example: false
        timeout:
          type: integer
          nullable: true
          example: 180
        fail_over_destination_code:
          type: string
          nullable: true
          example: ring_group:intl_support
        user_id:
          type: integer
          format: int64
          nullable: true
          description: Optional. Identifier of a user primarily associated with this SIP Trunk.
          example: 15
      example:
        name: Main Office Trunk - Modified
    SipTrunkResponseWithPassword:
      allOf:
        - $ref: '#/components/schemas/SipTrunkCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
            site_id:
              type: integer
              format: int64
            login:
              type: string
            password:
              type: string
              format: password
              description: The newly generated SIP password for the trunk.
            fail_over_destination:
              oneOf:
                - $ref: '#/components/schemas/SiteDestination'
                - type: object
                  nullable: true
                  description: Failover destination, null if not set.
            links:
              type: array
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
          required:
            - id
            - site_id
            - login
            - password
            - name
      description: SIP Trunk details including the newly regenerated SIP password.
      example:
        id: 161
        site_id: 6
        name: Main Office SIP Trunk
        login: main_trunk_user
        password: newlyGeneratedS3cur3SipP@ss!
        active: true
        channel_limit: 10
        contact_ip: 1.2.3.4:5060
        acl: 0.0.0.0/0
        caller_id_name: Teliax HQ
        caller_id_number: '+13035551212'
        disable_comfort_noise: false
        timeout: 120
        fail_over_destination_code: menu:main_ivr
        fail_over_destination:
          name: Main IVR Menu
          code: menu:main_ivr
        user_id: null
        links:
          - href: /sites/6/sip-trunks/161
            rel: self
            method: GET
    VoicemailBoxAttributes:
      type: object
      properties:
        name:
          type: string
          description: Name of the Voicemail Box.
          example: Main Sales Voicemail
        pin:
          type: string
          description: PIN for accessing the Voicemail Box messages.
          example: '1234'
        notification_emails:
          type: string
          description: Email addresses for notifications of new voicemails.
          example: sales@example.com,manager@example.com
        announcement_url:
          type: string
          format: uri
          readOnly: true
          nullable: true
          description: URL of the current announcement greeting.
        status:
          type: string
          enum:
            - active
            - inactive
          description: Status of the Voicemail Box.
          example: active
        site_id:
          type: integer
          format: int64
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - name
        - pin
        - notification_emails
        - status
      example:
        name: Support Line VM
        pin: '5678'
        notification_emails: support@example.com
        status: active
    VoicemailBoxResponseData:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the Voicemail Box.
          example: '553'
        type:
          type: string
          enum:
            - voicemail-box
          example: voicemail-box
        attributes:
          $ref: '#/components/schemas/VoicemailBoxAttributes'
        links:
          $ref: '#/components/schemas/LinkObject'
      required:
        - id
        - type
        - attributes
      example:
        id: '553'
        type: voicemail-box
        attributes:
          name: Sales Team Voicemail
          pin: '****'
          notification_emails: sales@example.com,manager@example.com
          status: active
          site_id: 6
          announcement_url: https://cdn.example.com/greetings/vm553.mp3
        links:
          self:
            href: /sites/6/voice-mail-boxes/553
            rel: self
            method: GET
    PaginatedVoicemailBoxListResponse:
      type: object
      description: A paginated list of voicemail boxes.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/VoicemailBoxResponseData'
        links:
          $ref: '#/components/schemas/PaginationLinks'
        meta:
          type: object
          properties:
            total_items:
              type: integer
            total_pages:
              type: integer
            current_page:
              type: integer
            per_page:
              type: integer
      required:
        - data
        - meta
      example:
        data:
          - id: '553'
            type: voicemail-box
            attributes:
              name: Sales Team Voicemail
              pin: '****'
              notification_emails: sales@example.com,manager@example.com
              status: active
              site_id: 6
              announcement_url: https://cdn.example.com/greetings/vm553.mp3
            links:
              self:
                href: /sites/6/voice-mail-boxes/553
                rel: self
                method: GET
        links:
          self:
            href: /sites/6/voice-mail-boxes?page%5Bnumber%5D=1&page_size=25
            rel: self
            method: GET
          first:
            href: /sites/6/voice-mail-boxes?page%5Bnumber%5D=1&page_size=25
            rel: first
            method: GET
          last:
            href: /sites/6/voice-mail-boxes?page%5Bnumber%5D=1&page_size=25
            rel: last
            method: GET
        meta:
          total_items: 1
          total_pages: 1
          current_page: 1
          per_page: 25
    VoicemailBoxCreateRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          properties:
            type:
              type: string
              enum:
                - voicemail-box
            attributes:
              $ref: '#/components/schemas/VoicemailBoxAttributes'
      example:
        data:
          type: voicemail-box
          attributes:
            name: General Inquiries VM
            pin: '0000'
            notification_emails: info@example.com
            status: active
    StatementCore:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the statement.
          example: 501
        statement_number:
          type: string
          nullable: true
          description: A human-readable identifier for the statement (e.g., STMT-2023-10-001).
          example: STMT-2023-10-001
        period_start:
          type: string
          format: date-time
          description: The start date and time of the service period covered by this statement.
          example: '2023-10-01T00:00:00Z'
        period_end:
          type: string
          format: date-time
          description: The end date and time of the service period covered by this statement.
          example: '2023-10-31T23:59:59Z'
        issue_date:
          type: string
          format: date-time
          description: The date when the statement was issued.
          example: '2023-11-01T00:00:00Z'
        due_date:
          type: string
          format: date-time
          nullable: true
          description: The date when payment for this statement is due.
          example: '2023-11-15T00:00:00Z'
        total_amount:
          type: string
          description: The total amount due or charged on this statement.
          example: '150.75'
        currency:
          type: string
          description: Three-letter ISO currency code for the amounts on the statement.
          default: USD
          example: USD
        status:
          type: string
          description: The current status of the statement.
          enum:
            - open
            - paid
            - overdue
            - void
            - uncollectible
          example: paid
        created_at_original:
          type: string
          description: Original creation date string from legacy system, if applicable.
          example: 02/02/2018
          nullable: true
        closed_at_original:
          type: string
          description: Original closing date string from legacy system, if applicable.
          example: 02/02/2018
          nullable: true
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to an image representation of the statement (e.g., a PNG or JPG).
          example: https://cdn.example.com/statements/stmt_501.png
        pdf_url:
          type: string
          format: uri
          nullable: true
          description: URL to download the statement in PDF format.
          example: https://cdn.example.com/statements/stmt_501.pdf
        cdr_export_url:
          type: string
          format: uri
          nullable: true
          description: URL to download associated Call Detail Records (CDRs) for this statement period, typically in CSV format.
          example: https://cdn.example.com/reports/cdr_stmt_501.csv
      required:
        - id
        - period_start
        - period_end
        - issue_date
        - total_amount
        - currency
        - status
    StatementListResponse:
      type: object
      description: A paginated list of account statements.
      properties:
        statements:
          type: array
          items:
            $ref: '#/components/schemas/StatementResponse'
        total_items:
          type: integer
          description: Total number of statements matching the query.
          example: 120
        total_pages:
          type: integer
          description: Total number of pages based on `per_page`.
          example: 5
        current_page:
          type: integer
          description: The current page number being displayed.
          example: 1
        per_page:
          type: integer
          description: The number of items per page.
          example: 25
        links:
          type: array
          description: HATEOAS links for pagination and related resources.
          items:
            $ref: '#/components/schemas/schemas-Link'
          nullable: true
      required:
        - statements
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        statements:
          - id: 501
            statement_number: STMT-2023-10-001
            period_start: '2023-10-01T00:00:00Z'
            period_end: '2023-10-31T23:59:59Z'
            issue_date: '2023-11-01T00:00:00Z'
            due_date: '2023-11-15T00:00:00Z'
            total_amount: '150.75'
            currency: USD
            status: paid
            pdf_url: https://cdn.example.com/statements/stmt_501.pdf
            links:
              - href: /statements/501
                rel: self
                method: GET
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: /statements?page=1&page_size=25
            rel: self
            method: GET
    statements_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          example: Statement not found.
        error_code:
          type: string
          example: STATEMENT_NOT_FOUND
      required:
        - status
        - error
        - error_code
    TemplateFeatureAttribute:
      type: object
      description: Defines an attribute for a feature within a template.
      properties:
        name:
          type: string
          description: The name of the feature attribute (e.g., "name", "timeout", "caller_id_name").
        derivative:
          type: string
          enum:
            - calculated
            - predefined
            - prompt
          description: How the attribute's value is determined.
        default:
          type: string
          nullable: true
          description: Default value or prompt text.
      required:
        - name
        - derivative
      example:
        name: timeout
        derivative: predefined
        default: '120'
    TemplateFeature:
      type: object
      description: Represents a configurable feature (switchable) within a template, forming a tree structure.
      properties:
        switchable:
          type: string
        position:
          type: integer
        attrs:
          type: array
          items:
            $ref: '#/components/schemas/TemplateFeatureAttribute'
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/TemplateFeature'
          nullable: true
        feature_type:
          type: string
          description: Type of feature (e.g., device, extension, menu, voicemail).
          example: device
        failover:
          description: Optional. System code for the failover destination if this feature is unavailable.
          nullable: true
          allOf:
            - $ref: '#/components/schemas/SiteDestination'
        target_type:
          type: string
          description: The type of the target object for the feature (e.g. Device, RingGroup).
      required:
        - switchable
        - position
      example:
        switchable: PhoneNumber
        position: 1
        attrs:
          - name: name
            derivative: calculated
            default: Phone Number
    TemplateCore:
      type: object
      properties:
        name:
          type: string
        features:
          $ref: '#/components/schemas/TemplateFeature'
      required:
        - name
        - features
    TemplateListResponse:
      type: object
      description: A list of service templates.
      properties:
        templates:
          type: array
          items:
            $ref: '#/components/schemas/TemplateResponse'
        total_items:
          type: integer
          format: int32
        total_pages:
          type: integer
          format: int32
        current_page:
          type: integer
          format: int32
          example: 1
        per_page:
          type: integer
          format: int32
          example: 25
        links:
          type: array
          items:
            $ref: '#/components/schemas/schemas-Link'
          nullable: true
      required:
        - templates
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        templates:
          - $ref: '#/components/schemas/TemplateResponse/example'
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: /templates?page=1&page_size=25
            rel: self
            method: GET
    templates_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          example: An error occurred.
        error_code:
          type: string
          example: GENERIC_ERROR
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: A template processing error occurred.
        error_code: TEMPLATE_ERROR
    TemplateCreateRequest:
      allOf:
        - $ref: '#/components/schemas/TemplateCore'
    TemplateUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/TemplateCore'
    ThinClient:
      type: object
      description: Represents an available Thin Client (call processing node).
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the Thin Client.
          example: 11
        name:
          type: string
          description: A descriptive name for the Thin Client (e.g., its location and type).
          example: Denver - Bonsai 5
        active:
          type: boolean
          description: Indicates if the Thin Client is currently active and available for assignment.
          example: true
        category:
          type: string
          description: Category of the Thin Client (e.g., public, private).
          example: public
        ipv4_address:
          type: string
          format: ipv4
          description: The IPv4 address of the Thin Client.
          example: 63.211.239.115
        provider:
          type: string
          description: The provider or operator of the Thin Client.
          example: Teliax Inc.
        identification:
          type: string
          nullable: true
          description: A unique hardware or system identifier for the Thin Client (e.g., MAC address).
          example: 00-21-5e-96-e3-bc
      required:
        - id
        - name
        - active
        - category
        - ipv4_address
        - provider
      example:
        id: 11
        name: Denver - Bonsai 5
        active: true
        category: public
        ipv4_address: 63.211.239.115
        provider: Teliax Inc.
        identification: 00-21-5e-96-e3-bc
    ThinClientListResponse:
      type: object
      description: A list of available Thin Clients.
      properties:
        thin_clients:
          type: array
          items:
            $ref: '#/components/schemas/ThinClient'
      required:
        - thin_clients
      example:
        thin_clients:
          - id: 11
            name: Denver - Bonsai 5
            active: true
            category: public
            ipv4_address: 63.211.239.115
            provider: Teliax Inc.
            identification: 00-21-5e-96-e3-bc
          - id: 12
            name: Denver - Bonsai 6
            active: true
            category: public
            ipv4_address: 63.211.239.116
            provider: Teliax Inc.
            identification: 00-21-5e-96-fe-6c
    thin-clients_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          example: Failed to retrieve thin client list.
        error_code:
          type: string
          example: THIN_CLIENT_LIST_ERROR
      required:
        - status
        - error
        - error_code
      example:
        status: error
        error: An error occurred with thin clients.
        error_code: THIN_CLIENT_ERROR
    Timezone:
      type: string
      description: |
        A time zone identifier from the IANA Time Zone Database (tz database), e.g., "America/New_York", "Europe/London", "Etc/UTC".
        It is recommended to use these standard identifiers to avoid ambiguity. Avoid using abbreviations like "EST" or "PST".
      minLength: 1
      maxLength: 127
      example: America/Los_Angeles
    TimezoneListResponse:
      type: object
      description: A list of available IANA timezone identifiers.
      properties:
        timezones:
          type: array
          items:
            $ref: '#/components/schemas/Timezone'
      required:
        - timezones
      example:
        timezones:
          - America/New_York
          - America/Chicago
          - America/Denver
          - America/Los_Angeles
          - Europe/London
          - Etc/UTC
    timezones_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          example: Failed to retrieve timezone list.
        error_code:
          type: string
          example: TIMEZONE_LIST_ERROR
      required:
        - status
        - error
        - error_code
    UserCore:
      type: object
      description: Core attributes defining a user.
      properties:
        first_name:
          type: string
          description: The user's first name.
          example: Jane
        last_name:
          type: string
          description: The user's last name.
          example: Doe
        email:
          type: string
          format: email
          description: The user's unique email address, used for login and notifications.
          example: jane.doe@example.com
        role:
          type: string
          description: The role assigned to the user within the account (e.g., administrator, user).
          example: user
        active:
          type: boolean
          description: Indicates whether the user's account is active and can be used to log in.
          example: true
        locale:
          type: string
          description: The user's preferred language and regional settings (e.g., "en-US").
          example: en-US
      required:
        - first_name
        - last_name
        - email
        - role
        - active
        - locale
    UserListResponse:
      type: object
      description: A paginated list of users.
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
        total_items:
          type: integer
          description: Total number of users matching the query.
          example: 120
        total_pages:
          type: integer
          description: Total number of pages based on `per_page`.
          example: 5
        current_page:
          type: integer
          description: The current page number being displayed.
          example: 1
        per_page:
          type: integer
          description: The number of items per page.
          example: 25
        links:
          type: array
          description: HATEOAS links for pagination and related resources.
          items:
            $ref: '#/components/schemas/schemas-Link'
          nullable: true
      required:
        - users
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        users:
          - id: 5
            first_name: Jane
            last_name: Doe
            email: jane.doe@example.com
            role: administrator
            active: true
            locale: en-US
            links:
              - href: /users/5
                rel: self
                method: GET
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: /users?page=1&page_size=25
            rel: self
    users_components-schemas-Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: error
        error:
          type: string
          example: User operation failed.
        error_code:
          type: string
          example: USER_ERROR
      required:
        - status
        - error
        - error_code
    UserCreateRequest:
      allOf:
        - $ref: '#/components/schemas/UserCore'
      description: Information needed to create a new user.
      example:
        first_name: Sam
        last_name: Test
        email: sam.test@example.com
        role: user
        active: false
        locale: en-CA
    UserUpdateRequest:
      type: object
      description: Information that can be updated for an existing user. Only include fields to be changed.
      properties:
        first_name:
          type: string
          description: The user's first name.
          example: Jane
        last_name:
          type: string
          description: The user's last name.
          example: Doe
        role:
          type: string
          description: The role assigned to the user.
          example: administrator
        active:
          type: boolean
          description: Whether the user account is active.
          example: true
        locale:
          type: string
          description: The user's preferred language and regional settings.
          example: en-GB
      example:
        first_name: Janet
        locale: fr-FR
        active: false
    CallBlockCore:
      type: object
      properties:
        number_to_block:
          type: string
          description: The phone number (or pattern) to block. E.164 format recommended for specific numbers.
          example: '+14155550100'
        block_all_extensions:
          type: boolean
          description: If true, calls from the number are blocked to all extensions on the site. If false, `applicable_extensions` must be specified.
          example: true
        applicable_extensions:
          type: array
          items:
            type: string
          description: A list of specific extension identifiers (e.g., device codes, extension numbers) to which this block applies. Used if `block_all_extensions` is false.
          example:
            - device:dev_abc
            - extension:1001
          nullable: true
        notes:
          type: string
          nullable: true
          description: Optional notes or reason for this call block rule.
          example: Persistent telemarketer.
      required:
        - number_to_block
        - block_all_extensions
    schemas-PhoneNumberCore:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the phone number record/assignment.
          example: 127
        name:
          type: string
          description: A user-friendly name or label for the phone number (e.g., "Main Line", "Sales Dept").
          example: Main Sales Line
        number:
          type: string
          description: The actual phone number in E.164 format (e.g., +13035551212).
          example: '+13035551234'
        site_id:
          type: integer
          format: int64
          description: Identifier of the site the phone number is associated with. Can be null if the number is available but not yet assigned to a specific site.
          nullable: true
          example: 6
        destination_code:
          type: string
          nullable: true
          description: System code for the destination where calls to this number are routed (e.g., "device:dev_xyz", "menu:ivr_main").
          example: menu:main_sales_ivr
      required:
        - name
        - number
  parameters:
    Page:
      name: page
      in: query
      description: Page number for pagination.
      schema:
        type: integer
        minimum: 1
        default: 1
        example: 1
    PerPage:
      name: per_page
      in: query
      description: Number of items per page for pagination.
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 25
        example: 25
    SortBy:
      name: sort_by
      in: query
      description: Field to sort by.
      schema:
        type: string
        example: created_at
    SortOrder:
      name: sort_order
      in: query
      description: Sort order (asc or desc).
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
        example: desc
    Query:
      name: query
      in: query
      description: Search query string.
      schema:
        type: string
        example: search term
    Include:
      name: include
      in: query
      description: Comma-separated list of related resources to include.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        example:
          - owner
          - address
    SiteId:
      name: siteId
      in: path
      description: The unique identifier of the site.
      required: true
      schema:
        type: string
        format: uuid
        example: a1b2c3d4-e5f6-7890-1234-567890abcdef
    PackageIdPath:
      name: packageId
      in: path
      description: The unique identifier of the package.
      required: true
      schema:
        type: integer
        format: int64
        example: 94
    PlanIdPath:
      name: planId
      in: path
      description: The unique identifier of the plan.
      required: true
      schema:
        type: integer
        format: int64
        example: 1
    SiteIdPath:
      name: siteId
      in: path
      description: The unique identifier of the site.
      required: true
      schema:
        type: integer
        format: int64
        example: 6
    CallBlockIdPath:
      name: callBlockId
      in: path
      description: The unique identifier of the Call Block rule.
      required: true
      schema:
        type: string
        example: '101'
    ConferenceRoomIdPath:
      name: conferenceRoomId
      in: path
      description: The unique identifier of the conference room.
      required: true
      schema:
        type: integer
        format: int64
        example: 3
    DeviceIdPath:
      name: deviceId
      in: path
      description: The unique identifier of the device.
      required: true
      schema:
        type: integer
        format: int64
        example: 1763
    E911IdPath:
      name: e911Id
      in: path
      description: The unique identifier of the E911 record.
      required: true
      schema:
        type: integer
        format: int64
        example: 19
    ExtensionIdPath:
      name: extensionId
      in: path
      description: The unique identifier of the extension record.
      required: true
      schema:
        type: integer
        format: int64
        example: 14
    FaxMachineIdPath:
      name: faxMachineId
      in: path
      description: The unique identifier of the fax machine configuration.
      required: true
      schema:
        type: integer
        format: int64
        example: 3
    ForwardIdPath:
      name: forwardId
      in: path
      description: Identifier of the forward configuration.
      required: true
      schema:
        type: integer
        format: int64
        example: 77
    LocationIdPath:
      name: locationId
      in: path
      description: The unique identifier of the location record.
      required: true
      schema:
        type: integer
        format: int64
        example: 9
    MenuIdPath:
      name: menuId
      in: path
      description: The unique identifier of the menu.
      required: true
      schema:
        type: integer
        format: int64
        example: 55
    PhoneNumberIdPath:
      name: phoneNumberId
      in: path
      description: The unique identifier of the phone number record.
      required: true
      schema:
        type: integer
        format: int64
        example: 127
    RingGroupIdPath:
      name: ringGroupId
      in: path
      description: The unique identifier of the ring group.
      required: true
      schema:
        type: integer
        format: int64
        example: 10
    ScheduleIdPath:
      name: scheduleId
      in: path
      description: The unique identifier of the Schedule.
      required: true
      schema:
        type: string
        example: sched_7abx891p
    SeatIdPath:
      name: seatId
      in: path
      description: The unique identifier of the seat.
      required: true
      schema:
        type: integer
        format: int64
        example: 25
    SipTrunkIdPath:
      name: sipTrunkId
      in: path
      description: The unique identifier of the SIP trunk.
      required: true
      schema:
        type: integer
        format: int64
        example: 301
    TemplateIdPath:
      name: templateId
      in: path
      description: The unique identifier of the template.
      required: true
      schema:
        type: integer
        format: int64
        example: 1
    UserIdPath:
      name: userId
      in: path
      description: The unique identifier of the user.
      required: true
      schema:
        type: integer
        format: int64
        example: 5
  responses:
    BadRequestError:
      description: Bad Request - The request was malformed or contained invalid data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: Invalid request parameters provided.
            error_code: INVALID_REQUEST_PARAMETERS
    UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: Permission denied to perform this action.
            error_code: FORBIDDEN
    NotFoundError:
      description: Not Found - The requested resource could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: The requested resource was not found.
            error_code: RESOURCE_NOT_FOUND
    SiteNotFoundError:
      description: Not Found - The specified site could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: The specified site was not found.
            error_code: SITE_NOT_FOUND
    DeviceNotFoundError:
      description: Not Found - The requested device could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: The requested device was not found.
            error_code: DEVICE_NOT_FOUND
    ConferenceRoomNotFoundError:
      description: Not Found - The requested conference room could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: The requested conference room was not found.
            error_code: CONFERENCE_ROOM_NOT_FOUND
    E911NotFoundError:
      description: Not Found - The requested E911 record could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: The requested E911 record was not found.
            error_code: E911_NOT_FOUND
    MenuNotFoundError:
      description: Not Found - The requested menu could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: The requested menu was not found.
            error_code: MENU_NOT_FOUND
    RingGroupNotFoundError:
      description: Not Found - The requested ring group could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: The requested ring group was not found.
            error_code: RING_GROUP_NOT_FOUND
    ScheduleNotFoundError:
      description: Not Found - The requested schedule could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: The requested schedule was not found.
            error_code: SCHEDULE_NOT_FOUND
    VoicemailBoxNotFoundError:
      description: Not Found - The requested voicemail box could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: The requested voicemail box was not found.
            error_code: VOICEMAIL_BOX_NOT_FOUND
    responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have permission.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/schemas-Error'
          example:
            status: error
            error: Permission denied for this account operation.
            error_code: FORBIDDEN
    responses-BadRequestError:
      description: Bad Request - Invalid data provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/schemas-Error'
          example:
            status: error
            error: Invalid account update parameters.
            error_code: VALIDATION_ERROR
    responses-NotFoundError:
      description: Not Found - The account could not be found (should be rare for /account path).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/schemas-Error'
          example:
            status: error
            error: Account not found.
            error_code: RESOURCE_NOT_FOUND
    components-responses-BadRequestError:
      description: Bad Request - Invalid data provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/components-schemas-Error'
          example:
            status: error
            error: Invalid input for address.
            error_code: VALIDATION_ERROR
    components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/components-schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have permission.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/components-schemas-Error'
          example:
            status: error
            error: Permission denied.
            error_code: FORBIDDEN
    components-responses-NotFoundError:
      description: Not Found - The requested address could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/components-schemas-Error'
          example:
            status: error
            error: Address not found.
            error_code: RESOURCE_NOT_FOUND
    call-records_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/call-records_components-schemas-Error'
          example:
            status: error
            error: Authentication token is required for call records.
            error_code: AUTH_TOKEN_MISSING_CDR
    call-records_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/call-records_components-schemas-Error'
          example:
            status: error
            error: User does not have permission to access these call records.
            error_code: FORBIDDEN_CDR_ACCESS
    country-codes_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/country-codes_components-schemas-Error'
          example:
            status: error
            error: Authentication required for country codes.
            error_code: UNAUTHORIZED_COUNTRY_CODES
    country-codes_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/country-codes_components-schemas-Error'
          example:
            status: error
            error: Permission denied for country codes.
            error_code: FORBIDDEN_COUNTRY_CODES
    credit-cards_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/credit-cards_components-schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    credit-cards_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/credit-cards_components-schemas-Error'
          example:
            status: error
            error: You do not have permission to access this resource.
            error_code: FORBIDDEN
    items_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/items_components-schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    items_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/items_components-schemas-Error'
          example:
            status: error
            error: You do not have permission to manage items.
            error_code: FORBIDDEN
    items_components-responses-NotFoundError:
      description: Not Found - The requested item could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/items_components-schemas-Error'
          example:
            status: error
            error: The requested item was not found.
            error_code: RESOURCE_NOT_FOUND
    packages_components-responses-BadRequestError:
      description: Bad Request - The request was malformed or contained invalid data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/packages_components-schemas-Error'
          example:
            status: error
            error: Invalid pagination parameters for packages.
            error_code: PACKAGE_VALIDATION_ERROR
    packages_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/packages_components-schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    packages_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/packages_components-schemas-Error'
          example:
            status: error
            error: You do not have permission to access packages.
            error_code: FORBIDDEN
    packages_components-responses-NotFoundError:
      description: Not Found - The requested package could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/packages_components-schemas-Error'
          example:
            status: error
            error: The requested package was not found.
            error_code: RESOURCE_NOT_FOUND
    payments_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/payments_components-schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    payments_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/payments_components-schemas-Error'
          example:
            status: error
            error: You do not have permission to access this resource.
            error_code: FORBIDDEN
    plans_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/plans_components-schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    plans_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/plans_components-schemas-Error'
          example:
            status: error
            error: You do not have permission to perform this action on plans.
            error_code: FORBIDDEN
    plans_components-responses-NotFoundError:
      description: Not Found - The requested resource (e.g., specific plan) could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/plans_components-schemas-Error'
          example:
            status: error
            error: The requested plan was not found.
            error_code: PLAN_NOT_FOUND
    sites_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/sites_components-schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    sites_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/sites_components-schemas-Error'
          example:
            status: error
            error: You do not have permission to manage this site.
            error_code: FORBIDDEN
    sites_components-responses-BadRequestError:
      description: Bad Request - The request was malformed or contained invalid data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/sites_components-schemas-Error'
          example:
            status: error
            error: 'Invalid input: dns_extension is required.'
            error_code: VALIDATION_ERROR
    responses-SiteNotFoundError:
      description: Not Found - The requested site could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/sites_components-schemas-Error'
          example:
            status: error
            error: The requested site was not found.
            error_code: SITE_NOT_FOUND
    ConflictError:
      description: Conflict - The request conflicts with the current state of the resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: A conflict occurred with the current resource state.
            error_code: RESOURCE_CONFLICT
    call-block_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/call-block_components-schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    call-block_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have permission.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/call-block_components-schemas-Error'
          example:
            status: error
            error: Permission denied.
            error_code: FORBIDDEN
    call-block_components-responses-NotFoundError:
      description: Not Found - The requested resource could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/call-block_components-schemas-Error'
          example:
            status: error
            error: Resource not found.
            error_code: RESOURCE_NOT_FOUND
    call-block_components-responses-BadRequestError:
      description: Bad Request - Invalid data provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/call-block_components-schemas-Error'
          example:
            status: error
            error: Invalid request parameters.
            error_code: VALIDATION_ERROR
    responses-ConflictError:
      description: Conflict - The resource already exists or the request conflicts with the current state.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/call-block_components-schemas-Error'
          example:
            status: error
            error: Resource conflict.
            error_code: CONFLICT_ERROR
    index_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/index_components-schemas-Error'
          example:
            status: error
            error: Authentication token is missing or invalid.
            error_code: UNAUTHORIZED
    index_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/index_components-schemas-Error'
          example:
            status: error
            error: You do not have permission to perform this action.
            error_code: FORBIDDEN
    components-responses-SiteNotFoundError:
      description: Not Found - The specified site could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/index_components-schemas-Error'
          example:
            status: error
            error: The specified site was not found.
            error_code: SITE_NOT_FOUND
    index_components-responses-BadRequestError:
      description: Bad Request - The request was malformed or contained invalid data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/index_components-schemas-Error'
          example:
            status: error
            error: Invalid request parameters.
            error_code: INVALID_REQUEST
    device_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/device_components-schemas-Error'
          example:
            status: error
            error: Authentication token is missing or invalid.
            error_code: UNAUTHORIZED
    device_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/device_components-schemas-Error'
          example:
            status: error
            error: You do not have permission for this action.
            error_code: FORBIDDEN
    responses-DeviceNotFoundError:
      description: Not Found - The requested device could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/device_components-schemas-Error'
          example:
            status: error
            error: The requested device was not found.
            error_code: DEVICE_NOT_FOUND
    device_components-responses-BadRequestError:
      description: Bad Request - The request was malformed or contained invalid data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/device_components-schemas-Error'
          example:
            status: error
            error: Invalid request parameters for device.
            error_code: INVALID_REQUEST
    index_components-responses-UnauthorizedError-2:
      description: Unauthorized - Authentication token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/index_components-schemas-Error-2'
          example:
            status: error
            error: Authentication required for extension operations.
            error_code: UNAUTHORIZED_EXTENSION
    index_components-responses-ForbiddenError-2:
      description: Forbidden - The authenticated user does not have permission.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/index_components-schemas-Error-2'
          example:
            status: error
            error: Permission denied for this extension operation.
            error_code: FORBIDDEN_EXTENSION
    index_components-responses-SiteNotFoundError:
      description: Not Found - The specified site could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/index_components-schemas-Error-2'
          example:
            status: error
            error: Site not found for extension operation.
            error_code: SITE_NOT_FOUND_EXTENSION
    index_components-responses-BadRequestError-2:
      description: Bad Request - Invalid data provided for the extension operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/index_components-schemas-Error-2'
          example:
            status: error
            error: Invalid extension number or destination code.
            error_code: VALIDATION_ERROR
    components-responses-ConflictError:
      description: Conflict - e.g., the extension number already exists on this site.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/index_components-schemas-Error-2'
          example:
            status: error
            error: Extension number already exists on this site.
            error_code: EXTENSION_NUMBER_CONFLICT
    extension_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/extension_components-schemas-Error'
          example:
            status: error
            error: Authentication token is missing or invalid.
            error_code: UNAUTHORIZED
    extension_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/extension_components-schemas-Error'
          example:
            status: error
            error: You do not have permission for this action.
            error_code: FORBIDDEN
    extension_components-responses-NotFoundError:
      description: Not Found - The requested resource could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/extension_components-schemas-Error'
          example:
            status: error
            error: Extension not found.
            error_code: RESOURCE_NOT_FOUND
    extension_components-responses-BadRequestError:
      description: Bad Request - The request was malformed or contained invalid data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/extension_components-schemas-Error'
          example:
            status: error
            error: Invalid request parameters for extension.
            error_code: INVALID_REQUEST
    transfer_components-responses-BadRequestError:
      description: Bad Request - Invalid data provided (e.g., new_site_id is invalid or same as current).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transfer_components-schemas-Error'
          example:
            status: error
            error: Invalid new_site_id provided.
            error_code: VALIDATION_ERROR
    transfer_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transfer_components-schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    transfer_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transfer_components-schemas-Error'
          example:
            status: error
            error: Permission denied.
            error_code: FORBIDDEN
    transfer_components-responses-NotFoundError:
      description: Not Found - The requested resource (e.g., extension, site) could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transfer_components-schemas-Error'
          example:
            status: error
            error: Resource not found for transfer operation.
            error_code: RESOURCE_NOT_FOUND_FOR_TRANSFER
    FaxMachineNotFoundError:
      description: Not Found - The requested fax machine could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: The requested fax machine was not found.
            error_code: FAX_MACHINE_NOT_FOUND
    LocationNotFoundError:
      description: Not Found - The requested location could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: The requested location was not found.
            error_code: LOCATION_NOT_FOUND
    PhoneNumberNotFoundError:
      description: Not Found - The requested phone number could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: The requested phone number was not found.
            error_code: PHONE_NUMBER_NOT_FOUND
    schedule_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/schedule_components-schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    schedule_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have permission.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/schedule_components-schemas-Error'
          example:
            status: error
            error: Permission denied.
            error_code: FORBIDDEN
    schedule_components-responses-NotFoundError:
      description: Not Found - The requested resource could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/schedule_components-schemas-Error'
          example:
            status: error
            error: Resource not found.
            error_code: RESOURCE_NOT_FOUND
    schedule_components-responses-BadRequestError:
      description: Bad Request - Invalid data provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/schedule_components-schemas-Error'
          example:
            status: error
            error: Invalid request parameters.
            error_code: VALIDATION_ERROR
    available_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/available_components-schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    available_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have permission.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/available_components-schemas-Error'
          example:
            status: error
            error: Permission denied.
            error_code: FORBIDDEN
    available_components-responses-SiteNotFoundError:
      description: Not Found - The specified site could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/available_components-schemas-Error'
          example:
            status: error
            error: Site not found.
            error_code: SITE_NOT_FOUND
    transfer_components-responses-BadRequestError-2:
      description: Bad Request - Invalid data provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transfer_components-schemas-Error-2'
          example:
            status: error
            error: Invalid request parameters.
            error_code: VALIDATION_ERROR
    transfer_components-responses-UnauthorizedError-2:
      description: Unauthorized - Authentication token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transfer_components-schemas-Error-2'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    transfer_components-responses-ForbiddenError-2:
      description: Forbidden - The authenticated user does not have permission.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transfer_components-schemas-Error-2'
          example:
            status: error
            error: Permission denied.
            error_code: FORBIDDEN
    transfer_components-responses-NotFoundError-2:
      description: Not Found - The requested resource (e.g., schedule, site) could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transfer_components-schemas-Error-2'
          example:
            status: error
            error: Resource not found.
            error_code: RESOURCE_NOT_FOUND
    SipTrunkNotFoundError:
      description: Not Found - The requested SIP trunk could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            error: The requested SIP trunk was not found.
            error_code: SIP_TRUNK_NOT_FOUND
    statements_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/statements_components-schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    statements_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/statements_components-schemas-Error'
          example:
            status: error
            error: You do not have permission to access this resource.
            error_code: FORBIDDEN
    statements_components-responses-NotFoundError:
      description: Not Found - The requested resource (e.g., specific statement) could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/statements_components-schemas-Error'
          example:
            status: error
            error: The requested statement was not found.
            error_code: RESOURCE_NOT_FOUND
    templates_components-responses-BadRequestError:
      description: Bad Request - Invalid data provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/templates_components-schemas-Error'
          example:
            status: error
            error: Invalid template data provided.
            error_code: VALIDATION_ERROR
    templates_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/templates_components-schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    templates_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have permission.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/templates_components-schemas-Error'
          example:
            status: error
            error: Permission denied.
            error_code: FORBIDDEN
    templates_components-responses-NotFoundError:
      description: Not Found - The requested resource could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/templates_components-schemas-Error'
          example:
            status: error
            error: Template not found.
            error_code: TEMPLATE_NOT_FOUND
    thin-clients_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/thin-clients_components-schemas-Error'
          example:
            status: error
            error: Authentication required for thin clients.
            error_code: UNAUTHORIZED_THIN_CLIENTS
    thin-clients_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/thin-clients_components-schemas-Error'
          example:
            status: error
            error: Permission denied for thin clients.
            error_code: FORBIDDEN_THIN_CLIENTS
    timezones_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/timezones_components-schemas-Error'
    timezones_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/timezones_components-schemas-Error'
    users_components-responses-UnauthorizedError:
      description: Unauthorized - Authentication token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/users_components-schemas-Error'
          example:
            status: error
            error: Authentication required.
            error_code: UNAUTHORIZED
    users_components-responses-ForbiddenError:
      description: Forbidden - The authenticated user does not have permission for this user operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/users_components-schemas-Error'
          example:
            status: error
            error: Permission denied to manage users.
            error_code: FORBIDDEN
    users_components-responses-BadRequestError:
      description: Bad Request - Invalid data provided for the user operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/users_components-schemas-Error'
          example:
            status: error
            error: Invalid email format or missing required fields.
            error_code: VALIDATION_ERROR
    users_components-responses-ConflictError:
      description: Conflict - e.g., a user with the provided email already exists.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/users_components-schemas-Error'
          example:
            status: error
            error: A user with this email address already exists.
            error_code: USER_EMAIL_CONFLICT
    users_components-responses-NotFoundError:
      description: Not Found - The requested user could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/users_components-schemas-Error'
          example:
            status: error
            error: User not found.
            error_code: RESOURCE_NOT_FOUND
