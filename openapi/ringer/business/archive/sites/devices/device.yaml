openapi: 3.0.3
info:
  title: Ringer Business API - Site Device (Individual)
  description: |
    Endpoints for managing an individual device associated with a specific site.
    Allows retrieving, updating, and deleting a specific device.
  version: 1.0.0
  license:
    name: MIT License
    url: https://github.com/teliax/ringer-oapi/blob/main/LICENSE
  contact:
    name: Ringer API Support
    url: https://docs.ringer.tel/support
    email: support@ringer.tel

servers:
  - url: https://api.ringer.tel/v1
    description: Production server

tags:
  - name: Site Features - Devices
    description: Managing SIP devices (phones, softphones) associated with a site.

paths:
  /sites/{siteId}/devices/{deviceId}:
    parameters:
      - $ref: '../../common_components.yaml#/components/parameters/SiteId'
      - $ref: '#/components/parameters/DeviceIdPath'
    get:
      tags:
        - Site Features - Devices
      summary: Get Device Details
      description: Retrieves detailed information for a specific device by its ID, belonging to the specified site.
      operationId: getSiteDeviceById
      security:
        - oAuth2: [read]
      responses:
        '200':
          description: Successfully retrieved device details.
          content:
            application/json:
              schema:
                $ref: './index.yaml#/components/schemas/DeviceResponse' 
              example:
                id: 1763
                site_id: 6
                name: "John Doe Desk Phone"
                login: "john.doe.phone1"
                active: true
                channel_limit: 2
                timeout: 120
                caller_id_name: "John Doe"
                caller_id_number: "+13035551234"
                acl: "0.0.0.0/0"
                fail_over_destination_code: "voicemailbox:vm_john_doe"
                fail_over_destination:
                  name: "Voicemail for John Doe"
                  code: "voicemailbox:vm_john_doe"
                user_id: 5
                links:
                  - href: "/sites/6/devices/1763"
                    rel: "self"
                    method: "GET"
        '401':
          $ref: '#/components/responses/UnauthorizedError' 
        '403':
          $ref: '#/components/responses/ForbiddenError' 
        '404':
          $ref: '#/components/responses/DeviceNotFoundError' 

    put:
      tags:
        - Site Features - Devices
      summary: Update Device Configuration
      description: |
        Updates the configuration for a specific device on a site.
        Note: The SIP password cannot be updated via this endpoint; use the dedicated regenerate-password endpoint for that.
      operationId: updateSiteDeviceById
      security:
        - oAuth2: [write]
      requestBody:
        description: Device attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: './index.yaml#/components/schemas/DeviceUpdateRequest' 
            example:
              name: "John Doe Desk Phone - Updated"
              active: true
              channel_limit: 4
              timeout: 180
              caller_id_name: "JD Phone"
              caller_id_number: "+13035551235"
              acl: "192.168.1.0/24"
              fail_over_destination_code: "menu:main_menu"
      responses:
        '200':
          description: Device updated successfully.
          content:
            application/json:
              schema:
                $ref: './index.yaml#/components/schemas/DeviceResponse' 
              example:
                id: 1763
                site_id: 6
                name: "John Doe Desk Phone - Updated"
                login: "john.doe.phone1"
                active: true
                channel_limit: 4
                timeout: 180
                caller_id_name: "JD Phone"
                caller_id_number: "+13035551235"
                acl: "192.168.1.0/24"
                fail_over_destination_code: "menu:main_menu"
                fail_over_destination:
                  name: "Main Menu"
                  code: "menu:main_menu"
                user_id: 5
                links:
                  - href: "/sites/6/devices/1763"
                    rel: "self"
                    method: "GET"
        '400':
          $ref: '#/components/responses/BadRequestError' 
        '401':
          $ref: '#/components/responses/UnauthorizedError' 
        '403':
          $ref: '#/components/responses/ForbiddenError' 
        '404':
          $ref: '#/components/responses/DeviceNotFoundError' 
        '409':
          description: Conflict - The updated login name already exists for another device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 
              example:
                status: "error"
                error: "Device login 'john.doe.phone1' already exists."
                error_code: "DEVICE_LOGIN_CONFLICT"

    delete:
      tags:
        - Site Features - Devices
      summary: Delete a Device
      description: Permanently deletes a specific device from the site.
      operationId: deleteSiteDeviceById
      security:
        - oAuth2: [write, admin] # Changed to write, admin for delete
      responses:
        '204':
          description: Device deleted successfully. No content is returned.
        '401':
          $ref: '#/components/responses/UnauthorizedError' 
        '403':
          $ref: '#/components/responses/ForbiddenError' 
        '404':
          $ref: '#/components/responses/DeviceNotFoundError' 

components:
  parameters:
    DeviceIdPath:
      name: deviceId
      in: path
      description: The unique identifier of the device.
      required: true
      schema:
        type: integer
        format: int64
        example: 1763

  securitySchemes:
    oAuth2: # Local definition
      type: oauth2
      description: OAuth 2.0 Authentication for securing API endpoints.
      flows:
        clientCredentials:
          tokenUrl: https://api.ringer.tel/v1/auth/token
          scopes:
            read: Read access to API resources
            write: Write access to API resources
            admin: Administrative access
  schemas:
    Error: # Local Error definition
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: "error"
        error:
          type: string
        error_code:
          type: string
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code
      example:
        status: "error"
        error: "A device-specific error occurred."
        error_code: "DEVICE_ERROR"
    # Schemas DeviceResponse, DeviceUpdateRequest, Link, SiteDestination are referenced from ../index.yaml

  responses: # Local response definitions
    UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Authentication token is missing or invalid."
            error_code: "UNAUTHORIZED"
    ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "You do not have permission for this action."
            error_code: "FORBIDDEN"
    DeviceNotFoundError: # Specific not found for device
      description: Not Found - The requested device could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "The requested device was not found."
            error_code: "DEVICE_NOT_FOUND"
    BadRequestError:
      description: Bad Request - The request was malformed or contained invalid data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Invalid request parameters for device."
            error_code: "INVALID_REQUEST" 