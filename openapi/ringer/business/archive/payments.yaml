openapi: 3.0.3
info:
  title: Ringer Business API - Payments
  description: |
    This API provides endpoints for managing payments for a Ringer Business account.
    It allows developers to:
    - List past payments made on the account.
    - Create a new payment, typically using a stored payment method (e.g., credit card).

    Payments are processed securely. Specific payment method details are handled via their respective APIs (e.g., Credit Cards API).
  version: 1.0.0
  license:
    name: MIT License
    url: https://github.com/teliax/ringer-oapi/blob/main/LICENSE
  contact:
    name: Ringer API Support
    url: https://docs.ringer.tel/support
    email: support@ringer.tel

servers:
  - url: https://api.ringer.tel/v1
    description: Production server
  - url: https://api.staging.ringer.tel/v1
    description: Staging server

tags:
  - name: Payments
    description: Endpoints for listing and creating account payments.

paths:
  /payments:
    get:
      tags:
        - Payments
      summary: List Payments
      description: |
        Retrieves a paginated list of payments made on the authenticated account.
        The list is typically ordered by creation date, with the most recent payments first.
      operationId: listPayments
      security:
        - oAuth2: [read]
      parameters:
        - name: page_size
          in: query
          description: The number of payment entries to return per page.
          required: false
          schema:
            type: integer
            default: 30
            minimum: 1
            maximum: 100
            example: 25
        - name: page
          in: query
          description: The page number of the result set to return.
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
            example: 1
      responses:
        '200':
          description: A list of payments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentListResponse'
              example:
                payments:
                  - id: 7001
                    amount_in_dollars: "50.00"
                    currency: "USD"
                    status: "succeeded"
                    payment_method_summary: "Visa ending in 1111"
                    transaction_id: "ch_1JaelG2eZvKYlo2CiHq9D3S7"
                    created_at: "2023-10-26T10:00:00Z"
                    links:
                      - href: "/payments/7001"
                        rel: "self"
                        method: "GET"
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: "/payments?page=1&page_size=25"
                    rel: "self"
        '400':
          description: Bad Request - Invalid pagination parameters or other query issues.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "Invalid page_size parameter. Must be between 1 and 100."
                error_code: "INVALID_PAGINATION_PARAMS"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

    post:
      tags:
        - Payments
      summary: Create a Payment
      description: |
        Initiates a new payment on the authenticated account.
        The payment is typically made using the account's default or highest priority verified payment method.
        The request specifies the amount to be paid.
      operationId: createPayment
      security:
        - oAuth2: [write]
      requestBody:
        description: The amount for the payment.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                amount_in_dollars:
                  type: number
                  format: double
                  description: The amount of the payment in dollars.
                  example: 50.25
              required:
                - amount_in_dollars
              example:
                amount_in_dollars: 75.50
      responses:
        '201':
          description: Payment created successfully. The response includes details of the processed payment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
              example:
                id: 7002
                amount_in_dollars: "50.25"
                currency: "USD"
                status: "succeeded"
                success: true
                payment_method_summary: "Visa ending in 1111"
                transaction_id: "pi_1JaelH2eZvKYlo2CkmN9E4T6"
                created_at: "2023-10-26T10:05:00Z"
                links:
                  - href: "/payments/7002"
                    rel: "self"
                    method: "GET"
        '400':
          description: |
            Bad Request.
            Could be due to an invalid amount, no active payment method on file, or other processing issues.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "Payment failed: No verified payment method found on account."
                error_code: "PAYMENT_METHOD_REQUIRED"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '402':
          description: Payment Failed - The payment attempt was declined by the payment processor or failed for other reasons.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "Payment declined by the bank. Please try a different payment method."
                error_code: "PAYMENT_DECLINED"
        '403':
          $ref: '#/components/responses/ForbiddenError'

components:
  schemas:
    PaymentCore:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the payment record.
          example: 7001
        amount_in_dollars:
          type: string
          description: The amount of the payment in dollars.
          example: "50.00"
        currency:
          type: string
          description: Three-letter ISO currency code (e.g., USD, CAD, EUR).
          default: "USD"
          example: "USD"
        status:
          type: string
          description: The status of the payment transaction.
          enum: [pending, succeeded, failed, requires_action, canceled]
          example: "succeeded"
        success:
          type: boolean
          description: Indicates if the payment transaction was successful.
          example: true
        payment_method_summary:
          type: string
          nullable: true
          description: A brief summary of the payment method used (e.g., "Visa ending in 1234").
          example: "Visa ending in 1111"
        transaction_id:
          type: string
          nullable: true
          description: The unique identifier for the transaction from the payment processor.
          example: "ch_1JaelG2eZvKYlo2CiHq9D3S7"
        created_at:
          type: string
          format: date-time
          description: Timestamp of when the payment was created/processed.
          example: "2023-10-26T10:00:00Z"
      required:
        - id
        - amount_in_dollars
        - currency
        - status
        - created_at

    PaymentResponse:
      allOf:
        - $ref: '#/components/schemas/PaymentCore'
        - type: object
          properties:
            links:
              type: array
              description: HATEOAS links related to this payment.
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
      description: Detailed information about a specific payment transaction.
      example:
        id: 7001
        amount_in_dollars: "50.00"
        currency: "USD"
        status: "succeeded"
        success: true
        payment_method_summary: "Visa ending in 1111"
        transaction_id: "ch_1JaelG2eZvKYlo2CiHq9D3S7"
        created_at: "2023-10-26T10:00:00Z"
        links:
          - href: "/payments/7001"
            rel: "self"
            method: "GET"

    PaymentListResponse:
      type: object
      description: A paginated list of payment transactions.
      properties:
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentResponse'
        total_items:
          type: integer
          description: Total number of payment records available.
          example: 150
        total_pages:
          type: integer
          description: Total number of pages based on `per_page`.
          example: 6
        current_page:
          type: integer
          description: The current page number being displayed.
          example: 1
        per_page:
          type: integer
          description: The number of items per page.
          example: 25
        links:
          type: array
          description: HATEOAS links for pagination and related resources.
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      required:
        - payments
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        payments:
          - id: 7001
            amount_in_dollars: "50.00"
            currency: "USD"
            status: "succeeded"
            success: true
            payment_method_summary: "Visa ending in 1111"
            transaction_id: "ch_1JaelG2eZvKYlo2CiHq9D3S7"
            created_at: "2023-10-26T10:00:00Z"
            links:
              - href: "/payments/7001"
                rel: "self"
                method: "GET"
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: "/payments?page=1&page_size=25"
            rel: "self"
          - href: "/payments?page=2&page_size=25"
            rel: "next"
          - href: "/payments?page=1&page_size=25"
            rel: "first"
          - href: "/payments?page=6&page_size=25"
            rel: "last"

    Link:
      type: object
      description: Represents a HATEOAS link.
      properties:
        href:
          type: string
          format: uri-reference
        rel:
          type: string
        title:
          type: string
          nullable: true
        method:
          type: string
          enum: [GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD]
      required:
        - href
        - rel

    Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: "error"
        error:
          type: string
          example: "Payment processing failed."
        error_code:
          type: string
          example: "PAYMENT_FAILED"
      required:
        - status
        - error
        - error_code
      example:
        status: "error"
        error: "A generic payment error occurred."
        error_code: "PAYMENT_GENERIC_ERROR"

  responses:
    UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Authentication required."
            error_code: "UNAUTHORIZED"
    ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "You do not have permission to access this resource."
            error_code: "FORBIDDEN"

  securitySchemes:
    oAuth2:
      type: oauth2
      description: OAuth 2.0 Authentication for securing API endpoints.
      flows:
        clientCredentials:
          tokenUrl: https://api.ringer.tel/v1/auth/token
          scopes:
            read: Read access to API resources
            write: Write access to API resources
            admin: Administrative access.
