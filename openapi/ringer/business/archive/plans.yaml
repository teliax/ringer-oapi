openapi: 3.0.3
info:
  title: Ringer Business API - Plans Management
  description: |
    This API provides endpoints for managing subscription plans associated with a customer account.
    It allows developers to:
    - List currently active plan(s) for an account.
    - List all plans available to an account.
    - Schedule a plan change for the next billing cycle.
    - Remove the current plan from an account.
    - Retrieve details of a specific plan.
    - Manage packages (add-ons) associated with a plan.

    Plan management is crucial for defining the services and features available to a customer.
  version: 1.0.0
  license:
    name: MIT License
    url: https://github.com/teliax/ringer-oapi/blob/main/LICENSE
  contact:
    name: Ringer API Support
    url: https://docs.ringer.tel/support
    email: support@ringer.tel

servers:
  - url: https://api.ringer.tel/v1
    description: Production server
  - url: https://api.staging.ringer.tel/v1
    description: Staging server

tags:
  - name: Plans
    description: Endpoints for viewing and managing account subscription plans and their packages.

paths:
  /plans:
    get:
      tags:
        - Plans
      summary: List Current Account Plan(s)
      description: |
        Retrieves a paginated list of plan(s) currently active on the authenticated customer's account.
        Typically, an account has one primary active plan.
      operationId: listAccountPlans
      security:
        - oAuth2: [read]
      parameters: 
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of plans per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
      responses:
        '200':
          description: A paginated list of currently active plans for the account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlanListResponse' 
              example:
                plans: 
                  - id: 1
                    name: "Standard Business Plan"
                    description: "Includes core calling features, 1000 domestic minutes, and basic voicemail."
                    total_cost: "49.99"
                    currency: "USD"
                    removable: true
                    active: true
                    approved: true
                    finalized: true
                    items: 
                    packages: {}
                    links:
                      - href: "/plans/1"
                        rel: "self"
                        method: "GET"
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: "/plans?page=1&page_size=25"
                    rel: "self"
                    method: "GET"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /plans/available:
    get:
      tags:
        - Plans
      summary: List Available Plans
      description: Retrieves a paginated list of all subscription plans available for the customer account to switch to.
      operationId: listAvailablePlans
      security:
        - oAuth2: [read]
      parameters: 
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of plans per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
      responses:
        '200':
          description: A paginated list of available plans.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlanListResponse' 
              example:
                plans:
                  - id: 1
                    name: "Standard Business Plan"
                    description: "Includes core calling features..."
                    total_cost: "49.99"
                    currency: "USD"
                    removable: true
                    active: true 
                    approved: true
                    finalized: true
                    items: 
                    packages: {}
                    links:
                      - href: "/plans/1"
                        rel: "self"
                        method: "GET"
                  - id: 2 
                    name: "Pro Business Plan"
                    description: "More features for growing businesses."
                    total_cost: "99.99"
                    currency: "USD"
                    removable: true
                    active: true 
                    approved: true
                    finalized: true
                    items: 
                    packages: {}
                    links:
                      - href: "/plans/2"
                        rel: "self"
                        method: "GET"
                total_items: 2 
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: "/plans/available?page=1&page_size=25"
                    rel: "self"
                    method: "GET"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /plans/remove:
    patch:
      tags:
        - Plans
      summary: Remove Current Plan
      description: |
        Removes the currently active plan from the customer's account.
        This action might revert the account to a default or pay-as-you-go state.
        The removal might take effect at the end of the current billing cycle.
      operationId: removeCurrentPlan
      security:
        - oAuth2: [write]
      responses:
        '204':
          description: Plan removed or scheduled for removal successfully. No content returned.
        '400':
          $ref: '#/components/responses/BadRequestError' 
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError' 

  /plans/change-plan:
    patch:
      tags:
        - Plans
      summary: Schedule Plan Change
      description: |
        Schedules a change to a new plan for the customer account.
        The change typically takes effect at the start of the next billing cycle.
      operationId: schedulePlanChange
      security:
        - oAuth2: [write]
      requestBody:
        description: The ID of the new plan to switch to.
        required: true
        content:
          application/x-www-form-urlencoded: 
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 2
              required:
                - id
              example:
                id: 2
      responses:
        '200':
          description: Plan change scheduled successfully. Returns details of the plan that will become active.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResponse' 
              example:
                id: 2
                name: "Pro Business Plan"
                description: "More features for growing businesses."
                total_cost: "99.99"
                currency: "USD"
                removable: true
                active: false
                approved: true
                finalized: false
                items: 
                packages: {}
                links:
                  - href: "/plans/2"
                    rel: "self"
                    method: "GET"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Not Found - The specified plan ID to change to does not exist or is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "Plan with ID 999 not found or not available for change."
                error_code: "TARGET_PLAN_NOT_FOUND"

  /plans/{planId}:
    parameters:
      - $ref: '#/components/parameters/PlanIdPath'
    get:
      tags:
        - Plans
      summary: Get Plan Details
      description: Retrieves detailed information for a specific subscription plan by its ID.
      operationId: getPlanById
      security:
        - oAuth2: [read]
      responses:
        '200':
          description: Successfully retrieved plan details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResponse'
              example:
                id: 1
                name: "Standard Business Plan"
                description: "Includes core calling features, 1000 domestic minutes, and basic voicemail."
                total_cost: "49.99"
                currency: "USD"
                removable: true
                active: true
                approved: true
                finalized: true
                items: 
                packages: {}
                links:
                  - href: "/plans/1"
                    rel: "self"
                    method: "GET"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /plans/{planId}/packages:
    parameters:
      - $ref: '#/components/parameters/PlanIdPath'
    get:
      tags:
        - Plans
      summary: List Plan Packages
      description: Retrieves a list of all packages (included and optional) associated with a specific plan.
      operationId: listPlanPackages
      security:
        - oAuth2: [read]
      responses:
        '200':
          description: A list of packages for the specified plan.
          content:
            application/json:
              schema:
                $ref: './packages.yaml#/components/schemas/CategorizedPackageListResponse'
              example:
                included_packages:
                  - id: 10 
                    name: "Core Calling Features"
                    description: "Base features for calling"
                    item_type: "feature_set"
                    item_rules: "standard_call_handling"
                    item_quantity: 1
                    price: "0.00" 
                    currency: "USD"
                    plan_id: 1
                    included: true
                    removable: false
                    category: "base_plan"
                    renewable: true
                optional_packages:
                  - id: 22
                    name: "International Calling Pack - 100 Mins"
                    description: "100 minutes for specific international zones"
                    item_type: "usage_minutes"
                    item_rules: "international_zone_a"
                    item_quantity: 100
                    price: "10.00"
                    currency: "USD"
                    plan_id: 1
                    included: false
                    removable: true
                    category: "add_on"
                    renewable: true
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Not Found - The specified plan ID was not found, or no packages are associated with it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "Plan with ID 1 not found when listing packages."
                error_code: "PLAN_NOT_FOUND_FOR_PACKAGES"

  /plans/{planId}/add-package:
    parameters:
      - $ref: '#/components/parameters/PlanIdPath'
    patch:
      tags:
        - Plans
      summary: Add Package to Plan
      description: Adds an optional package to the customer's current plan or a plan being configured.
      operationId: addPackageToPlan
      security:
        - oAuth2: [write]
      requestBody:
        description: The ID of the package to add to the plan.
        required: true
        content:
          application/x-www-form-urlencoded: 
            schema:
              type: object
              properties:
                package_id:
                  type: integer
                  format: int64
                  example: 22
              required:
                - package_id
              example:
                package_id: 22
      responses:
        '200':
          description: Package added successfully to the plan. Returns details of the added package.
          content:
            application/json:
              schema:
                $ref: './packages.yaml#/components/schemas/PackageResponse'
              example:
                id: 22
                name: "International Calling Pack - 100 Mins"
                description: "100 minutes for specific international zones"
                item_type: "usage_minutes"
                item_rules: "international_zone_a"
                item_quantity: 100
                price: "10.00"
                currency: "USD"
                plan_id: 1
                included: false
                removable: true
                category: "add_on"
                renewable: true
        '400':
          $ref: '#/components/responses/BadRequestError' 
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Not Found - The specified plan ID or package ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "Plan ID 1 or Package ID 999 not found."
                error_code: "PLAN_OR_PACKAGE_NOT_FOUND"

  /plans/{planId}/remove-package:
    parameters:
      - $ref: '#/components/parameters/PlanIdPath'
    patch:
      tags:
        - Plans
      summary: Remove Package from Plan
      description: Removes an optional package from the customer's current plan.
      operationId: removePackageFromPlan
      security:
        - oAuth2: [write]
      requestBody:
        description: The ID of the package to remove from the plan.
        required: true
        content:
          application/x-www-form-urlencoded: 
            schema:
              type: object
              properties:
                package_id:
                  type: integer
                  format: int64
                  example: 22
              required:
                - package_id
              example:
                package_id: 22
      responses:
        '204':
          description: Package removed successfully from the plan. No content returned.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Not Found - The specified plan ID or package ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "Plan ID 1 or Package ID 22 not found for removal."
                error_code: "PLAN_OR_PACKAGE_NOT_FOUND_FOR_REMOVE"

components:
  parameters:
    PlanIdPath:
      name: planId
      in: path
      description: The unique identifier of the plan.
      required: true
      schema:
        type: integer
        format: int64
        example: 1

  schemas:
    PlanCore: 
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Standard Business Plan"
        description:
          type: string
          nullable: true
          example: "Includes core calling features, 1000 domestic minutes, and basic voicemail."
        total_cost:
          type: string 
          example: "49.99"
        currency:
          type: string
          default: "USD"
          example: "USD"
        removable:
          type: boolean
          example: true
        active:
          type: boolean
          example: true
        approved: 
          type: boolean
          example: true
        finalized: 
          type: boolean
          example: true
      required:
        - id
        - name
        - total_cost
        - currency
        - removable
        - active
        - approved
        - finalized

    PlanResponse: 
      allOf:
        - $ref: '#/components/schemas/PlanCore'
        - type: object
          properties:
            items:
              type: array
              description: A list of individual billable items or features included or defined by this plan.
              items:
                $ref: './items.yaml#/components/schemas/ItemResponse'
              nullable: true
            packages: 
              type: object
              description: Included and optional packages associated with this plan.
              properties:
                included_packages:
                  type: array
                  items:
                    $ref: './packages.yaml#/components/schemas/PackageResponse'
                  description: Packages that are automatically part of this plan.
                optional_packages:
                  type: array
                  items:
                    $ref: './packages.yaml#/components/schemas/PackageResponse'
                  description: Additional packages that can be added to this plan at an extra cost.
              nullable: true
            links:
              type: array
              description: HATEOAS links related to this plan.
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
      description: Detailed information about a subscription plan.
      example:
        id: 1
        name: "Standard Business Plan"
        description: "Includes core calling features, 1000 domestic minutes, and basic voicemail."
        total_cost: "49.99"
        currency: "USD"
        removable: true
        active: true
        approved: true
        finalized: true
        items: 
          - id: 449 
            name: "Emergency Call Service"
            item_type: "service_fee"
            item_rules: "e911_access"
            item_price: "1.50"
            currency: "USD"
        packages:
          included_packages:
            - id: 10 
              name: "Core Calling Features"
              item_type: "feature_set"
              item_rules: "standard_call_handling"
              item_quantity: 1
              price: "0.00" 
              currency: "USD"
              plan_id: 1
              included: true
              removable: false
          optional_packages:
            - id: 22
              name: "International Calling Pack - 100 Mins"
              item_type: "usage_minutes"
              item_rules: "international_zone_a"
              item_quantity: 100
              price: "10.00"
              currency: "USD"
              plan_id: 1
              included: false
              removable: true
        links:
          - href: "/plans/1"
            rel: "self"
            method: "GET"
          - href: "/plans/1/packages"
            rel: "listPackages"
            method: "GET"

    PaginatedPlanListResponse: # Renamed from PlanListResponse
      type: object
      description: A paginated list of subscription plans.
      properties:
        plans:
          type: array
          items:
            $ref: '#/components/schemas/PlanResponse'
        total_items:
          type: integer
          example: 10
        total_pages:
          type: integer
          example: 1
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 25
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      required:
        - plans
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        plans:
          - $ref: '#/components/schemas/PlanResponse/example'
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: "/plans?page=1&page_size=25"
            rel: "self"
            method: "GET"

    Link: 
      type: object
      description: Represents a HATEOAS link.
      properties:
        href:
          type: string
          format: uri-reference
        rel:
          type: string
        title:
          type: string
          nullable: true
        method:
          type: string
          enum: [GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD]
      required:
        - href
        - rel

    Error: 
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: "error"
        error:
          type: string
        error_code:
          type: string
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code
      example:
        status: "error"
        error: "A generic plan error occurred."
        error_code: "PLAN_GENERIC_ERROR"

  responses: 
    UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Authentication required."
            error_code: "UNAUTHORIZED"
    ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "You do not have permission to perform this action on plans."
            error_code: "FORBIDDEN"
    NotFoundError:
      description: Not Found - The requested resource (e.g., specific plan) could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "The requested plan was not found."
            error_code: "PLAN_NOT_FOUND"
    BadRequestError:
      description: Bad Request - Invalid data provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Invalid plan data provided."
            error_code: "VALIDATION_ERROR"

  securitySchemes:
    oAuth2:
      type: oauth2
      description: OAuth 2.0 Authentication for securing API endpoints.
      flows:
        clientCredentials:
          tokenUrl: https://api.ringer.tel/v1/auth/token
          scopes:
            read: Read access to API resources
            write: Write access to API resources
            admin: Administrative access.
