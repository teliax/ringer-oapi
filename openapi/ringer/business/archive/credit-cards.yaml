openapi: 3.0.3
info:
  title: Ringer Business API - Credit Card Management
  description: |
    This API provides endpoints for managing credit card payment methods associated with a customer account.
    It allows developers to:
    - List existing credit cards.
    - Add a new credit card.
    - Retrieve details of a specific credit card.
    - Update information for an existing credit card.
    - Delete a credit card.
    - Verify a newly added credit card.

    Proper security and PCI compliance considerations are paramount when handling credit card data.
    These endpoints are designed to interact with a secure payment processing backend.
  version: 1.0.0
  license:
    name: MIT License
    url: https://github.com/teliax/ringer-oapi/blob/main/LICENSE
  contact:
    name: Ringer API Support
    url: https://docs.ringer.tel/support
    email: support@ringer.tel
servers:
  - url: https://api.ringer.tel/v1
    description: Production server
  - url: https://api.staging.ringer.tel/v1
    description: Staging server
tags:
  - name: Credit Cards
    description: Endpoints for managing credit card payment methods.

components:
  securitySchemes:
    oAuth2:
      type: oauth2
      description: OAuth 2.0 Authentication for securing API endpoints.
      flows:
        clientCredentials:
          tokenUrl: https://api.ringer.tel/v1/auth/token
          scopes:
            read: Read access to API resources
            write: Write access to API resources
            admin: Administrative access.
  schemas:
    CreditCardCore:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the credit card record.
          example: 101
        name:
          type: string
          description: A custom name or label for the credit card (e.g., "Work Visa", "Personal Amex").
          example: "Primary Visa"
        last4:
          type: string
          description: The last four digits of the credit card number.
          example: "1111"
        brand:
          type: string
          description: The brand of the credit card (e.g., Visa, Mastercard, American Express).
          example: "Visa"
        exp_month:
          type: integer
          description: The expiration month of the credit card (1-12).
          example: 12
        exp_year:
          type: integer
          description: The expiration year of the credit card (e.g., 2025).
          example: 2025
        priority:
          type: integer
          description: Priority for payment processing (higher numbers typically processed first). Range 0-100.
          minimum: 0
          maximum: 100
          example: 100
        active:
          type: boolean
          description: Indicates if the card is active for payments.
          example: true
        verified:
          type: boolean
          description: Indicates if the card has been successfully verified.
          example: true
        expired:
          type: boolean
          description: Indicates if the card is currently expired based on its expiration date.
          readOnly: true
          example: false
      required:
        - id
        - name
        - last4
        - brand
        - exp_month
        - exp_year
        - priority
        - active
        - verified
        - expired

    CreditCardCreateRequest:
      type: object
      description: Information required to add and tokenize a new credit card.
      properties:
        name:
          type: string
          description: A custom name for the credit card.
          example: "Backup Mastercard"
        card_number:
          type: string
          description: The full credit card number (PAN). This will be tokenized and not stored directly by Ringer.
          example: "5555444433332222"
        exp_month:
          type: integer
          description: Expiration month (1-12).
          example: 8
          minimum: 1
          maximum: 12
        exp_year:
          type: integer
          description: Expiration year (e.g., 2026). Future year expected.
          example: 2026
        cvv:
          type: string
          description: The 3 or 4-digit card verification value (CVV/CVC).
          example: "123"
        first_name:
          type: string
          description: Cardholder's first name.
          example: "Jane"
        last_name:
          type: string
          description: Cardholder's last name.
          example: "Doe"
        address_line1:
          type: string
          description: Cardholder's billing address - street line 1.
          example: "123 Payment Lane"
        address_line2:
          type: string
          nullable: true
          description: Cardholder's billing address - street line 2 (e.g., apartment, suite).
          example: "Suite B"
        city:
          type: string
          description: Cardholder's billing address - city.
          example: "Secure City"
        state_province:
          type: string
          nullable: true
          description: Cardholder's billing address - state or province code.
          example: "CA"
        postal_code:
          type: string
          description: Cardholder's billing address - postal or ZIP code.
          example: "90210"
        country:
          type: string
          description: Cardholder's billing address - two-letter ISO 3166-1 alpha-2 country code.
          example: "US"
        priority:
          type: integer
          description: Payment priority (0-100). Higher values are typically tried first.
          minimum: 0
          maximum: 100
          default: 50
          example: 50
        active:
          type: boolean
          description: Set whether this card should be active for payments upon creation.
          default: true
          example: true
      required:
        - name
        - card_number
        - exp_month
        - exp_year
        - cvv
        - first_name
        - last_name
        - address_line1
        - city
        - postal_code
        - country
      example:
        name: "Personal Amex"
        card_number: "370012345678901"
        exp_month: 12
        exp_year: 2027
        cvv: "1234"
        first_name: "John"
        last_name: "Public"
        address_line1: "456 Token Street"
        city: "Cardville"
        state_province: "NV"
        postal_code: "89101"
        country: "US"
        priority: 75
        active: true

    CreditCardUpdateRequest:
      type: object
      description: Fields that can be updated for an existing credit card.
      properties:
        name:
          type: string
          description: New custom name for the credit card.
          example: "Work Visa (Primary)"
        priority:
          type: integer
          description: New payment priority (0-100).
          minimum: 0
          maximum: 100
          example: 100
        active:
          type: boolean
          description: Set the card as active or inactive for payments.
          example: true
      example:
        name: "Corporate AMEX (Expenses)"
        priority: 90
        active: false

    CreditCardResponse:
      allOf:
        - $ref: '#/components/schemas/CreditCardCore'
        - type: object
          properties:
            links:
              type: array
              description: HATEOAS links related to this credit card.
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
      description: Detailed information about a stored credit card (excluding sensitive full PAN).
      example:
        id: 101
        name: "Primary Visa"
        last4: "1111"
        brand: "Visa"
        exp_month: 12
        exp_year: 2025
        priority: 100
        active: true
        verified: true
        expired: false
        links:
          - href: "/credit-cards/101"
            rel: "self"
            method: "GET"
          - href: "/credit-cards/101/verify"
            rel: "verify"
            method: "PATCH"

    PaginatedCreditCardListResponse:
      type: object
      description: A paginated list of credit cards associated with an account.
      properties:
        credit_cards:
          type: array
          items:
            $ref: '#/components/schemas/CreditCardResponse'
        total_items:
          type: integer
          description: Total number of credit cards.
        total_pages:
          type: integer
          description: Total number of pages.
        current_page:
          type: integer
          description: Current page number.
        per_page:
          type: integer
          description: Number of items per page.
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      required:
        - credit_cards
      example:
        credit_cards:
          - id: 101
            name: "Primary Visa"
            last4: "1111"
            brand: "Visa"
            exp_month: 12
            exp_year: 2025
            priority: 100
            active: true
            verified: true
            expired: false
            links:
              - href: "/credit-cards/101"
                rel: "self"
                method: "GET"
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: "/credit-cards?page=1&page_size=25"
            rel: "self"
            method: "GET"

    Link:
      type: object
      description: Represents a HATEOAS link.
      properties:
        href:
          type: string
          format: uri-reference
        rel:
          type: string
        title:
          type: string
          nullable: true
        method:
          type: string
          enum: [GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD]
      required:
        - href
        - rel

    Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: "error"
        error:
          type: string
          example: "Credit card processing failed."
        error_code:
          type: string
          example: "PAYMENT_METHOD_ERROR"
      required:
        - status
        - error
        - error_code
      example:
        status: "error"
        error: "A generic credit card error occurred."
        error_code: "CREDIT_CARD_GENERIC_ERROR"

  responses:
    UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Authentication required."
            error_code: "UNAUTHORIZED"
    ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "You do not have permission to access this resource."
            error_code: "FORBIDDEN"
    NotFoundError:
      description: Not Found - The requested resource (e.g., specific credit card) could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "The requested credit card was not found."
            error_code: "RESOURCE_NOT_FOUND"

paths:
  /credit-cards:
    get:
      tags:
        - Credit Cards
      summary: List Credit Cards
      description: Retrieves a list of all credit cards associated with the authenticated customer's account.
      operationId: listCreditCards
      security:
        - oAuth2: [read]
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of credit cards per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
      responses:
        '200':
          description: A paginated list of credit cards.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCreditCardListResponse'
              example:
                credit_cards:
                  - id: 101
                    name: "Primary Visa"
                    last4: "1111"
                    brand: "Visa"
                    exp_month: 12
                    exp_year: 2025
                    priority: 100
                    active: true
                    verified: true
                    expired: false
                    links:
                      - href: "/credit-cards/101"
                        rel: "self"
                        method: "GET"
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: "/credit-cards?page=1&page_size=25"
                    rel: "self"
                    method: "GET"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

    post:
      tags:
        - Credit Cards
      summary: Add a New Credit Card
      description: |
        Adds a new credit card to the authenticated customer's account.
        The full card number is tokenized by the payment processor; only partial information (like last4, brand, expiry) is stored and returned by this API.
        A verification step is typically required after adding a new card.
      operationId: createCreditCard
      security:
        - oAuth2: [write]
      requestBody:
        description: Details of the new credit card to be added.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardCreateRequest'
            example:
              name: "Backup Mastercard"
              card_number: "5555444433332222"
              exp_month: 8
              exp_year: 2026
              cvv: "123"
              first_name: "Jane"
              last_name: "Doe"
              address_line1: "123 Payment Lane"
              city: "Secure City"
              state_province: "CA"
              postal_code: "90210"
              country: "US"
              priority: 50
              active: true
      responses:
        '201':
          description: Credit card added successfully. The response includes details of the added card (excluding sensitive full PAN).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResponse'
              example:
                id: 102
                name: "Backup Mastercard"
                last4: "2222"
                brand: "Mastercard"
                exp_month: 8
                exp_year: 2026
                priority: 50
                active: true
                verified: false
                expired: false
                links:
                  - href: "/credit-cards/102"
                    rel: "self"
                    method: "GET"
                  - href: "/credit-cards/102/verify"
                    rel: "verify"
                    method: "PATCH"
        '400':
          description: Bad Request - Invalid credit card details provided or validation failed (e.g., Luhn check, expiry date).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "Invalid card number or expiry date provided."
                error_code: "INVALID_CARD_DETAILS"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /credit-cards/{cardId}:
    parameters:
      - name: cardId
        in: path
        description: The unique identifier of the credit card.
        required: true
        schema:
          type: integer
          format: int64
          example: 101
    get:
      tags:
        - Credit Cards
      summary: Get Credit Card Details
      description: Retrieves details for a specific credit card by its ID (excluding sensitive full PAN).
      operationId: getCreditCardById
      security:
        - oAuth2: [read]
      responses:
        '200':
          description: Successfully retrieved credit card details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResponse'
              example:
                id: 101
                name: "Primary Visa"
                last4: "1111"
                brand: "Visa"
                exp_month: 12
                exp_year: 2025
                priority: 100
                active: true
                verified: true
                expired: false
                links:
                  - href: "/credit-cards/101"
                    rel: "self"
                    method: "GET"
                  - href: "/credit-cards/101/verify"
                    rel: "verify"
                    method: "PATCH"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    put:
      tags:
        - Credit Cards
      summary: Update Credit Card Information
      description: |
        Updates non-sensitive information for an existing credit card, such as its name, priority, or active status.
        Sensitive details like card number or full expiry date are generally not updatable directly for security reasons;
        a new card might need to be added instead.
      operationId: updateCreditCardById
      security:
        - oAuth2: [write]
      requestBody:
        description: Credit card attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardUpdateRequest'
            example:
              name: "Primary Visa Card (Updated)"
              priority: 100
              active: true
      responses:
        '200':
          description: Credit card updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResponse'
              example:
                id: 101
                name: "Primary Visa Card (Updated)"
                last4: "1111"
                brand: "Visa"
                exp_month: 12
                exp_year: 2025
                priority: 100
                active: true
                verified: true
                expired: false
                links:
                  - href: "/credit-cards/101"
                    rel: "self"
                    method: "GET"
                  - href: "/credit-cards/101/verify"
                    rel: "verify"
                    method: "PATCH"
        '400':
          description: Bad Request - Invalid data provided for update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "Invalid priority value. Must be between 0 and 100."
                error_code: "INVALID_UPDATE_DATA"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      tags:
        - Credit Cards
      summary: Delete Credit Card
      description: Permanently deletes a specific credit card by its ID from the customer's account.
      operationId: deleteCreditCardById
      security:
        - oAuth2: [write]
      responses:
        '204':
          description: Credit card deleted successfully. No content is returned.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /credit-cards/{cardId}/verify:
    parameters:
      - name: cardId
        in: path
        description: The unique identifier of the credit card to be verified.
        required: true
        schema:
          type: integer
          format: int64
          example: 102
    patch:
      tags:
        - Credit Cards
      summary: Verify Credit Card
      description: |
        Verifies a newly added credit card, typically by submitting a small verification amount
        that was charged (and then usually refunded or voided) to the card by the payment system.
      operationId: verifyCreditCard
      security:
        - oAuth2: [write]
      requestBody:
        description: The verification amount charged to the card.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                amount_in_dollars:
                  type: number
                  format: double
                  description: The verification amount (e.g., between $1.00 and $2.00) that appeared on the cardholder's statement or hold section.
                  example: 1.23
              required:
                - amount_in_dollars
              example:
                amount_in_dollars: 1.23
      responses:
        '200':
          description: Credit card verified successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResponse'
              example:
                id: 102
                name: "Backup Mastercard"
                last4: "2222"
                brand: "Mastercard"
                exp_month: 8
                exp_year: 2026
                priority: 50
                active: true
                verified: true
                expired: false
                links:
                  - href: "/credit-cards/102"
                    rel: "self"
                    method: "GET"
        '400':
          description: Bad Request - Incorrect verification amount or card cannot be verified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "Verification failed: Incorrect amount or card already verified."
                error_code: "VERIFICATION_FAILED"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
