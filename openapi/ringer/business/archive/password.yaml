openapi: 3.0.3
info:
  title: Ringer Business API - Password Management
  description: |
    This API provides endpoints for password management, including:
    - Requesting a password reset (forgot password).
    - Resetting the password using a token.

    These operations help users regain access to their accounts if they have forgotten their password.
  version: 1.0.0
  license:
    name: MIT License
    url: https://github.com/teliax/ringer-oapi/blob/main/LICENSE
  contact:
    name: Ringer API Support
    url: https://docs.ringer.tel/support
    email: support@ringer.tel

servers:
  - url: https://api.ringer.tel/v1
    description: Production server
  - url: https://api.staging.ringer.tel/v1
    description: Staging server

tags:
  - name: Password Management
    description: Endpoints for forgot password and password reset functionalities.

paths:
  /password:
    post:
      tags:
        - Password Management
      summary: Request Password Reset
      description: |
        Allows a user to request a password reset by providing their registered email address.
        If the email address is associated with an existing account, the system will typically send an email
        to that address containing a password reset token and instructions.
        This endpoint itself usually just confirms that the process has been initiated if the email is found.
      operationId: requestPasswordReset # was forgot_password
      security: [] # MODIFIED to be an array
      requestBody:
        description: The user's email address to initiate the password reset process.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest' # Renamed from ForgotPasswordParams
            example:
              email: "user@example.com"
      responses:
        '201': # Or 202 Accepted if the email sending is asynchronous
          description: |
            Password reset process initiated successfully. 
            An email with instructions (including a reset token) has been sent if the email address is valid and registered.
            The response may include the reset token directly ONLY if the API is designed for non-email-based flows (e.g., an admin generating a reset link), which is less common for public APIs.
            The original swagger indicated the token was in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResponse' # Renamed from ForgotPassword
              example:
                message: "If your email address exists in our system, you will receive a password reset link shortly."
                # reset_password_token: "U6z9TxNd7xQBJcDF" # Example if token is returned directly (from original spec)
        '400':
          description: Bad Request - The email address provided is invalid or missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "Invalid email address format."
                error_code: "INVALID_EMAIL_FORMAT"
        '404': # From original Teliax Swagger
          description: Not Found - The email address provided is not associated with any account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "No account found with that email address."
                error_code: "EMAIL_NOT_FOUND"

    put:
      tags:
        - Password Management
      summary: Reset Password
      description: |
        Allows a user to set a new password for their account using a valid password reset token.
        The token is typically obtained from a link sent to their email after initiating a password reset request.
      operationId: resetPassword # was reset_password
      security: [] # MODIFIED to be an array
      requestBody:
        description: The password reset token, new password, and password confirmation.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest' # Renamed from ResetPasswordParams
            example:
              reset_password_token: "U6z9TxNd7xQBJcDF"
              password: "newS3curEP@ssw0rd!"
              password_confirmation: "newS3curEP@ssw0rd!"
      responses:
        '200':
          description: Password has been reset successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse' # Renamed from ResetPassword
              example:
                message: "Your password has been updated successfully. You can now log in with your new password."
        '400':
          description: |
            Bad Request.
            This can be due to:
            - Missing or invalid `reset_password_token`.
            - New password and confirmation do not match.
            - New password does not meet complexity requirements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "Password reset token is invalid or has expired. Or, passwords do not match / meet complexity requirements."
                error_code: "INVALID_RESET_TOKEN_OR_PASSWORD"
        '404': # From original Teliax Swagger
          description: |
            Not Found.
            The account associated with the reset token could not be found (e.g., token is for a deleted account).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "Account not found for the provided reset token."
                error_code: "ACCOUNT_NOT_FOUND_FOR_TOKEN"

components:
  schemas:
    ForgotPasswordRequest: # Based on ForgotPasswordParams
      type: object
      description: Request payload to initiate a password reset.
      properties:
        email:
          type: string
          format: email
          description: The email address of the account for which the password reset is requested.
          example: "user@example.com"
      required:
        - email
      example:
        email: "forgotful.user@example.com"

    ForgotPasswordResponse: # Based on ForgotPassword
      type: object
      description: Response after a password reset has been initiated.
      properties:
        message:
          type: string
          description: A message indicating the outcome of the request.
          example: "If an account with that email exists, a password reset link has been sent."
        # reset_password_token: # From original swagger, if directly returned
        #   type: string
        #   nullable: true
        #   description: The password reset token. This is often NOT returned directly for security reasons; instead, it is emailed to the user.
        #   example: "U6z9TxNd7xQBJcDF"
        # links: # Optional HATEOAS links
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/Link'
      required:
        - message
      example:
        message: "Password reset instructions have been sent to your email address if it is registered."

    ResetPasswordRequest: # Based on ResetPasswordParams
      type: object
      description: Request payload to set a new password using a reset token.
      properties:
        reset_password_token:
          type: string
          description: The password reset token received by the user (typically via email).
          example: "U6z9TxNd7xQBJcDF"
        password:
          type: string
          format: password
          description: The new password for the account. Should meet complexity requirements.
          example: "newS3curEP@ssw0rd!"
        password_confirmation:
          type: string
          format: password
          description: Confirmation of the new password. Must match the `password` field.
          example: "newS3curEP@ssw0rd!"
      required:
        - reset_password_token
        - password
        - password_confirmation
      example:
        reset_password_token: "valid_reset_token_string"
        password: "P@ssword123!"
        password_confirmation: "P@ssword123!"

    ResetPasswordResponse: # Based on ResetPassword
      type: object
      description: Response after successfully resetting a password.
      properties:
        message:
          type: string
          description: A success message indicating the password has been updated.
          example: "Password updated successfully."
        # links: # Optional HATEOAS links
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/Link'
      required:
        - message
      example:
        message: "Your password has been successfully reset. You can now log in."

    Error: # Consistent Error schema
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: "error"
        error:
          type: string
          example: "Invalid request parameters."
        error_code:
          type: string
          example: "INVALID_PARAMETERS"
      required:
        - status
        - error
        - error_code
      example:
        status: "error"
        error: "Password reset token is invalid or has expired."
        error_code: "INVALID_OR_EXPIRED_TOKEN"

  securitySchemes:
    oAuth2:
      type: oauth2
      description: OAuth 2.0 Authentication for securing API endpoints.
      flows:
        clientCredentials:
          tokenUrl: https://api.ringer.tel/v1/auth/token
          scopes:
            read: Read access to API resources
            write: Write access to API resources
            admin: Administrative access

# No global security. Endpoints are public (token-based or email-driven).
