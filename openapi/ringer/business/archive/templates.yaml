openapi: 3.0.3
info:
  title: Ringer Business API - Template Management
  description: |
    This API provides endpoints for managing service templates within a Ringer Business account.
    Templates offer a pre-configured set of resources (e.g., phone numbers, devices, voicemail) that can be quickly deployed for new users or seats, ensuring consistency and simplifying setup.

    Functionality includes:
    - Listing available templates.
    - Creating a new template.
    - Retrieving details of a specific template.
    - Updating an existing template.
    - Deleting a template.
    - Cloning an existing template to create a new one.
  version: 1.0.0
  license:
    name: MIT License
    url: https://github.com/teliax/ringer-oapi/blob/main/LICENSE
  contact:
    name: Ringer API Support
    url: https://docs.ringer.tel/support
    email: support@ringer.tel

servers:
  - url: https://api.ringer.tel/v1
    description: Production server
  - url: https://api.staging.ringer.tel/v1
    description: Staging server

# Global security removed, will be defined per operation

tags:
  - name: Templates
    description: Endpoints for managing service configuration templates.

paths:
  /templates:
    get:
      tags:
        - Templates
      summary: List Templates
      description: |
        Retrieves a list of service templates available to the authenticated account.
        Can be paginated and filtered, for example, to show all templates in the system (with `all=true`) or search by name (`q`).
      operationId: listTemplates
      security:
        - oAuth2: [read]
      parameters:
        - name: page_size
          in: query
          description: Number of template entries per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
        - name: page
          in: query
          description: Page number of the result set.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: all
          in: query
          description: If true, fetches all templates in the system (admin); otherwise, fetches current account's templates.
          required: false
          schema:
            type: boolean
            default: false
        - name: q
          in: query
          description: Free text search string to filter templates by name.
          required: false
          schema:
            type: string
            example: "Sales Profile"
      responses:
        '200':
          description: A list of templates.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateListResponse'
              example:
                templates:
                  - $ref: '#/components/schemas/TemplateResponse/example'
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: "/templates?page=1&page_size=25"
                    rel: "self"
                    method: "GET"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

    post:
      tags:
        - Templates
      summary: Create a New Template
      description: |
        Creates a new service template with a defined set of features and their configurations.
        This allows for streamlined provisioning of new users or services.
      operationId: createTemplate
      security:
        - oAuth2: [write]
      requestBody:
        description: Configuration details for the new template.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateCreateRequest'
            example:
              name: "Standard Employee Setup"
              features:
                switchable: "PhoneNumber"
                position: 1
                attrs:
                  - name: "name"
                    derivative: "calculated"
                    default: "User Phone"
                destinations:
                  - switchable: "Device"
                    position: 2
                    target_type: "destination"
                    attrs:
                      - name: "name"
                        derivative: "calculated"
                        default: "Desk Phone"
      responses:
        '201':
          description: Template created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /templates/{templateId}:
    parameters:
      - name: templateId
        in: path
        description: The unique identifier of the template.
        required: true
        schema:
          type: integer
          format: int64
          example: 1
    get:
      tags:
        - Templates
      summary: Get Template Details
      description: Retrieves detailed information for a specific service template by its ID.
      operationId: getTemplateById
      security:
        - oAuth2: [read]
      responses:
        '200':
          description: Successfully retrieved template details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    put:
      tags:
        - Templates
      summary: Update an Existing Template
      description: Updates the configuration of an existing service template.
      operationId: updateTemplateById
      security:
        - oAuth2: [write]
      requestBody:
        description: Template attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateUpdateRequest'
            example:
              name: "Standard Employee Setup - Revised"
              features:
                switchable: "PhoneNumber"
                position: 1
                attrs:
                  - name: "name"
                    derivative: "calculated"
                    default: "User Direct Line"
      responses:
        '200':
          description: Template updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      tags:
        - Templates
      summary: Delete a Template
      description: Permanently deletes a specific service template. This action cannot be undone.
      operationId: deleteTemplateById
      security:
        - oAuth2: [write, admin]
      parameters:
        - $ref: '#/components/parameters/TemplateIdPath'
      responses:
        '204':
          description: Template deleted successfully. No content is returned.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /templates/{templateId}/clone:
    parameters:
      - name: templateId
        in: path
        description: The unique identifier of the template to clone.
        required: true
        schema:
          type: integer
          format: int64
          example: 1
    post:
      tags:
        - Templates
      summary: Clone an Existing Template
      description: |
        Creates a new template by cloning an existing one.
        The new template will have a new ID and can be subsequently modified.
      operationId: cloneTemplateById
      security:
        - oAuth2: [write] # Cloning creates a new resource
      responses:
        '201':
          description: Template cloned successfully. Returns the details of the new template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

components:
  securitySchemes:
    oAuth2:
      type: oauth2
      description: OAuth 2.0 Authentication for securing API endpoints.
      flows:
        clientCredentials:
          tokenUrl: https://api.ringer.tel/v1/auth/token
          scopes:
            read: Read access to API resources
            write: Write access to API resources
            admin: Administrative access.
  
  parameters:
    TemplateIdPath:
      name: templateId
      in: path
      description: The unique identifier of the template.
      required: true
      schema:
        type: integer
        format: int64
        example: 1

  schemas:
    TemplateFeatureAttribute:
      type: object
      description: Defines an attribute for a feature within a template.
      properties:
        name:
          type: string
          description: The name of the feature attribute (e.g., "name", "timeout", "caller_id_name").
        derivative:
          type: string
          enum: [calculated, predefined, prompt]
          description: How the attribute's value is determined.
        default:
          type: string 
          nullable: true
          description: Default value or prompt text.
      required:
        - name
        - derivative
      example:
        name: "timeout"
        derivative: "predefined"
        default: "120"

    TemplateFeature:
      type: object
      description: Represents a configurable feature (switchable) within a template, forming a tree structure.
      properties:
        switchable:
          type: string
        position:
          type: integer
        attrs:
          type: array
          items:
            $ref: '#/components/schemas/TemplateFeatureAttribute'
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/TemplateFeature'
          nullable: true
        feature_type:
          type: string
          description: Type of feature (e.g., device, extension, menu, voicemail).
          example: "device"
        failover:
          description: "Optional. System code for the failover destination if this feature is unavailable."
          nullable: true
          allOf:
            - $ref: './common_components.yaml#/components/schemas/SiteDestination'
        target_type:
          type: string
          description: The type of the target object for the feature (e.g. Device, RingGroup).
      required:
        - switchable
        - position
      example:
        switchable: "PhoneNumber"
        position: 1
        attrs:
          - name: "name"
            derivative: "calculated"
            default: "Phone Number"

    TemplateCore:
      type: object
      properties:
        name:
          type: string
        features:
          $ref: '#/components/schemas/TemplateFeature'
      required:
        - name
        - features

    TemplateCreateRequest:
      allOf:
        - $ref: '#/components/schemas/TemplateCore'

    TemplateUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/TemplateCore'

    TemplateResponse:
      allOf:
        - $ref: '#/components/schemas/TemplateCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
            last_updated_by:
              type: string
              nullable: true
            owner:
              type: string
              nullable: true
            links:
              type: array
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
          required:
            - id
      example:
        id: 1
        name: "Sales Team Standard Setup"
        features:
          switchable: "PhoneNumber"
          position: 1
          attrs:
            - name: "name"
              derivative: "calculated"
              default: "Phone Number"
        last_updated_by: "jane.doe@example.com"
        owner: "Account ABC"
        links:
          - href: "/templates/1"
            rel: "self"
            method: "GET"

    TemplateListResponse:
      type: object
      description: A list of service templates.
      properties:
        templates:
          type: array
          items:
            $ref: '#/components/schemas/TemplateResponse'
        total_items:
          type: integer
          format: int32
        total_pages:
          type: integer
          format: int32
        current_page: # Added for pagination consistency
          type: integer
          format: int32
          example: 1
        per_page: # Added for pagination consistency
          type: integer
          format: int32
          example: 25
        links: # Added for pagination HATEOAS
          type: array
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      required:
        - templates
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        templates:
          - $ref: '#/components/schemas/TemplateResponse/example'
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: "/templates?page=1&page_size=25"
            rel: "self"
            method: "GET"

    Link:
      type: object
      description: Represents a HATEOAS link.
      properties:
        href:
          type: string
          format: uri-reference
        rel:
          type: string
        title:
          type: string
          nullable: true # Title is often optional
        method:
          type: string
          enum: [GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD]
      required:
        - href
        - rel

    Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: "error"
        error:
          type: string
          example: "An error occurred."
        error_code:
          type: string
          example: "GENERIC_ERROR"
        details:
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code
      example:
        status: "error"
        error: "A template processing error occurred."
        error_code: "TEMPLATE_ERROR"

  responses:
    UnauthorizedError:
      description: Unauthorized - Authentication token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Authentication required."
            error_code: "UNAUTHORIZED"
    ForbiddenError:
      description: Forbidden - The authenticated user does not have permission.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Permission denied."
            error_code: "FORBIDDEN"
    NotFoundError:
      description: Not Found - The requested resource could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Template not found."
            error_code: "TEMPLATE_NOT_FOUND"
    BadRequestError:
      description: Bad Request - Invalid data provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Invalid template data provided."
            error_code: "VALIDATION_ERROR"
