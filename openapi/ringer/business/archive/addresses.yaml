openapi: 3.0.3
info:
  title: Ringer Business API - Address Management
  description: |
    This API focuses on managing addresses associated with entities like customer accounts.
    Currently, it supports updating an existing address record linked to an account.

    Address operations typically require authentication and appropriate permissions.
  version: 1.0.0
  license:
    name: MIT License
    url: https://github.com/teliax/ringer-oapi/blob/main/LICENSE
  contact:
    name: Ringer API Support
    url: https://docs.ringer.tel/support
    email: support@ringer.tel

servers:
  - url: https://api.ringer.tel/v1
    description: Production server
  - url: https://api.staging.ringer.tel/v1
    description: Staging server

tags:
  - name: Addresses
    description: Endpoints for managing address records.
    # Note: In the original Swagger, address update was under the "Account" tag.
    # Here, it's given its own tag for better modularity, assuming addresses might be linked to other entities too.

paths:
  /addresses/{addressId}:
    put:
      tags:
        - Addresses
      summary: Update an Address
      description: |
        Updates the details of a specific address record by its ID.
        This is typically used to modify the contact or billing address associated with an account.
        The user must have permissions to update the account to which this address belongs.
      operationId: updateAccountAddress # Retained from original Teliax for a direct mapping
      security:
        - oAuth2: [write] # Operation-specific security
      parameters:
        - name: addressId
          in: path
          description: The unique identifier of the address record to be updated.
          required: true
          schema:
            type: integer
            format: int64
            example: 671
      requestBody:
        description: Address attributes to update. All fields in the request are typically required for a PUT, or optional for a PATCH.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressUpdateRequest'
            example:
              email: "updated.contact@example.com"
              street_address: "456 Business Road, Unit 10"
              country: "US"
              city: "New City"
              state_province: "TX"
              postal_code: "75001"
              contact_number: "+18005550099"
      responses:
        '200':
          description: Address updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResponse'
              example:
                id: 671
                email: "updated.contact@example.com"
                street_address: "456 Business Road, Unit 10"
                country: "US"
                city: "New City"
                state_province: "TX"
                postal_code: "75001"
                contact_number: "+18005550099"
                links:
                  - href: "/addresses/671"
                    rel: "self"
                    method: "GET"
                  - href: "/account" 
                    rel: "account"
                    method: "GET"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

components:
  securitySchemes:
    oAuth2: # Only oAuth2 is needed now
      type: oauth2
      description: OAuth 2.0 Authentication for securing API endpoints.
      flows:
        clientCredentials:
          tokenUrl: https://api.ringer.tel/v1/auth/token
          scopes:
            read: Read access to API resources
            write: Write access to API resources
            admin: Administrative access.
  
  schemas:
    AddressCore: # Extracted common fields for reusability
      type: object
      description: Core fields defining an address.
      properties:
        email:
          type: string
          format: email
          description: Contact email address associated with this address record.
          example: "contact@example.com"
        street_address:
          type: string
          description: Full street address, including building number, street name, and suite/apartment if applicable.
          example: "123 Commerce Street, Suite 101"
        country:
          type: string
          # pattern: '^([A-Z]{2}|C2)$' # From original Address.country
          description: Two-letter ISO 3166-1 alpha-2 country code (e.g., US, GB, CA).
          example: "US"
        city:
          type: string
          description: City name.
          example: "Metropolis"
        state_province:
          type: string
          description: State, province, or region, as applicable for the country.
          example: "NY"
        postal_code:
          type: string
          description: Postal or ZIP code.
          example: "10001"
        contact_number:
          type: string
          description: A contact phone number associated with this address, preferably in E.164 format.
          example: "+12125551234"
      required:
        - email
        - street_address
        - country
        - city
        - postal_code
        - contact_number
      example:
        email: "shipping@example.com"
        street_address: "789 Distribution Way"
        country: "CA"
        city: "Toronto"
        state_province: "ON"
        postal_code: "M5V 2T6"
        contact_number: "+14165550199"

    AddressUpdateRequest: # Based on AddressParams from Teliax Swagger
      allOf:
        - $ref: '#/components/schemas/AddressCore'
      description: All fields required to update an existing address. For PUT, typically all fields are provided.
      required:
        - email
        - street_address
        - country
        - city
        - postal_code
        - contact_number
      example:
        email: "billing.dept@example.com"
        street_address: "Main Square 1, Finance Tower"
        country: "DE"
        city: "Frankfurt"
        state_province: "HE"
        postal_code: "60313"
        contact_number: "+496912345678"

    AddressResponse: # Based on Address definition from Teliax Swagger
      allOf:
        - $ref: '#/components/schemas/AddressCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the address record.
              example: 671
            links:
              type: array
              description: HATEOAS links related to this address.
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
          required:
            - id
            - email
            - street_address
            - country
            - city
            - postal_code
            - contact_number
      description: Detailed information about an address record, including its unique ID.
      example:
        id: 671
        email: "contact@example.com"
        street_address: "123 Commerce Street, Suite 101"
        country: "US"
        city: "Metropolis"
        state_province: "NY"
        postal_code: "10001"
        contact_number: "+12125551234"
        links:
          - href: "/addresses/671"
            rel: "self"
            method: "GET"
          - href: "/account" # Assuming address is tied to an account
            rel: "account"
            method: "GET"

    Link: # Standard Link object
      type: object
      description: Represents a HATEOAS link.
      properties:
        href:
          type: string
          format: uri-reference
        rel:
          type: string
        title:
          type: string
          nullable: true
        method:
          type: string
          enum: [GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD]
      required:
        - href
        - rel

    Error: # Consistent Error schema
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: "error"
        error:
          type: string
          example: "An error occurred."
        error_code:
          type: string
          example: "GENERIC_ERROR"
      required:
        - status
        - error
        - error_code
      example:
        status: "error"
        error: "A specific address error occurred."
        error_code: "ADDRESS_ERROR"

  responses:
    BadRequestError:
      description: Bad Request - Invalid data provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Invalid input for address."
            error_code: "VALIDATION_ERROR"
    UnauthorizedError:
      description: Unauthorized - Authentication token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Authentication required."
            error_code: "UNAUTHORIZED"
    ForbiddenError:
      description: Forbidden - The authenticated user does not have permission.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Permission denied."
            error_code: "FORBIDDEN"
    NotFoundError:
      description: Not Found - The requested address could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Address not found."
            error_code: "RESOURCE_NOT_FOUND"
