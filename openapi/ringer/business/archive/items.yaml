openapi: 3.0.3
info:
  title: Ringer Business API - Items Management
  description: |
    This API provides endpoints for managing individual billable items or features.
    Items represent the most granular level of service components (e.g., a specific calling feature, a per-minute rate for a call type, a monthly fee for a service).
    These items can be part of packages or plans.

    Currently, this API focuses on allowing updates to items, typically related to their pricing within a specific price deck context.
  version: 1.0.0
  license:
    name: MIT License
    url: https://github.com/teliax/ringer-oapi/blob/main/LICENSE
  contact:
    name: Ringer API Support
    url: https://docs.ringer.tel/support
    email: support@ringer.tel

servers:
  - url: https://api.ringer.tel/v1
    description: Production server
  - url: https://api.staging.ringer.tel/v1
    description: Staging server

tags:
  - name: Items
    description: Endpoints for managing individual billable items and features.

paths:
  /items/{itemId}:
    parameters:
      - name: itemId
        in: path
        description: The unique identifier of the item.
        required: true
        schema:
          type: integer
          format: int64
          example: 449
    put:
      tags:
        - Items
      summary: Update Item Details
      description: |
        Updates attributes of a specific billable item, such as its name, pricing, or tax information,
        often within the context of a price deck.
        This operation is typically restricted to users with administrative privileges for managing pricing and service definitions.
      operationId: updateItemById # was update_item
      security:
        - oAuth2: [write, admin] # Requires admin scope for pricing/item management
      requestBody:
        description: Item attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemUpdateRequest' # Based on ItemParams
            example:
              name: "Emergency Call Service (E911) - Updated"
              item_price: "1.75"
              tax_category: 60
              tax_code: 9
              # item_type and item_rules are likely not updatable for an existing item if they define its fundamental nature.
      responses:
        '200':
          description: Item updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse' # Based on Item definition
              example:
                id: 449
                name: "Emergency Call Service (E911) - Updated"
                item_type: "service_fee"
                item_rules: "e911_access"
                item_price: "1.75"
                currency: "USD"
                price_deck_id: 10
                tax_category: 60
                tax_code: 9
                links:
                  - href: "/items/449"
                    rel: "self"
                    method: "GET"
        '400':
          description: Bad Request - Invalid data provided for the item update (e.g., validation errors).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: "error"
                error: "Invalid item_price format."
                error_code: "ITEM_VALIDATION_ERROR"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

components:
  schemas:
    ItemCore: # Common attributes for an item
      type: object
      properties:
        id:
          type: integer # Was string in original example but path implies integer
          format: int64
          description: Unique identifier for the item.
          example: 449
        name:
          type: string
          description: The human-readable name of the item or feature.
          example: "Emergency Call Service (E911)"
        item_type:
          type: string
          description: The general category or type of the item (e.g., cdr, service_fee, feature_license).
          example: "service_fee"
        item_rules:
          type: string
          nullable: true
          description: Specific rules or sub-classification for the item type that might affect rating or behavior.
          example: "e911_access"
        item_price:
          type: string # Using string for currency consistency
          description: The price of this individual item (e.g., per unit, per month).
          example: "1.50"
        currency: # Added for completeness, though price_deck might imply it
          type: string
          description: Three-letter ISO currency code for the item price.
          default: "USD"
          example: "USD"
        price_deck_id: # Assuming items are often contextualized by a price deck
          type: integer
          format: int64
          nullable: true
          description: Identifier of the price deck this item pricing might belong to.
          example: 10
        # price_deck: # Original Teliax example had string name, using ID is often better for linking
        #   type: string
        #   example: "Teliax HQ"
        tax_category: # From original ItemParams
          type: integer
          nullable: true
          description: Identifier for the tax category applicable to this item.
          example: 59
        tax_code: # From original ItemParams
          type: integer
          nullable: true
          description: Specific tax code applicable to this item.
          example: 8
      required:
        - id
        - name
        - item_type
        - item_price
        - currency

    ItemUpdateRequest: # Based on ItemParams from Teliax Swagger
      type: object
      description: Specifies the fields that can be updated for an item.
      properties:
        name:
          type: string
          description: New name for the item.
          example: "E911 Service Fee"
        item_price:
          type: string
          description: New price for the item.
          example: "1.75"
        # item_type, item_rules might be non-updatable if they define the item's core nature.
        # item_type:
        #   type: string
        # item_rules:
        #   type: string
        tax_category:
          type: integer
          nullable: true
          description: Updated tax category identifier.
          example: 60
        tax_code:
          type: integer
          nullable: true
          description: Updated tax code.
          example: 9
      example:
        name: "Monthly DID Charge - Premium"
        item_price: "2.50"

    ItemResponse: # Based on Item definition from Teliax Swagger
      allOf:
        - $ref: '#/components/schemas/ItemCore'
        - type: object
          properties:
            links:
              type: array
              description: HATEOAS links related to this item.
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
      description: Detailed information about a billable item or feature.
      example:
        id: 449
        name: "Emergency Call Service (E911)"
        item_type: "service_fee"
        item_rules: "e911_access"
        item_price: "1.50"
        currency: "USD"
        price_deck_id: 10
        tax_category: 59
        tax_code: 8
        links:
          - href: "/items/449"
            rel: "self"
            method: "GET" # Assuming a GET /items/{itemId} might exist for viewing
          - href: "/price-decks/10" # Example link to parent price deck
            rel: "priceDeck"
            method: "GET"

    Link: # Standard Link object
      type: object
      description: Represents a HATEOAS link.
      properties:
        href:
          type: string
          format: uri-reference
        rel:
          type: string
        title:
          type: string
          nullable: true
        method:
          type: string
          enum: [GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD]
      required:
        - href
        - rel

    Error: # Consistent Error schema
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: "error"
        error:
          type: string
          example: "Item update failed due to invalid data."
        error_code:
          type: string
          example: "ITEM_UPDATE_FAILED"
      required:
        - status
        - error
        - error_code
      example:
        status: "error"
        error: "A generic item error occurred."
        error_code: "ITEM_GENERIC_ERROR"

  responses: # Reusable response components
    UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Authentication required."
            error_code: "UNAUTHORIZED"
    ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "You do not have permission to manage items."
            error_code: "FORBIDDEN"
    NotFoundError:
      description: Not Found - The requested item could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "The requested item was not found."
            error_code: "RESOURCE_NOT_FOUND"

  securitySchemes:
    oAuth2:
      type: oauth2
      description: OAuth 2.0 Authentication for securing API endpoints.
      flows:
        clientCredentials:
          tokenUrl: https://api.ringer.tel/v1/auth/token
          scopes:
            read: Read access to API resources
            write: Write access to API resources
            admin: Administrative access.
