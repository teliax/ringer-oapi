# THIS IS A PARTIAL OPENAPI FILE
# This file contains path objects intended to be referenced by main.yaml
# The following structure is added for standalone validation purposes only

openapi: 3.0.3
info:
  title: Ringer Business API - Password Management
  description: |
    Manage password reset and recovery for Ringer Business accounts.
    
    To sign in, users need to supply their username and password. If a user forgets their password,
    they can reset it using this API. The process involves:
    
    1. The user supplies their email address
    2. The system emails a password reset link with a token
    3. The user submits the token along with a new password
    
    Users can simply use the password reset link in their email to change their password,
    or alternatively, grab the token from the URL and submit it through this API.
    
    ## Authentication
    Password reset endpoints do not require authentication as they're used by users
    who cannot authenticate due to forgotten passwords.
  version: 1.0.0
  license:
    name: MIT License
    url: https://github.com/teliax/ringer-oapi/blob/main/LICENSE
  contact:
    name: Ringer API Support
    url: https://docs.ringer.io/
    email: support@ringer.io

servers:
  - url: https://api.ringer.io/v1
    description: Production server
  - url: https://api.staging.ringer.io/v1
    description: Staging server

tags:
  - name: Forgot Password
    description: "To sign in the user needs to supply the username and password. If the user forgets their password they can reset their password. To reset the password the user can supply their email and the API emails a password reset link. One can simply use the password reset link in their email to change their password. Otherwise, one can grab the token from the url and submit it in the PUT route."

paths:
  /password:
    post:
      tags:
        - Forgot Password
      summary: Forgot Password
      description: Submit your email address to receive a password reset link.
      operationId: forgot_password
      security: []  # No authentication required for password reset request
      requestBody:
        description: Email Address
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordParams'
      responses:
        '201':
          description: Reset password token sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResponse'
        '400':
          description: Bad Request Parameters or Validation Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /password/reset:
    put:
      tags:
        - Forgot Password
      summary: Reset Password
      description: Reset your password using the token that was emailed to you.
      operationId: reset_password
      security: []  # No authentication required for password reset
      requestBody:
        description: Reset Password Information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordParams'
      responses:
        '200':
          description: Password successfully reset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
        '400':
          description: Bad Request Parameters or Validation Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Invalid reset token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    ForgotPasswordParams:
      required:
        - email
      properties:
        email:
          type: string
          format: email
          description: Email address associated with your account
          example: "user@example.com"
    
    ForgotPasswordResponse:
      type: object
      properties:
        status:
          type: string
          description: Status of the password reset request
          enum: [success]
          example: "success"
        message:
          type: string
          description: Message describing the action taken
          example: "If an account exists with that email, a password reset link has been sent."
    
    ResetPasswordParams:
      required:
        - token
        - password
        - password_confirmation
      properties:
        token:
          type: string
          description: Token received via email for password reset
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        password:
          type: string
          format: password
          description: New password
          example: "NewSecurePassword123!"
        password_confirmation:
          type: string
          format: password
          description: Confirmation of new password
          example: "NewSecurePassword123!"
    
    ResetPasswordResponse:
      type: object
      properties:
        status:
          type: string
          description: Status of the password reset
          enum: [success]
          example: "success"
        message:
          type: string
          description: Message describing the action taken
          example: "Your password has been reset successfully."
    
    Error:
      type: object
      properties:
        status:
          type: string
          description: Error status
          example: "error"
        error:
          type: string
          description: Error message
          example: "Invalid input parameters"
        error_code:
          type: string
          description: Error code for machine processing
          example: "INVALID_INPUT"
      required:
        - status
        - error
