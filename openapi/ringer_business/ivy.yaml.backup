swagger: "2.0"
info:
  description: |-
    IVY is a turnkey, private-label solution that enables resellers and integrators to sell both SIP trunks and Hosted PBX features to their customers. IVY is unique in that the reseller is able to set prices and create plans while IVY does all of the billing.
    The IVY Customer API is organized around REST. The API uses resource-oriented URLs, and uses HTTP response codes to indicate API errors. We use built-in HTTP features, like HTTP authentication and HTTP verbs, which are understood by off-the-shelf HTTP clients. We support cross-origin resource sharing, allowing you to interact securely with our API from a client-side web application (though you should never expose your secret API key in any public website's client-side code). JSON is returned by all API responses, including errors.
  version: "2.0"
  title: Ivy Customer API Reference Version 2.0
  contact:
    name: Gaurav Gaglani
    email: gaurav.gaglani@teliax.com
host: virtserver.swaggerhub.com
basePath: /Teliax/ivy/2.0
tags:
- name: Authentication
  description: |-
    To authenticate the client applications IVY API uses OAtuh 2.0. The Grant Flow that are allowed are:
      - password
      - client_credentials
    OAuth 2 is an authorization framework that enables applications to obtain limited access to user accounts on an HTTP service, such as Google, Facebook and GitHub.OAuth 2 provides authorization flows for web and desktop applications, and mobile devices. The `client_id` and `client_secret` carry many privileges, so be sure to keep them secure! Do not share your secret API keys in publicly accessible areas such as GitHub, client-side code, and so forth. IVY API follows https://tools.ietf.org/html/rfc6749 RFC.
    P.S. The authentication using the `grant_flow` - `client_credentials` is used only in sepcial cases and is controlled by the System Administrator.
- name: Sign Up
  description: |-
    To use the IVY system the Customers could directly register with the system. Customers can register with their basic information like:
      Company Name
      Contact Information like:
        Email
        Street Address
        Country
        City
        State/Province
        Postal Code
        Contact Number
- name: Confirmation
  description: Once a Customer registers or is added to the IVY Platform the user of the account needs to confirmed before their account becomes operational. After registration the confirmation_token can be passed on to the customer. Once the account is confirmed through the account becomes operational.
- name: Forgot Password
  description: "To sign in the user needs to supply the username and password. If the user forgets their password they can reset their password. To reset the password the user can supply their email and the API emails a password reset link. One can simply use the password reset link in their email to change their password. Otherwise, one can grab the token from the url and submit it in the PUT route."
- name: Users
  description: |-
    Users are the people who interact with the IVY system. Users have predefined roles with different permissions.
    Administrators can
      Access billing information
      Request payouts
      Add or change price decks and plans
      Manage users
    Users can
      View account activity
      View existing price decks
- name: Statements
  description: "You can view your account statements (receipts) here. Statements are generated at the end of your previous service interval (e.g., 2014-11-25 to 2014-12-25)."
- name: Plans
  description: |-
    All accounts have a plan, even if it's just the default "tryout" plan. Your plan, included packages, add-on packages, usage, and monthly pricing are displayed here. Plans are made up of included and optional packages. The price you set on a plan will cover all included packages. Optional packages can be added or removed at any time and each optional package has its own cost, separate from the plan price.
    Plans usually provide you with additional calling features or calling minute usage for a lower price than what you would pay individually. Since plans allow a certain amount of features or minutes to be used during your billing cycle you should analyze your usage and select a plan that best suits your needs. In some cases it could make more sense to use your account without a plan and instead be charged the individual rates.
    If you add a new plan at any time in your billing cycle your account will be charged the full amount of the plan. If you're changing a plan, it's best to change it just before the end of your billing cycle.
    Some plans and add-on packages can be removed at any time. Others can only be removed by Customer Support. The resources provided will remain on your account until the next billing cycle. Removing a plan only removes associated resources at the next billing cycle and not the calling features themselves.
- name: Payments
  description: |-
    Payment methods are used to pay service charges. Once a payment method is added it needs to be verified.
    Making a payment You'll provide a payment amount to be paid. The results of the payment. The payment method with the highest priority will be used to make a payment. If multiple methods have the same priority, the order becomes alphabetical.
- name: Credit Cards
  description: |-
    Payment methods are used to pay service charges. You can add the information to authorize your payment method here. Upon successful authorization the payment method can be used to make payments.
    Verifying your new card 1. Once your card has been added, it will need to be verified. The system will automatically make an authorization charge between $1.00 and $2.00 on your credit card. 2. Check your bank statement for the verification charge amount. The charge will display as "Telecommunication Service." Tip: Since the verification charge is an authorization-only charge it might show up on the "Holds" section of your online banking account. 3. The verification amount is sent to the system through a Webservice call.
- name: Items
  description: "Each phone system feature is considered an item and each item has an associated cost. This is what your customer will pay to use the feature if it is not included in a package or plan, or if their usage exceeds the included quantity."
- name: Packages
  description: |-
    A package multiplies items to a defined quantity, either static or unlimited depending on the resource type.
    Included packages Provide a quantity of a specific rate item which is included in the plan subscription cost. Included resources are made available when the plan is added to a customer account and are renewed monthly. Included packages do not have an individual cost, instead a Plan Subscription package is created when finalizing your plan. Included packages cannot be removed from a customer account.
    Optional packages Provide a quantity of a specific rate item for an additional monthly fee. Optional packages have an individual cost, separate from the Plan Subscription cost. Customers can add and remove individual packages as needed if the package is removeable.
    After plan approval, only Optional packages can be changed. Included packages cannot be changed after plan approval. It is possible for a customer's usage to exceed the included cost of the plan subscription. You are responsible for usage exceeding the plan subscription cost.
- name: Timezones
  description: While configuring the phone system to set timezone for an object. The timezone standards that need to be followed are IANA tz database (https://www.iana.org/time-zones). If you need the timezone collection on the client side there is a utility endpoint for it.
- name: Country Codes
  description: "While setting up a Site/PBX the customer can setup Permitted Outbound Country Codes. Outbound Country Codes must also be explicitly set, including separate zones for +1 US, +1 Canada, and +1 outside of the US and Canada as specified by area code along with any other international destinations you need calling to. It is strongly recommended that you only add destinations you need to dial to reduce your exposure to international toll fraud. Adding any additional or all available destinations will greatly increase your exposure to international toll fraud. If you need the country code collection on the client side there is a utility endpoint for it."
- name: Thin Clients
  description: "A thin client is the node that handles call processing for this site. If you're not sure which one to use, contact Support. If you need the thin client collection on the client side there is a utility endpoint for it."
- name: Phone Number Search
  description: |-
    Phone Number Search is used for searching for Phone Numbers. Allowable criteria Area code (NPA), like 303 for Denver, 480 for Phoenix, etc. City, ST like Denver, CO or Phoenix, AZ ST for State, like CO or AZ
    If you need phone numbers on the client side there is a utility endpoint for it.
- name: Templates
  description: |-
    Templates provide an easy way to configure resources when a new seat needs to be added to the customer accounts. The users can create more than one or more templates with the different types of resources. Here are examples:
      normal employee:  phone number, ring group, 2 devices, voicemail
      receptionist: 1 device and failover destination
      sales: phone number, ring group, 1 device, voicemail
      common area phone: device
- name: Sites
  description: |-
    Sites are collections of features and can be used to provide logical separation between different physical locations, departments, or anywhere you might need different phone system behaviors or features within the same account. Sites have a DNS name and are tied to a thin client which is where the actual call processing takes place. After creating a new site, you'll describe how your phone system should act and how phone calls can be routed by adding features and linking them together.
    Sites can be active or inactive. Inactive sites cannot place or receive phone calls. This is also true for international calling, but in some cases international will be disabled at the account level and you will need to request that international dialing be enabled. Sites have an ACL (Access Control List) and an Outbound Country Code list for security. When properly configured, an ACL prevents unauthorized networks from connecting to your system. By default, all network traffic and all outbound destinations are blocked. Outbound Country Codes must also be explicitly set, including separate zones for +1 US, +1 Canada, and +1 outside of the US and Canada as specified by area code. A site has a default caller ID name and number which is set when an outbound call is placed from a SIP device. Sites have their own hold music, which can be uploaded on creation or when editing your site. You can listen to the existing hold music or save it when editing your site. Uploads can be in any audio or video format under 10MB. A site has a unique DNS name which acts as a subdomain of the web portal. For example, if you are logged in to "portal.example.com" and your site had a DNS extension of "site1" then your site would live at "site1.portal.example.com" and you would place and receive SIP calls via the same address. If you no longer need a site you can delete it. This will delete the site and all associated features and cannot be undone. Be careful!
    Calling features You can add calling features to your site and choosing the feature you'd like to add. Features are specific to a site, so if you add a phone number or device to the current site, it won't show up on other sites. You're charged in accordance with your plan, so check your Plans and Rates pages to find out the cost of a particular item before you're surprised by unexpected charges.
    Calling features can be removed next to the feature to be removed. Deleting a calling feature can't be undone, and deletes all routing information and recordings associated with the feature. Be careful!
    Calling features are only displayed when that feature exists on your site. For example, if you don't have any Conference Rooms the Conference Room section will not be displayed.
    When linked items are deleted you might notice that the item you deleted is still referenced in another section. For example, if you delete a Device that is used in a Menu, the Menu will show that it's still linked to the device until the page is reloaded. If there are a lot of changes made you can also perform a Force Rebuild, which will synchronize your site with the associated thin client and refresh the Site you're viewing.
- name: Locations
  description: As a customer I should be able to have multiple locations within my Site. Location lets user one to one mapping between a location and E911. Multiple Devices and SIP Trunks are mapped to a Lcoation.
- name: Device
  description: |-
    Devices provide a connection between a physical IP phone (like the one on your desk, computer, smartphone, etc.), the phone system, and associated calling features. Devices can also act as endpoints for a call routing path. For example, a phone number can be routed to a device, or a device can be part of a ring group. Users can also place phone calls from their devices to internal and external endpoints. In the simplest case, a device ties a physical IP endpoint to a logical endpoint on your phone system.
    Additional features available for devices include a timeout and failover destination, unique Caller ID, and a specific Access Control List.
    Physical device configuration SIP devices vary greatly by manufacturer. As long as the device is SIP-compliant you can configure it with the Login and Password for the Device to register to the associated Site. If you aren't sure how to configure your device please consult technical support or the device manufacturer.
    Call parking Access call parking by pressing *9 (Star-9) while on an active call. The system will place the caller on hold, read back an extension number from 1000-1999, and hang up your end of the call. The caller is now parked on an extension with hold music until retrieved by dialing *9 (Star-9) while not on a call and entering the extension of the parked caller. Parked calls cannot be picked up on a different site than they were parked on. Call parking cannot be accessed on inbound calls that traversed a ring group.
    Dialing rules When calling the US/Zone 1 it is not necessary to enter a 1 before the number. Calling international requires a 011 or + to be sent before the number. Calls sent to a device will be sent with the username in the SIP INVITE.
    Channel limiting Devices can have between 1 and 25 channels. A channel is a "line" that your phone uses to place or receive a call. Typically, one call requires one channel.
    Allowed codecs PCMU (G.711u), PCMA (G.711a), G.722, and GSM which are all recommended at 20ms ptime.
- name: Conference Room
  description: |-
    Conference Rooms allow multiple users to call in to the same endpoint for group conversations or meetings. Conference rooms consist of one moderator and one or more participants. Conference Rooms can be created on-the-fly or the same Conference Room can persist. For example, a weekly conference call can use the same Conference Room and PIN.
    Conference rooms are accessed by a phone number or extension or as a menu option. If a greeting is present, it will play before the caller is prompted to enter their PIN. Callers must enter a PIN to join the conference. Hold music is played until the Moderator has joined the conference. Different tones indicate if a caller has joined or left the conference.
    Conference Room call controls
      1 is Talk Volulme Down
      2 is Normalize Talk Volume
      3 is Talk Volume Up
      4 is Listen Volume Down
      5 is Normalize Listen Volume
      6 is Listen Volume Down
      0 is Mute
      * is Quiet (No audio at all)
      # is Hang Up
    Once the Moderator has joined the conference they have a level of control over "Background noise level" (Energy) which can be used to isolate or clarify all voices.
    Moderator controls
      7 is Energy Down
      8 is Equalize Energy
      9 is Energy Up
    The Profile option is not currently in use.
    *When using custom hold music please ensure that you have the proper license to use the custom music.
- name: E911
  description: |-
    e911, or Enhanced 911, allows PSAP (Public Safety Answering Point) operators to quickly locate the calling location in the event of an emergency. While not required, it is highly recommended to enable this service. All PSTN-inteconnected providers are federally mandated to connect all 911 calls regardless of e911 information availability.
    When creating or updating an e911 entry the data you provide will be geocoded and verified. Enter as much specific address information as possible. If your address isn't found, the closest matches will be shown as suggestions. If e911 service is not available in your area you will be notified.
    The Display Name is the name you'll see on the Site index. An e911 is tied to a specific site, so if you have multiple physical locations that require e911 they would require separate sites. The Caller ID name will be displayed on outbound 911 calls.
    A DID (Phone number) is automatically assigned to your new location. When you place a 911 call from any device the number is transmitted as the ANI (Caller ID) and if the PSAP calls the number back it will ring all devices attached to the site.
    If you place a 911 call and there is no address information set your call will be routed to an emergency call center who will request your address information and then transfer you to the correct PSAP.
    Testing e911 To test your e911 information you can dial 933 from your device for an address readback. If you wish to place a test call to 911 please call your local non-emergency number first and request instructions on placing e911 test calls before dialing 911.
- name: Extension
  description: "Extensions are user-created numbers (either 2 or 4-12 digits in length) for use within the phone system. Extensions are similar to Phone Numbers and provide a start point for call routing. Extensions can point to any routeable object. For example, you could assign extensions to different phones, menus, or ring groups. Extensions only exist within a site, so they cannot be called from other sites on the same account or from outside without a caller first being routed through a menu."
- name: Fax Machine
  description: |-
    Fax Machines, or Fax to Email, enables users to receive faxes in a PDF format to an email inbox. They are only for receiving faxes and cannot send outbound faxes.
    To work properly a fax machine must have a phone number pointed to it. The remote fax machine dials the number just like any other fax machine. The fax is converted to PDF and emailed to the notification email address.
    There are no additional settings to configure. Faxes are received using the most up-to-date technology and in many cases offer the same performance as a standard analog fax machine.
- name: Forward
  description: |-
    Forwards act as an exit point in a call routing path. They allow users to direct calls to an external phone number, for example a cell phone or landline. Forwards can have a timeout and fail over destination.
    Forwards require a name used to identify it in the phone system, and a destination which can be a domestic or international* phone number.
    You can set a timeout, which is how long the forward will be tried before disconnecting or failing over to a specified fail over destination. If no fail over is specified the caller will be disconnected after the timeout is reached or at 120 seconds, whichever comes first.
    Forwards are accessed either directly (e.g., via a phone number or extension) or indirectly (e.g., in a menu or as part of a ring group). The forward will ring until it is answered or until the timeout is reached. There are no additional settings or features.
    *International calling must be enabled on your account and site for a forward to an international destination to work.
- name: Menu
  description: |-
    Menus, or auto attendants, present callers with a greeting and multiple options for call routing. A menu is similar to an IVR (Interactive Voice Repsonse) but does not offer the same level of functionality as it cannot provide information other than a pre-recorded message. A common use for menus is to allow a small business to route calls to various departments, like Sales, Support, and Administration. Combined with a schedule a menu can provide a department or small business with a greater level of control over call routing.
    Menus should have a greeting that states the options available to the user, corresponding to the options selectable in each drop-down menu. Menus can also accept input in the form of an extension. The extension must exist on the same site as the menu.
    A greeting can be uploaded to the web application or recorded by calling it (via an extension or phone number pointed to the menu), pressing *, and entering the PIN set on this page.
    Uploaded recordings can be in any audio or video format under 10MB.*
    *Changes to the greeting might not be reflected in your browser or on your menu for several minutes. If changes still aren't reflected on the menu a force-refresh or clearing your browser cache will usually solve the problem.
- name: Phone Number
  description: |-
    Phone numbers provide a way for callers to reach your phone system from the PSTN (Public Switched Telephone Network). Phone numbers provide an entry point to your phone system and site and are often the start of a call routing path, terminating to a conference room, device, fax machine, forward, menu, SIP trunk, ring group, schedule, or voice mail box.
    Provide a name for the new phone number (e.g., Sales, International Support) and search for a phone number by entering the area code, state, or city and state where you need a number and pressing Search. You can also search for international phone numbers and toll-free phone numbers.
- name: Ring Group
  description: |-
    Ring Groups will ring multiple destinations simultaneously. For example, callers can dial a single number directed to a ring group to ring your desk phone and cell phone at the same time. The call will be directed to whichever destination answers first*. Placing a device or forward in a ring group will cause it to ring when the ring group is called.
    This is a "race condition" scenario. The first answer will "win" the race and stop all other destinations from ringing. This could include a live answer, a cell phone voicemail (for example, a cell phone that is off or out of service area) or a phone system which usually answer immediately. Think about the destinations you are ringing in the ring group. If a specific destination will always answer within the first ring it might not be wise to include it. Also, some external destinations (forwards) may take 3-6 seconds to actually begin ringing, which can subvert your timeout settings.
- name: Schedule
  description: |-
    Schedules provide time-of-day routing. Based on the time of day and the conditions provided in the schedule callers will be routed to different destinations. For example, sending calls to a menu during business hours and to voicemail or a forward after hours.
    Schedules are used "in-between" other objects, like between a phone number and a menu. You could set a schedule to ring your desk and home ring group during the day and your cell phone at night. You can also cascade a schedule into another schedule, for example different hours Monday-Friday, Saturday, and Sunday. Schedules only affect routing logic, they do not have a direct influence on the objects they route to or are routed from.
- name: Sip Trunk
  description: |-
    A SIP trunk allows users to connect an external, self-hosted, self-maintained phone system or IP PBX to the phone system. Using a SIP trunk is not recommended as it does not allow users to take advantage of the existing features on a site and the associated hardware is typically prone to being compromised by external entities.
    SIP trunks require a name used to identify it on the system, and a login and password used in SIP registration and call authentication.
    An optional field is provided for Contact IP address, which takes the form of an IP address and a port, like 63.211.239.14:5060. When set, the system will bypass any registration and send all inbound calls to the provided address and port. The default SIP port is 5060 and the port is required.
    INVITEs sent to SIP trunks will be sent with DNIS (Dialed Number Information Service) in the format: 1NPANXXXXXX. This cannot be changed.
    Additional features available for SIP trunks include a timeout and failover destination, unique Caller ID, and a specific Access Control List.
    Channel limiting SIP trunks can have up to 100 channels. A channel is a "line" that your phone uses to place or receive a call. Typically, one call requires one channel.
    Disable comfort noise If your hardware does not support RFC3389 Comfort Noise (RTP AVP 13 CN/8000) this can be disabled using the “Disable comfort noise” check box.
    Allowed codecs PCMU (G.711u), PCMA (G.711a), G.722, and GSM which are all recommended at 20ms ptime.
- name: Voice Mail Box
  description: |-
    Voice mail boxes allow callers to leave a voice message and have the recorded message sent to an email address. Voice mail boxes have a greeting which plays when the mail box answers. All messages are sent to the email address on file and then removed from the system. Messages left by callers are not stored on the system. Once a message has been sent to the notification address it is no longer accessible from the system.
    It is not currently possible to record a greeting or check voice messages by calling a voice mail box.
    *Uploaded recordings can be in any audio or video format under 10MB.
- name: Time zones
  description: "A time zone, following the format defined in the IANA tz database (https://www.iana.org/time-zones). Valid examples are America/New_York and Etc/UTC. Do not use ambiguous, non-qualified values such as EST or GB. Before including this type in your interface, please consider whether it is actually appropriate to convey time zone information with your type. It is almost always the case that this should be transformed from UTC at the time of display to the user; this type might therefore be most associated with user-preference APIs."
- name: Account
  description: You can manage your companys profile. As a user can you can be an administrator or a user role. In the user role you can just update your own information. This is only allowed if you are in the administrator role you can add change preferred balance and minimum recharge preferences as well as your address. In addition you can also add other users.
- name: Seats
  description: "Seats allow account administrators easily configure call features/switchables when a new user gets added to the company. Based on the type of user that joins the organization, the account administrator will select a template which has the call features defined. Once the template, site and user are selected, the system will define the switchables or features in one transaction. If any erorr occurs in the meantime then all the features created are rolledback."
- name: Call Blocking
  description: Call blocking allow customers to block inbound calls to certain extensions. The numbers are blocked per site/instance. Once the number is added to the list the dialer will receive a busy tone.
schemes:
- https
consumes:
- application/json
- multipart/form-data
- application/x-www-form-urlencoded
produces:
- application/json
security:
- password:
  - read
  - write
- client_credentials:
  - read
  - write
paths:
  /oauth/token:
    post:
      tags:
      - Authentication
      summary: Fetch the access token
      description: |-
        To access the IVY API the client needs to be authenticated first. The authentication happens through OAuth 2.0 using the `password` and `client_credentilas` grant flows:
        -- `grant_type` - `password`-- The OAuth2.0 authentication scheme is Grant Type: Resource Owner Password Credentials or Refresh Token With the resource owner password credentials grant type, the user provides their service credentials (username and password) directly to the application, which uses the credentials to obtain an access token from the service. This method is basically the sign in endpoint.
        The attributes passed for fetching the access token will be:
          => grant_type Value: password
          => username
          => password
          => client_id
          => client_secret

        The obtained access token will be valid only for 2 hours. Then the new access_token can be obtained by refresh_token. The attributes passed for fetching the new access_token using refresh_token are:
          => grant_type Value: refresh_token
          => refresh_token
          => client_id
          => client_secret

        ------------
        -- `grant_type` - `client_credentials`-- The OAuth2.0 authentication scheme is Grant Type: Resource Client Credentials. The client application provides the `client_id` and `client_secret` and the user is issued a token. Please note that the refresh token is not issued in the response once the token expires.
      operationId: fetch_access_token
      consumes:
      - application/json
      parameters:
      - in: body
        name: OAuth2.0 Params
        description: "Grant Type: Resource Owner Password Credentials parameters"
        required: true
        schema:
          $ref: '#/definitions/LoginParams'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AccessToken'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /oauth/revoke:
    post:
      tags:
      - Authentication
      summary: Logout
      description: |-
        To access the IVY API the client needs to be authenticated first. The authentication happens through OAuth 2.0.
        To sign-out this can be the sign-out endpoint.
      operationId: Logout
      consumes:
      - application/json
      parameters:
      - in: body
        name: Logout Params
        description: "Pass the token, client_id and client_secret in the request body."
        required: true
        schema:
          $ref: '#/definitions/LogoutParams'
      responses:
        "200":
          description: Logout Consumer. No Content
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /sign-up:
    post:
      tags:
      - Sign Up
      summary: Sign Up
      description: Sign Up as a Customer
      operationId: sign_up
      consumes:
      - application/json
      parameters:
      - in: body
        name: Customer Registration Parameters
        description: Customer Registration Attributes
        required: false
        schema:
          $ref: '#/definitions/CustomerRegistrationParams'
      responses:
        "201":
          description: Customer Created.
          schema:
            $ref: '#/definitions/CustomerRegistration'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find account record
          schema:
            $ref: '#/definitions/error'
  /confirmation:
    post:
      tags:
      - Confirmation
      summary: Confirm user account
      description: Once a user acount registers in IVY. Their account needs to be confirmed. A user account can be confirmed by passing the confirmation token. If a valid token is passed the account will be confirmed.
      operationId: confirm_user_account
      consumes:
      - application/json
      parameters:
      - in: body
        name: Confirmation Parameters
        required: true
        schema:
          $ref: '#/definitions/ConfirmationParams'
      responses:
        "201":
          description: User confirmation message
          schema:
            $ref: '#/definitions/Confirmation'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find account record
          schema:
            $ref: '#/definitions/error'
  /password:
    post:
      tags:
      - Forgot Password
      summary: Forgot User Password
      description: Enter your email used to login to your account. The response will email you a password reset link.
      operationId: forgot_password
      consumes:
      - application/json
      parameters:
      - in: body
        name: Email Address
        description: Email Address Attribute
        required: false
        schema:
          $ref: '#/definitions/ForgotPasswordParams'
      responses:
        "201":
          description: Reset Password token
          schema:
            $ref: '#/definitions/ForgotPassword'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find account record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Forgot Password
      summary: Reset Password
      description: With a valid confirmation token and you can set your new password for your account.
      operationId: reset_password
      consumes:
      - application/json
      parameters:
      - in: body
        name: Reset Password Params
        description: Reset Password Attributes
        required: false
        schema:
          $ref: '#/definitions/ResetPasswordParams'
      responses:
        "200":
          description: Reset Password Status Message
          schema:
            $ref: '#/definitions/ResetPassword'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find account record
          schema:
            $ref: '#/definitions/error'
  /account:
    get:
      tags:
      - Account
      summary: Account Details
      description: Details of your account
      operationId: account_details
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Account'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Account
      summary: Update Account
      description: Update Account Information. This operation is only allowed if you are in the administrator role.
      operationId: update_account
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - in: body
        name: Account Parameters
        description: Account Attributes
        required: true
        schema:
          $ref: '#/definitions/AccountParams'
      responses:
        "200":
          description: Update Account Information and Organization Details
          schema:
            $ref: '#/definitions/Account'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find account record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Account
      summary: Close an Account
      description: Close Account. This operation is only allowed if you are in the administrator role.
      operationId: close_account
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      responses:
        "204":
          description: Account Closed. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    patch:
      tags:
      - Account
      summary: Activate Account
      description: Activate Account. This operation is only allowed if you are in the administrator role.
      operationId: activate_account
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      responses:
        "200":
          description: Activate an Inactive account once the account is ready for operation.
          schema:
            $ref: '#/definitions/Account'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "403":
          description: Forbidden request.  This error will occur if the Activation is tried on an Active account
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find account record
          schema:
            $ref: '#/definitions/error'
  /addresses/{id}:
    put:
      tags:
      - Account
      summary: Update Account Address
      description: Update the contact settings for your account. This includes your contact emails and address. If you are in the user role you. This operation is not permitted.
      operationId: update_account_address
      consumes:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the Address
        required: true
        type: integer
      - in: body
        name: Address Parameters
        description: Address Attributes
        required: true
        schema:
          $ref: '#/definitions/AddressParams'
      responses:
        "200":
          description: Update Contact Settings.
          schema:
            $ref: '#/definitions/Address'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find account record
          schema:
            $ref: '#/definitions/error'
  /users:
    get:
      tags:
      - Users
      summary: List Users for a Partnership or a User Account
      description: Returns a list of Users for your account. The Users are returned in sorted order by name.
      operationId: list_users
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      responses:
        "200":
          description: Array of Users for your Organization
          schema:
            $ref: '#/definitions/UserList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Users
      summary: Add a User to your Organization
      description: |-
        To configure your Account. You can add your organizations' team members can be added to make the configuration changes.
        Users have predefined roles with different permissions. Administrator and User permissions can be assigned appropriately. Once the User is created. The User will receive an email confirming their account and the account can be confirmed by making appropriate web service calls.
      operationId: add_partnership_user
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - in: body
        name: User Parameters
        description: User Attributes
        required: true
        schema:
          $ref: '#/definitions/UserParams'
      responses:
        "201":
          description: User Created
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /users/{id}:
    get:
      tags:
      - Users
      summary: User Details
      description: Retrieves the details of a user that has been added. Supply the unique user_id that belong to a organization. The same information is returned when creating a User.
      operationId: show_user
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of the User
        required: true
        type: integer
      responses:
        "200":
          description: User Detail
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Users
      summary: Update a User
      description: Updates the specified user by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      operationId: update_user
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of User
        required: true
        type: integer
      - in: body
        name: User Parameters
        description: User Attributes
        required: true
        schema:
          $ref: '#/definitions/UserParams'
      responses:
        "200":
          description: User Updated
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Users
      summary: Delete User
      description: Permanently deletes a user. This action cannot be undone.
      operationId: delete_user
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of the User
        required: true
        type: integer
      responses:
        "204":
          description: User Deleted. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /statements:
    get:
      tags:
      - Statements
      summary: List of Statements
      description: "You can view your account statements (receipts) here. Statements are generated at the end of your previous service interval (e.g., 2014-11-25 to 2014-12-25)."
      operationId: list_statements
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      responses:
        "200":
          description: Array of Statements
          schema:
            $ref: '#/definitions/StatementList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /statements/{id}:
    get:
      tags:
      - Statements
      summary: Statement Details
      description: "You can view your account statement detail. Statement is generated at the end of your previous service interval (e.g., 2014-11-25 to 2014-12-25)."
      operationId: show_statement
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of the User
        required: true
        type: integer
      responses:
        "200":
          description: Statement Detail
          schema:
            $ref: '#/definitions/Statement'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /credit-cards:
    get:
      tags:
      - Credit Cards
      summary: List Credit Cards
      description: Retrieve information about all Credit Cards currently for your Customer account.
      operationId: list_credit_cards
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      responses:
        "200":
          description: Array of Credit Cards
          schema:
            $ref: '#/definitions/CreditCardList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Credit Cards
      summary: Create a new Credit Card
      description: Add a new Credit Card to the Account
      operationId: create_credit_card
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - in: body
        name: Credit Card Parameters
        description: Credit Card Attributes
        required: true
        schema:
          $ref: '#/definitions/CreditCardParams'
      responses:
        "201":
          description: Credit Card Created
          schema:
            $ref: '#/definitions/CreditCard'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /credit-cards/{id}:
    get:
      tags:
      - Credit Cards
      summary: Credit Card Details
      description: "Retrieve information about a Credit Card. The information returned is: 1. name 2. priority 3. active 4. expired 5. verified"
      operationId: show_credit_card
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of the credit card
        required: true
        type: integer
      responses:
        "200":
          description: Credit Card Detail
          schema:
            $ref: '#/definitions/CreditCard'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Credit Cards
      summary: Update Credit Card
      description: Update Credit Card
      operationId: update_credit_card
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of Credit Card
        required: true
        type: integer
      - in: body
        name: Credit Card Parameters
        description: Credit Card Attributes
        required: true
        schema:
          $ref: '#/definitions/CreditCardUpdateParams'
      responses:
        "200":
          description: Credit Card Updated
          schema:
            $ref: '#/definitions/CreditCard'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Credit Cards
      summary: Delete Credit Card
      description: Delete Credit Card
      operationId: delete_credit_card
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of the Credit Card
        required: true
        type: integer
      responses:
        "204":
          description: Credit Card Deleted. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /credit-cards/{id}/verify:
    patch:
      tags:
      - Credit Cards
      summary: Verify Credit Card
      description: "When a credit card is added to your account, a small amount will be charged to the card. To verify that you are the owner of the credit card. The amount should match the amount charged."
      operationId: verify_credit_card
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of the credit card
        required: true
        type: integer
      - name: amount_in_dollars
        in: formData
        description: "When a credit card is added to your account, a small amount will be charged to the card. Enter that amount here to verify that you are the owner of the credit card."
        required: true
        type: integer
      responses:
        "200":
          description: Credit Card Detail
          schema:
            $ref: '#/definitions/CreditCard'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /payments:
    get:
      tags:
      - Payments
      summary: List Payments
      description: Retrieve information about the most recent payments in a paginated list. Information of the last 10 payments is fetched.
      operationId: list_payments
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: page_size
        in: query
        description: The number of customer entries in the resultset. There would be system default unless passed.
        required: false
        type: integer
      - name: page
        in: query
        description: The first index of the entire list of customer entries to return in the response.
        required: false
        type: integer
      responses:
        "200":
          description: Array of Payments
          schema:
            $ref: '#/definitions/PaymentList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Payments
      summary: Create Payment
      description: Make a Payment
      operationId: create_payment
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: amount_in_dollars
        in: formData
        description: Amount of Payment
        required: true
        type: integer
      responses:
        "201":
          description: Payment Created. Payment Details.
          schema:
            $ref: '#/definitions/Payment'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /items/{id}:
    put:
      tags:
      - Items
      summary: Update Item for Price Deck
      description: Update indivudual A la Carte item of the Price Deck. Any parameters not provided will be left unchanged. If you are a Custmer account. This operation should not be permitted.
      operationId: update_item
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of the Item
        required: true
        type: integer
      - in: body
        name: Package Parameters
        description: Package Attributes
        required: true
        schema:
          $ref: '#/definitions/ItemParams'
      responses:
        "200":
          description: Item Detail
          schema:
            $ref: '#/definitions/Item'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /plans:
    get:
      tags:
      - Plans
      summary: List Plans
      description: List Plans associated to a Customer Account. Only one plan can be associated with a customer. If no plan is assigned then a empty collection is returned.
      operationId: list_plans
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      responses:
        "200":
          description: Array of Plans
          schema:
            $ref: '#/definitions/PlanList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /plans/available:
    get:
      tags:
      - Plans
      summary: List Plans
      description: List Plans available to a Customer Account.
      operationId: list_available_plans
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      responses:
        "200":
          description: Array of Plans
          schema:
            $ref: '#/definitions/PlanList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /plans/remove:
    patch:
      tags:
      - Plans
      summary: Remove Plan
      description: Remove your Current Plan from the Customer account. If you are Partnership. This operation is not permitted.
      operationId: remove_plan
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      responses:
        "204":
          description: No Content.
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find plan record
          schema:
            $ref: '#/definitions/error'
  /plans/change-plan:
    patch:
      tags:
      - Plans
      summary: Schedule Plan Change for an Account
      description: Schedule a plan to be added to your account at the end of the current billing period.
      operationId: schedule_change_plan
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: formData
        description: ID of the Plan
        required: true
        type: integer
      responses:
        "200":
          description: Plan Detail
          schema:
            $ref: '#/definitions/Plan'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find plan record
          schema:
            $ref: '#/definitions/error'
  /plans/{id}:
    get:
      tags:
      - Plans
      summary: Plan Detail
      description: Retrieve information of the required plan. Supply the unique id for the plan you need details for.
      operationId: show_plan
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of the plan
        required: true
        type: integer
      responses:
        "200":
          description: Plan Detail
          schema:
            $ref: '#/definitions/Plan'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find plan record
          schema:
            $ref: '#/definitions/error'
  /plans/{id}/packages:
    get:
      tags:
      - Plans
      summary: List packages of a Plan
      description: List packages for the Plan. The packages collection are divided into 2 parts. 1. Included Packages 2. Optional Packages
      operationId: list_plan_packages
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of the Plan
        required: true
        type: integer
      responses:
        "200":
          description: Array of Packages
          schema:
            $ref: '#/definitions/PackagesList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find packages records
          schema:
            $ref: '#/definitions/error'
  /plans/{id}/add-package:
    patch:
      tags:
      - Plans
      summary: Add Package to the Plan
      description: Add a package to be added to your plan.
      operationId: add_plans_package
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of the plan
        required: true
        type: integer
      - name: package_id
        in: formData
        description: ID of the Package
        required: true
        type: integer
      responses:
        "200":
          description: Package Detail
          schema:
            $ref: '#/definitions/Package'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find plan record
          schema:
            $ref: '#/definitions/error'
  /plans/{id}/remove-package:
    patch:
      tags:
      - Plans
      summary: Remove the Package attached to a Plan
      description: Remove a package from your Plan.
      operationId: remove_plans_package
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of the plan
        required: true
        type: integer
      - name: package_id
        in: formData
        description: ID of the Package
        required: true
        type: integer
      responses:
        "204":
          description: Removed Package. No Content.
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find plan record
          schema:
            $ref: '#/definitions/error'
  /packages/{id}:
    get:
      tags:
      - Packages
      summary: Show Package for a Plan
      description: Retrieves the details of a Package that exists. Supply the unique id that belong to Plan.
      operationId: show_package
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of the Package
        required: true
        type: integer
      responses:
        "200":
          description: Package Detail
          schema:
            $ref: '#/definitions/Package'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find plan record
          schema:
            $ref: '#/definitions/error'
  /timezones:
    get:
      tags:
      - Timezones
      summary: List Timezones
      description: Retrieve a list of Timezones supported by the system.
      operationId: list_timezones
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      responses:
        "200":
          description: Array of Timezones
          schema:
            $ref: '#/definitions/TimezoneList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /country-codes:
    get:
      tags:
      - Country Codes
      summary: List Country Codes
      description: List of Country Codes
      operationId: list_country-codes
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      responses:
        "200":
          description: Array of Country Codes
          schema:
            $ref: '#/definitions/CountryCodeList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /call-records:
    get:
      tags:
      - Call Records
      summary: List Call Records
      description: "List of call records. If requestor is of Organization type Customer and Role type Admin, then the result set will contain all call records for the organization. If the requestor is of Organization type Customer and Role type User, then the result set will contain all call records for that user specifically, based on their phone number."
      operationId: list_call-records
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: start_time
        in: query
        description: "the start time should a datetime in the past, relative to the dataset you're expecting to query. This value is a string representation of a datetime. Example, if you want data between June 1, 2021 to June 30, 2021, input the following string as your value: \"2021-06-01T00:00:00\". IMPORTANT: you can only query for 30 days worth of data."
        required: true
        type: string
      - name: end_time
        in: query
        description: "the end time should a datetime in the past or now, relative to the dataset you're expecting to query. This value is a string representation of a datetime. Example, if you want data between June 1, 2021 to June 2, 2021, input the following string as your value: \"2021-06-02T00:00:00\". IMPORTANT: you can only query for 30 days worth of data."
        required: false
        type: string
      - name: "page[number]"
        in: query
        description: "pagination - select your page number. Minimum is 1, maximum is dynamic."
        required: true
        type: string
        default: "1"
      - name: "page[size]"
        in: query
        description: "pagination - select your desired results per page. Minimum is 1, maximum is 100."
        required: true
        type: string
        default: "30"
      - name: "sort[column]"
        in: query
        description: "sort by the following columns. `dni`, `dni_name`, `raw_ani`, `direction`, `answer_stamp`, `duration`, `customer_balance_adjustment`, `created_at`. If this query string param is ommitted, the default is `created_at`."
        required: false
        type: string
        default: created_at
      - name: "sort[type]"
        in: query
        description: "sort by either `ASC` or `DESC`. If this query string param is ommitted, the default is `DESC`."
        required: false
        type: string
        default: DESC
      - name: "filter[column]"
        in: query
        description: "filter by the following columns. `dni`, `dni_name`, `raw_ani`, `direction`, `answer_stamp`, `duration`, `customer_balance_adjustment`. If used, must supply filter[type] and filter[value]."
        required: false
        type: string
      - name: "filter[type]"
        in: query
        description: "filter types allowable are `greater_than` `less_than` `equal_to` `starts_with` `ends_with` `contains`. IMPORTANT: `starts_with` `ends_with` and `contains` can only be used with columns `raw_ani` or `dni`. If used, must supply filter[column] and filter[value]."
        required: false
        type: string
      - name: "filter[value]"
        in: query
        description: "filter value must be relative to column and type chosen. Example, one can fitler by column `raw_ani` with filter type `contains` and the filter value could be \"1800\". If used, must supply filter[type] and filter[column]."
        required: false
        type: string
      responses:
        "200":
          description: Array of Numbers and Locations
          schema:
            $ref: '#/definitions/CallRecordList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error_call_record'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /thin-clients:
    get:
      tags:
      - Thin Clients
      summary: List Thin Clients
      description: List of Thin Clients
      operationId: list_thin-clients
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      responses:
        "200":
          description: Array of Thin Clients
          schema:
            $ref: '#/definitions/ThinClientList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /phone-numbers/search:
    get:
      tags:
      - Phone Number Search
      summary: Search Phone Numbers
      description: "Search phone numbers available for assignment. Lookup international or US domestic phone numbers by selecting passing the `search_category` parameter. If you need the international number then then you will need to pass the country parameter. In this parameter you will need to pass the 3 character country code. The list of 'available' numbers can further be filtered by selecting the Area Code, City, State in the q parameter A list of maximum 500 numbers is returned."
      operationId: lookup_dids
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: search_category
        in: query
        description: Type of number international or US domestic number. Values - international | domestic
        required: true
        type: string
      - name: country
        in: query
        description: The 3 digit country code. The alphanumeric country code for Australia is AUS. Required when you need a international number
        required: false
        type: string
      - name: city
        in: query
        description: If you are looking for a US domestic number you can pass the city name for example city => Chicago
        required: false
        type: string
      - name: state_prov
        in: query
        description: If you are looking for a US domestic number you can pass the 2 charcter state code for example city => IL.  Please note this paramter is required only when searching US domestic numbers.
        required: true
        type: string
      - name: area_code
        in: query
        description: If you are looking for a US domestic number you can pass the area code of the number you are looking for example 312
        required: false
        type: string
      - name: npanxx
        in: query
        description: If you are looking for a US domestic number you can pass the npanxx of the number you are looking for example 312523. Also please keeo in mind the state_prov parameter is required for this search.
        required: false
        type: string
      - name: zip
        in: query
        description: 'If you are looking for a US domestic number you can pass the zip code you are looking for example 60601. Also please keeo in mind the state_prov parameter is required for this search.    '
        required: false
        type: string
      responses:
        "200":
          description: Array of Numbers and Locations
          schema:
            $ref: '#/definitions/NumbersAndLocations'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /templates:
    get:
      tags:
      - Templates
      summary: List Templates
      description: Retrieve information about account's templates. The sort order of the entries in the collection is ordered by name. The list returned is a paginated list.
      operationId: list_templates
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: page_size
        in: query
        description: The number of customer entries in the resultset. There would be system default unless passed.
        required: false
        type: integer
      - name: page
        in: query
        description: The first index of the entire list of customer entries to return in the response.
        required: false
        type: integer
      - name: all
        in: query
        description: True if fetch all templates in the system. Otherwise just fetch current accounts templates
        required: false
        type: boolean
      - name: q
        in: query
        description: Free Text search on Template name.
        required: false
        type: string
      responses:
        "200":
          description: Array of Templates
          schema:
            $ref: '#/definitions/TemplateList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Templates
      summary: Create Template
      description: Templates give an easy way to configure different types of features for users in your system. One can create template for most common type of features you want to add to users they add.
      operationId: create_template
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - in: body
        name: Template Parameters
        description: Template Attributes
        required: true
        schema:
          $ref: '#/definitions/TemplateParams'
      responses:
        "201":
          description: Template Created
          schema:
            $ref: '#/definitions/Template'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /templates/{id}:
    get:
      tags:
      - Templates
      summary: Template Details
      description: Retrieve the details of a Template. Supply the unique_id of the Template. The same information is returned when creating a Template.
      operationId: show_template
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of the template
        required: true
        type: integer
      responses:
        "200":
          description: Template Detail
          schema:
            $ref: '#/definitions/Template'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Templates
      summary: Update Template
      description: Update the specified Site by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      operationId: update_template
      consumes:
      - multipart/form-data
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of Template
        required: true
        type: integer
      - in: body
        name: Package Parameters
        description: Package Attributes
        required: true
        schema:
          $ref: '#/definitions/TemplateParams'
      responses:
        "200":
          description: Template Updated
          schema:
            $ref: '#/definitions/Template'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Templates
      summary: Delete Template
      description: Permanently deletes a Template. This action cannot be undone.
      operationId: delete_template
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of the Template
        required: true
        type: integer
      responses:
        "204":
          description: Template Deleted. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /templates/{id}/clone:
    post:
      tags:
      - Templates
      summary: Clone Template
      description: Clone the specified Template by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      operationId: clone_template
      consumes:
      - multipart/form-data
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: path
        description: ID of Template
        required: true
        type: integer
      responses:
        "200":
          description: Template Updated
          schema:
            $ref: '#/definitions/Template'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites:
    get:
      tags:
      - Sites
      summary: List Sites
      description: Retrieve information about your account's sites. The sort order of the entries in the collection is ordered by name.
      operationId: list_sites
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      responses:
        "200":
          description: Array of Sites
          schema:
            $ref: '#/definitions/SiteList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Sites
      summary: Create Site
      description: Site equates a location or a department. You can add your organizations' Site and add calling features to the Site.
      operationId: create_site
      consumes:
      - multipart/form-data
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: active
        in: formData
        description: Active Flag
        required: true
        type: boolean
      - name: caller_id_name
        in: formData
        description: Caller Id Name
        required: true
        type: string
      - name: caller_id_number
        in: formData
        description: Caller Id Number
        required: true
        type: string
      - name: thin_client_id
        in: formData
        description: Thin Client Id
        required: true
        type: string
      - name: dns_extension
        in: formData
        description: DNS Extension
        required: true
        type: string
      - name: permitted_country_codes
        in: formData
        description: Array of permitted country codes
        required: true
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: acl
        in: formData
        description: Access Control List
        required: true
        type: string
      - name: channel_limit
        in: formData
        description: Access Control List
        required: true
        type: integer
        maximum: 1000
        minimum: 0
      responses:
        "201":
          description: Site Created
          schema:
            $ref: '#/definitions/Site'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}:
    get:
      tags:
      - Sites
      summary: Site Details
      description: Retrieve the details of a Site. Supply the unique_id of the Site. The same information is returned when creating a Site.
      operationId: show_site
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the site
        required: true
        type: integer
      responses:
        "200":
          description: Site Detail
          schema:
            $ref: '#/definitions/Site'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Sites
      summary: Update Site
      description: Update the specified Site by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      operationId: update_site
      consumes:
      - multipart/form-data
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: music_on_hold
        in: formData
        description: Music on hold
        required: true
        type: file
      - name: active
        in: formData
        description: Active Flag
        required: true
        type: boolean
      - name: caller_id_name
        in: formData
        description: Caller Id Name
        required: true
        type: string
      - name: caller_id_number
        in: formData
        description: Caller Id Number
        required: true
        type: string
      - name: thin_client_id
        in: formData
        description: Thin Client Id
        required: true
        type: string
      - name: dns_extension
        in: formData
        description: DNS Extension
        required: true
        type: string
      - name: permitted_country_codes
        in: formData
        description: Array of permitted country codes
        required: true
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: acl
        in: formData
        description: Access Control List
        required: true
        type: string
      - name: channel_limit
        in: formData
        description: Access Control List
        required: true
        type: integer
        maximum: 1000
        minimum: 0
      - name: site_owner
        in: formData
        description: Site Owner
        required: true
        type: string
      - name: site_member
        in: formData
        description: Site Member
        required: true
        type: string
      responses:
        "200":
          description: Site Updated
          schema:
            $ref: '#/definitions/Site'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Sites
      summary: Delete site and switchables under it
      description: Permanently deletes a Site and the calling features under it. This action cannot be undone.
      operationId: delete_site
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      responses:
        "204":
          description: Site Deleted. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/rebuild:
    post:
      tags:
      - Sites
      summary: Rebuild Site
      description: "Rebuild a site. Can be used if newly added calling features did not automatically get registered. Rebuild, will synchronize your site with the associated thin client and refresh the Site."
      operationId: rebuild_site
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: id
        in: formData
        description: ID of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Site Rebuilt
          schema:
            $ref: '#/definitions/Site'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/potential_destinations:
    get:
      tags:
      - Sites
      summary: Destinations for a Site of a certain type
      description: Retrieve all potential destinations on a site that are of a certain type.
      operationId: potential_destinations_sites_class_name
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: class_name
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Array of Destinations
          schema:
            $ref: '#/definitions/SiteDestinationList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/potential_fail_overs:
    get:
      tags:
      - Sites
      summary: Failovers for a Site of a certain type
      description: Retrieve all potential fail overs on a site that are of a certain type
      operationId: potential_fail_overs_sites_class_name
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: class_name
        in: query
        required: true
        type: string
      responses:
        "200":
          description: Array of Fail Overs
          schema:
            $ref: '#/definitions/SiteFailOverList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/devices:
    get:
      tags:
      - Device
      summary: List Devices for the Site
      description: Retrieve all the devices that belong to a Site.
      operationId: list_devices
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Array of Devices
          schema:
            $ref: '#/definitions/DeviceList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Device
      summary: Create Device
      description: Add a New Device to your Site.
      operationId: create_device
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - in: body
        name: Device Parameters
        description: Device Attributes
        required: true
        schema:
          $ref: '#/definitions/DeviceParams'
      responses:
        "201":
          description: Device Created. Device Detail.
          schema:
            $ref: '#/definitions/Device'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/devices/{id}:
    get:
      tags:
      - Device
      summary: Device Details
      description: Retrieve the detials of a Device. Supply the unique id of the device. The same information is returned when creating a devise.
      operationId: show_device
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Site Identifier
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Device
        required: true
        type: integer
      responses:
        "200":
          description: Device Detail
          schema:
            $ref: '#/definitions/Device'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Device
      summary: Update Device
      description: Update a Device information. Any parameter not provided will be left unchanged.
      operationId: update_device
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Device
        required: true
        type: integer
      - in: body
        name: Device Parameters
        description: Device Attributes
        required: true
        schema:
          $ref: '#/definitions/DeviceParams'
      responses:
        "200":
          description: Updates the specified Device by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
          schema:
            $ref: '#/definitions/Device'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Device Record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Device
      summary: Delete a Device for the Site
      description: Permanently deletes a Device. This action cannot be undone.
      operationId: delete_device
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of the Device
        required: true
        type: integer
      responses:
        "204":
          description: Device Record Deleted. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Device Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/devices/{id}/regenerate-password:
    patch:
      tags:
      - Device
      summary: Update Device Password
      description: Regenerate a new password for your device on the Server. You will need to reset the password on your device.
      operationId: regenerate_password_device
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Device
        required: true
        type: integer
      responses:
        "200":
          description: Device Detail
          schema:
            $ref: '#/definitions/Device'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Device Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/devices/{id}/transfer:
    post:
      tags:
      - Device
      summary: Transfer Device
      description: Transfer a Device to a different Site.
      operationId: transfer_device
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Device
        required: true
        type: integer
      - name: new_site_id
        in: formData
        required: true
        type: integer
      responses:
        "200":
          description: Device Detail
          schema:
            $ref: '#/definitions/Device'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Device Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/devices/available:
    get:
      tags:
      - Device
      summary: List available devices for the Site
      description: Retrieve all the available and assigned devices for the Site
      operationId: available_devices
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - name: user_id
        in: query
        description: User ID - Identifier of the User
        required: false
        type: integer
      responses:
        "200":
          description: Array of Devices
          schema:
            $ref: '#/definitions/DeviceList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/devices/status:
    get:
      tags:
      - Device
      summary: List the Registration statuses of the devices for a site.
      description: Retrieve all the registered devices with the call processing services under a Site
      operationId: registered_devices
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Registration Statuses for the devices
          schema:
            $ref: '#/definitions/DeviceStatus'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/conference-rooms:
    get:
      tags:
      - Conference Room
      summary: List Conference Rooms for the Site
      description: Retrieve all the Conference Rooms that belong to a Site.
      operationId: list_conference-rooms
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Array of Conference Rooms
          schema:
            $ref: '#/definitions/ConferenceRoomList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Conference Room
      summary: Create Conference Room
      description: Add a New Confernce Room instance to your Site.
      operationId: create_conference-room
      consumes:
      - multipart/form-data
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - name: name
        in: formData
        description: Name Attribute
        required: true
        type: string
      - name: pin
        in: formData
        description: Pin
        required: true
        type: string
      - name: moderator_pin
        in: formData
        description: Pin of the Conference Call
        required: true
        type: string
      - name: greeting
        in: formData
        description: Greeting message
        required: true
        type: file
      - name: music_on_hold
        in: formData
        description: Music on hold
        required: true
        type: file
      responses:
        "201":
          description: Conference Room Created. Conference Room Detail.
          schema:
            $ref: '#/definitions/ConferenceRoom'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/conference-rooms/{id}:
    get:
      tags:
      - Conference Room
      summary: Conference Room Details
      description: Retrieve the detials of a Conference Room. Supply the unique id of the Conference Room. The same information is returned when creating a Conference Room.
      operationId: show_conference_room
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Site Identifier
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Conference Room
        required: true
        type: integer
      responses:
        "200":
          description: Conference Room Detail
          schema:
            $ref: '#/definitions/ConferenceRoom'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Conference Room Record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Conference Room
      summary: Update Conference Room
      description: Update a Conference Room information with the values of the parameters passed. Any parameters not provided will be left unchanged.
      operationId: update_conference_room
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Conference Room
        required: true
        type: integer
      - name: name
        in: formData
        description: Name Attribute
        required: true
        type: string
      - name: pin
        in: formData
        description: Pin
        required: true
        type: string
      - name: moderator_pin
        in: formData
        description: Pin of the Conference Call
        required: true
        type: string
      - name: greeting
        in: formData
        description: Greeting message
        required: true
        type: file
      - name: music_on_hold
        in: formData
        description: Music on hold
        required: true
        type: file
      responses:
        "200":
          description: Conference Room Detail
          schema:
            $ref: '#/definitions/ConferenceRoom'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Conference Room Record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Conference Room
      summary: Delete a Conference Room for the Site
      description: Permanently deletes a Conference Room. This action cannot be undone.
      operationId: delete_conference_room
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of the Conference Room
        required: true
        type: integer
      responses:
        "204":
          description: Delete Conference Room Record. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Conference Room Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/conference-rooms/{id}/upload:
    patch:
      tags:
      - Conference Room
      summary: Upload Greeting and Music on Hold Conference Room
      description: Upload Greeting and Music on hold.
      operationId: upload_conference_room
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Conference Room
        required: true
        type: integer
      - name: greeting
        in: formData
        description: Greeting message
        required: true
        type: file
      - name: music_on_hold
        in: formData
        description: Music on hold
        required: true
        type: file
      responses:
        "200":
          description: Conference Room Detail
          schema:
            $ref: '#/definitions/ConferenceRoom'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Conference Room Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/conference-rooms/{id}/transfer:
    post:
      tags:
      - Conference Room
      summary: Transfer Conference Room
      description: Transfer a Conference Room to a different Site.
      operationId: transfer_conference-room
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Conference Room
        required: true
        type: integer
      - name: new_site_id
        in: formData
        required: true
        type: integer
      responses:
        "200":
          description: Conference Room Detail
          schema:
            $ref: '#/definitions/ConferenceRoom'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Conference Room Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/conference-rooms/available:
    get:
      tags:
      - Conference Room
      summary: List available Conference Rooms for the Site
      description: Retrieve all available and assigned the Conference Rooms that belong to a Site.
      operationId: list_available_conference-rooms
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - name: user_id
        in: query
        description: User ID - Identifier of the User
        required: false
        type: integer
      responses:
        "200":
          description: Array of Conference Rooms
          schema:
            $ref: '#/definitions/ConferenceRoomList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/locations:
    get:
      tags:
      - Locations
      summary: List Locations for the Site
      description: Retrieve all the locations that belong to a Site.
      operationId: list_locations
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Array of Locations
          schema:
            $ref: '#/definitions/LocationList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Locations
      summary: Create Location
      description: Add a New Location to your Site.
      operationId: create_location
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - in: body
        name: Location Parameters
        description: Location Attributes
        required: true
        schema:
          $ref: '#/definitions/LocationParams'
      responses:
        "201":
          description: Location Record Created. Location Record Detail.
          schema:
            $ref: '#/definitions/Location'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/locations/{id}:
    get:
      tags:
      - Locations
      summary: Location Details
      description: Retrieve the detials of a Location. Supply the unique id of the Location. The same information is returned when creating a Location.
      operationId: show_location
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Site Identifier
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Location
        required: true
        type: integer
      responses:
        "200":
          description: Location Detail
          schema:
            $ref: '#/definitions/Location'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Location Record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Locations
      summary: Update Location
      description: Update the Location information. Any parameter not provided will be left unchanged.
      operationId: update_location
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of E911
        required: true
        type: integer
      - in: body
        name: Location Parameters
        description: Location Attributes
        required: true
        schema:
          $ref: '#/definitions/LocationParams'
      responses:
        "200":
          description: Location Detail
          schema:
            $ref: '#/definitions/Location'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Location Record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Locations
      summary: Delete a Location for the Site
      description: Permanently deletes a Location. This action cannot be undone.
      operationId: delete_location
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of the Location
        required: true
        type: integer
      responses:
        "204":
          description: Deleted Location Record. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Location Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/e911s:
    get:
      tags:
      - E911
      summary: List E911s for the Site
      description: Retrieve all the e911s that belong to a Site.
      operationId: list_e911s
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Array of E911s
          schema:
            $ref: '#/definitions/E911List'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/e911s/{id}:
    get:
      tags:
      - E911
      summary: E911 Details
      description: Retrieve the detials of a E911. Supply the unique id of the E911. The same information is returned when creating a E911.
      operationId: show_e911
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Site Identifier
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of E911
        required: true
        type: integer
      responses:
        "200":
          description: E911 Detail
          schema:
            $ref: '#/definitions/E911'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the E911 Record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - E911
      summary: Update E911
      description: Update the E911 information. Any parameter not provided will be left unchanged.
      operationId: update_e911
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of E911
        required: true
        type: integer
      - in: body
        name: E911 Parameters
        description: E911 Attributes
        required: true
        schema:
          $ref: '#/definitions/E911Params'
      responses:
        "200":
          description: E911 Detail
          schema:
            $ref: '#/definitions/E911'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the E911 Record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - E911
      summary: Delete a E911 for the Site
      description: Permanently deletes a E911. This action cannot be undone.
      operationId: delete_e911
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of the E911
        required: true
        type: integer
      responses:
        "204":
          description: Deleted E911 Record. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the E911 Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/extensions:
    get:
      tags:
      - Extension
      summary: List Extensions for the Site
      description: Retrieve all the Extensions that belong to a Site.
      operationId: list_extensions
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Array of Extensions
          schema:
            $ref: '#/definitions/ExtensionList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Extension
      summary: Create Extension
      description: Add a New Extension to your Site.
      operationId: create_extension
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - in: body
        name: Extension Parameters
        description: Extension Attributes
        required: true
        schema:
          $ref: '#/definitions/ExtensionParams'
      responses:
        "201":
          description: Created Extension. Extension Detail
          schema:
            $ref: '#/definitions/Extension'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/extensions/{id}:
    get:
      tags:
      - Extension
      summary: Extension Details
      description: Retrieve the detials of a Extension. Supply the unique id of the Extension. The same information is returned when creating a Extension.
      operationId: show_extension
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Site Identifier
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Extension
        required: true
        type: integer
      responses:
        "200":
          description: Extension Detail
          schema:
            $ref: '#/definitions/Extension'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Extension Record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Extension
      summary: Update Extension
      description: Update the Extension information. Any parameter not provided will be left unchanged.
      operationId: update_extension
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Extension
        required: true
        type: integer
      - in: body
        name: Extension Parameters
        description: Extension Attributes
        required: true
        schema:
          $ref: '#/definitions/ExtensionParams'
      responses:
        "200":
          description: Extension Detail
          schema:
            $ref: '#/definitions/Extension'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Extension Record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Extension
      summary: Delete a Extension for the Site
      description: Permanently deletes a Extension. This action cannot be undone.
      operationId: delete_extension
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of the Extension
        required: true
        type: integer
      responses:
        "204":
          description: Extension Deleted. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Extension Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/extensions/{id}/transfer:
    post:
      tags:
      - Extension
      summary: Transfer Extension
      description: Transfer a Extension to a different Site
      operationId: transfer_extension
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Extension
        required: true
        type: integer
      - name: new_site_id
        in: formData
        description: New Site ID
        required: true
        type: integer
      responses:
        "200":
          description: Extension Detail
          schema:
            $ref: '#/definitions/Extension'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Extension Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/extensions/available:
    get:
      tags:
      - Extension
      summary: List available Extensions for the Site
      description: Retrieve available and assigned Extensions that belong to a Site.
      operationId: available_extensions
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - name: user_id
        in: query
        description: User ID - Identifier of the User
        required: false
        type: integer
      responses:
        "200":
          description: Array of Extensions
          schema:
            $ref: '#/definitions/ExtensionList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/fax-machines:
    get:
      tags:
      - Fax Machine
      summary: List Fax Machines for the Site
      description: Retrieve all the Fax Machines that belong to a Site.
      operationId: list_fax-machines
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Array of Fax Machines
          schema:
            $ref: '#/definitions/FaxMachineList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Fax Machine
      summary: Create Fax Machine
      description: Add a New Fax Machine to your Site.
      operationId: create_fax-machine
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - in: body
        name: Fax Machine Parameters
        description: Fax Machine Attributes
        required: true
        schema:
          $ref: '#/definitions/FaxMachineParams'
      responses:
        "201":
          description: Created Fax Machine. Fax Machine Detail.
          schema:
            $ref: '#/definitions/FaxMachine'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/fax-machines/{id}:
    get:
      tags:
      - Fax Machine
      summary: Fax Machine Details
      description: Retrieve the detials of a Fax Machine. Supply the unique id of the Fax Machine. The same information is returned when creating a Fax Machine.
      operationId: show_fax-machine
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Site Identifier
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Fax Machine
        required: true
        type: integer
      responses:
        "200":
          description: Fax Machine Detail
          schema:
            $ref: '#/definitions/FaxMachine'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Fax Machine Record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Fax Machine
      summary: Update Fax Machine
      description: Update the Fax Machine information. Any parameter not provided will be left unchanged.
      operationId: update_fax-machine
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Fax Machine
        required: true
        type: integer
      - in: body
        name: Fax Machine Parameters
        description: Fax Machine Attributes
        required: true
        schema:
          $ref: '#/definitions/FaxMachineParams'
      responses:
        "200":
          description: Fax Machine Detail
          schema:
            $ref: '#/definitions/FaxMachine'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Fax Machine Record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Fax Machine
      summary: Delete a Fax Machine for the Site
      description: Permanently deletes a Fax Machine. This action cannot be undone.
      operationId: delete_fax-machine
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of the Fax Machine
        required: true
        type: integer
      responses:
        "204":
          description: Fax Machine Deleted. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Fax Machine Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/fax-machines/{id}/transfer:
    post:
      tags:
      - Fax Machine
      summary: Transfer Forward
      description: Transfer a Fax Machine to a different Site
      operationId: transfer_fax-machine
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Fax Machine
        required: true
        type: integer
      - name: new_site_id
        in: formData
        description: New Site ID
        required: true
        type: integer
      responses:
        "200":
          description: Fax Machine Detail
          schema:
            $ref: '#/definitions/FaxMachine'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Fax Machine Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/fax-machines/available:
    get:
      tags:
      - Fax Machine
      summary: List available Fax Machines for the Site
      description: Retrieve available and assigned Fax Machines that belong to a Site.
      operationId: available_fax-machines
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - name: user_id
        in: query
        description: User ID - Identifier of the User
        required: false
        type: integer
      responses:
        "200":
          description: Array of Fax Machines
          schema:
            $ref: '#/definitions/FaxMachineList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/forwards:
    get:
      tags:
      - Forward
      summary: List Forwards for the Site
      description: Retrieve all the Forwards that belong to a Site.
      operationId: list_forwards
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Array of Forwards
          schema:
            $ref: '#/definitions/ForwardList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Forward
      summary: Create Forward
      description: Add a New Forward to your Site.
      operationId: create_forward
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - in: body
        name: Forward Parameters
        description: Forward Attributes
        required: true
        schema:
          $ref: '#/definitions/ForwardParams'
      responses:
        "201":
          description: Created Forwards. Forward Detail.
          schema:
            $ref: '#/definitions/Forward'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/forwards/{id}:
    get:
      tags:
      - Forward
      summary: Forward Details
      description: Retrieve the detials of a Forward. Supply the unique id of the Forward. The same information is returned when creating a Forward.
      operationId: show_forward
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Site Identifier
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Forward
        required: true
        type: integer
      responses:
        "200":
          description: Forward Detail
          schema:
            $ref: '#/definitions/Forward'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Forward Record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Forward
      summary: Update Forward
      description: Update the Forward information. Any parameter not provided will be left unchanged.
      operationId: update_forward
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Forward
        required: true
        type: integer
      - in: body
        name: Forward Parameters
        description: Forward Attributes
        required: true
        schema:
          $ref: '#/definitions/ForwardParams'
      responses:
        "200":
          description: Forward Detail
          schema:
            $ref: '#/definitions/Forward'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Forward Record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Forward
      summary: Delete a Forward for the Site
      description: Permanently deletes a Forward. This action cannot be undone.
      operationId: delete_forward
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of the Forward
        required: true
        type: integer
      responses:
        "204":
          description: Forward Deleted. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Forward Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/forwards/{id}/transfer:
    post:
      tags:
      - Forward
      summary: Transfer Forward
      description: Transfer a Forward to a different Site
      operationId: transfer_forward
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Forward
        required: true
        type: integer
      - name: new_site_id
        in: formData
        description: New Site ID
        required: true
        type: integer
      responses:
        "200":
          description: Forward Detail
          schema:
            $ref: '#/definitions/Forward'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Forward Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/forwards/available:
    get:
      tags:
      - Forward
      summary: List available Forwards for the Site
      description: Retrieve available and assigned Forwards that belong to a Site.
      operationId: available_forwards
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - name: user_id
        in: query
        description: User ID - Identifier of the User
        required: false
        type: integer
      responses:
        "200":
          description: Array of Forwards
          schema:
            $ref: '#/definitions/ForwardList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/menus:
    get:
      tags:
      - Menu
      summary: List Menus for the Site
      description: Retrieve all the Menus that belong to a Site.
      operationId: list_menus
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Array of Menus
          schema:
            $ref: '#/definitions/MenuList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Menu
      summary: Create Menu
      description: Add a New Menu to your Site.
      operationId: create_menu
      consumes:
      - multipart/form-data
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - name: name
        in: formData
        description: Name Attribute
        required: true
        type: string
      - name: pin
        in: formData
        description: Pin
        required: true
        type: string
      - name: fail_over
        in: formData
        description: Failover for the Menu
        required: true
        type: string
      - name: greeting
        in: formData
        description: Greeting message
        required: true
        type: file
      - name: "option_routes[0]"
        in: formData
        description: Menu option when the user presses 0
        required: false
        type: string
      - name: "option_routes[1]"
        in: formData
        description: Menu option when the user presses 1
        required: false
        type: string
      - name: "option_routes[2]"
        in: formData
        description: Menu option when the user presses 2
        required: false
        type: string
      - name: "option_routes[3]"
        in: formData
        description: Menu option when the user presses 3
        required: false
        type: string
      - name: "option_routes[4]"
        in: formData
        description: Menu option when the user presses 4
        required: false
        type: string
      - name: "option_routes[5]"
        in: formData
        description: Menu option when the user presses 5
        required: false
        type: string
      - name: "option_routes[6]"
        in: formData
        description: Menu option when the user presses 6
        required: false
        type: string
      - name: "option_routes[7]"
        in: formData
        description: Menu option when the user presses 7
        required: false
        type: string
      - name: "option_routes[8]"
        in: formData
        description: Menu option when the user presses 8
        required: false
        type: string
      - name: "option_routes[9]"
        in: formData
        description: Menu option when the user presses 9
        required: false
        type: string
      - name: "option_routes[*]"
        in: formData
        description: Menu option when the user presses *
        required: false
        type: string
      responses:
        "201":
          description: Created Menu. Menu Detail.
          schema:
            $ref: '#/definitions/Menu'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/menus/{id}:
    get:
      tags:
      - Menu
      summary: Menu Details
      description: Retrieve the detials of a Menu. Supply the unique id of the Menu. The same information is returned when creating a Menu.
      operationId: show_menu
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Site Identifier
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Menu
        required: true
        type: integer
      responses:
        "200":
          description: Menu Detail
          schema:
            $ref: '#/definitions/Menu'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Menu Record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Menu
      summary: Update Menu
      description: Update the Menu information. Any parameter not provided will be left unchanged.
      operationId: update_menu
      consumes:
      - multipart/form-data
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Menu
        required: true
        type: integer
      - name: name
        in: formData
        description: Name Attribute
        required: true
        type: string
      - name: pin
        in: formData
        description: Pin
        required: true
        type: string
      - name: fail_over
        in: formData
        description: Failover for the Menu
        required: true
        type: string
      - name: greeting
        in: formData
        description: Greeting message
        required: true
        type: file
      - name: "option_routes[0]"
        in: formData
        description: Menu option when the user presses 0
        required: false
        type: string
      - name: "option_routes[1]"
        in: formData
        description: Menu option when the user presses 1
        required: false
        type: string
      - name: "option_routes[2]"
        in: formData
        description: Menu option when the user presses 2
        required: false
        type: string
      - name: "option_routes[3]"
        in: formData
        description: Menu option when the user presses 3
        required: false
        type: string
      - name: "option_routes[4]"
        in: formData
        description: Menu option when the user presses 4
        required: false
        type: string
      - name: "option_routes[5]"
        in: formData
        description: Menu option when the user presses 5
        required: false
        type: string
      - name: "option_routes[6]"
        in: formData
        description: Menu option when the user presses 6
        required: false
        type: string
      - name: "option_routes[7]"
        in: formData
        description: Menu option when the user presses 7
        required: false
        type: string
      - name: "option_routes[8]"
        in: formData
        description: Menu option when the user presses 8
        required: false
        type: string
      - name: "option_routes[9]"
        in: formData
        description: Menu option when the user presses 9
        required: false
        type: string
      - name: "option_routes[*]"
        in: formData
        description: Menu option when the user presses *
        required: false
        type: string
      responses:
        "200":
          description: Menu Detail
          schema:
            $ref: '#/definitions/Menu'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Menu Record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Menu
      summary: Delete a Menu for the Site
      description: Permanently deletes a Menu. This action cannot be undone.
      operationId: delete_menu
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of the Menu
        required: true
        type: integer
      responses:
        "204":
          description: Menu Deleted. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Menu Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/menus/{id}/upload:
    patch:
      tags:
      - Menu
      summary: Upload Menu Greeting
      description: Upload the menu greeting message.
      operationId: upload_menu
      consumes:
      - multipart/form-data
      parameters:
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Menu
        required: true
        type: integer
      - name: greeting
        in: formData
        description: Greeting message
        required: true
        type: file
      responses:
        "200":
          description: Menu Detail
          schema:
            $ref: '#/definitions/Menu'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Menu Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/menus/{id}/transfer:
    post:
      tags:
      - Menu
      summary: Transfer Menu
      description: Transfer a Menu to a different Site
      operationId: transfer_menu
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Menu
        required: true
        type: integer
      - name: new_site_id
        in: formData
        description: New Site ID
        required: true
        type: integer
      responses:
        "200":
          description: Menu Detail
          schema:
            $ref: '#/definitions/Menu'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Menu Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/phone-numbers:
    get:
      tags:
      - Phone Number
      summary: List Phone Numbers for the Site
      description: Retrieve all the Phone Numbers that belong to a Site.
      operationId: list_phone_numbers
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Array of Phone Numbers
          schema:
            $ref: '#/definitions/PhoneNumberList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Phone Number
      summary: Create Phone Number
      description: Add a New Phone Number to your Site.
      operationId: create_phone-number
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - in: body
        name: Phone Number Parameters
        description: Phone Number Attributes
        required: true
        schema:
          $ref: '#/definitions/PhoneNumberParams'
      responses:
        "201":
          description: Created Phone Number. Phone Number Detail.
          schema:
            $ref: '#/definitions/PhoneNumber'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/phone-numbers/{id}:
    get:
      tags:
      - Phone Number
      summary: Phone Numnber Detail
      description: Retrieve the detials of a Phone Number. Supply the unique id of the Phone Number. The same information is returned when creating a Phone Number.
      operationId: show_phone-number
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Site Identifier
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Phone Number
        required: true
        type: integer
      responses:
        "200":
          description: Phone Number Detail
          schema:
            $ref: '#/definitions/PhoneNumber'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Phone Number Record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Phone Number
      summary: Update Phone Number
      description: Update the Phone Number information. Any parameter not provided will be left unchanged.
      operationId: update_phone-number
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Phone Number
        required: true
        type: integer
      - in: body
        name: Phone Number Parameters
        description: Phone Number Attributes
        required: true
        schema:
          $ref: '#/definitions/PhoneNumberParams'
      responses:
        "200":
          description: Phone Number Detail
          schema:
            $ref: '#/definitions/PhoneNumber'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Phone Number Record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Phone Number
      summary: Delete a Phone Number for the Site
      description: Permanently deletes a Phone Number. This action cannot be undone.
      operationId: delete_phone-number
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of the Phone Number
        required: true
        type: integer
      responses:
        "204":
          description: Phone Number Deleted. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Phone Number Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/phone-numbers/{id}/transfer:
    post:
      tags:
      - Phone Number
      summary: Transfer Phone Number
      description: Transfer a Phone Number to a different Site
      operationId: transfer_phone-number
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Phone Number
        required: true
        type: integer
      - name: new_site_id
        in: formData
        description: New Site ID
        required: true
        type: integer
      responses:
        "200":
          description: Phone Number Detail
          schema:
            $ref: '#/definitions/PhoneNumber'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Phone Number Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/phone-numbers/available:
    get:
      tags:
      - Phone Number
      summary: List available Phone Numbers for the Site
      description: Retrieve available and assigned Phone Numbers that belong to a Site.
      operationId: available_phone_numbers
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - name: user_id
        in: query
        description: User ID - Identifier of the User
        required: false
        type: integer
      responses:
        "200":
          description: Array of Phone Numbers
          schema:
            $ref: '#/definitions/PhoneNumberList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request. This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/ring-groups:
    get:
      tags:
      - Ring Group
      summary: List Ring Group for the Site
      description: Retrieve all the Ring Group that belong to a Site.
      operationId: list_ring-group
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Array of Ring Groups
          schema:
            $ref: '#/definitions/RingGroupList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Ring Group
      summary: Create Ring Group
      description: Add a New Ring Group to your Site.
      operationId: create_ring-group
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - in: body
        name: Ring Group Parameters
        description: Ring Group Attributes
        required: true
        schema:
          $ref: '#/definitions/RingGroupParams'
      responses:
        "201":
          description: Created Ring Group. Ring Group Detail.
          schema:
            $ref: '#/definitions/RingGroup'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/ring-groups/{id}:
    get:
      tags:
      - Ring Group
      summary: Ring Group Detail
      description: Retrieve the detials of a Ring Group. Supply the unique id of the Ring Group. The same information is returned when creating a Ring Group.
      operationId: show_ring-group
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Site Identifier
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Ring Group
        required: true
        type: integer
      responses:
        "200":
          description: Ring Group Detail
          schema:
            $ref: '#/definitions/RingGroup'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Ring Group Record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Ring Group
      summary: Update Ring Group
      description: Update the Ring Group information. Any parameter not provided will be left unchanged.
      operationId: update_ring-group
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Ring Group
        required: true
        type: integer
      - in: body
        name: Ring Group Parameters
        description: Ring Group Attributes
        required: true
        schema:
          $ref: '#/definitions/RingGroupParams'
      responses:
        "200":
          description: Ring Group Detail
          schema:
            $ref: '#/definitions/RingGroup'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Ring Group Record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Ring Group
      summary: Delete a Ring Group for the Site
      description: Permanently deletes a Ring Group. This action cannot be undone.
      operationId: delete_ring-group
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of the Ring Group
        required: true
        type: integer
      responses:
        "204":
          description: Deleted Ring Group. No Content
          schema:
            $ref: '#/definitions/RingGroup'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Ring Group Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/ring-groups/{id}/transfer:
    post:
      tags:
      - Ring Group
      summary: Transfer Ring Group
      description: Transfer a Ring Group to a different Site
      operationId: transfer_ring-group
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Ring Group
        required: true
        type: integer
      - name: new_site_id
        in: formData
        description: New Site ID
        required: true
        type: integer
      responses:
        "200":
          description: Ring Group Detail
          schema:
            $ref: '#/definitions/RingGroup'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Ring Group Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/ring-groups/available:
    get:
      tags:
      - Ring Group
      summary: List available Ring Groups for the Site
      description: Retrieve available and assigned Ring Group that belong to a Site.
      operationId: available_ring-group
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - name: user_id
        in: query
        description: User ID - Identifier of the User
        required: false
        type: integer
      responses:
        "200":
          description: Array of Ring Groups
          schema:
            $ref: '#/definitions/RingGroupList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/schedules:
    get:
      tags:
      - Schedule
      summary: List Schedule for the Site
      description: Retrieve all the Schedule that belong to a Site.
      operationId: list_schedule
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Array of Schedules
          schema:
            $ref: '#/definitions/ScheduleList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Schedule
      summary: Create Schedule
      description: Add a New Schedule to your Site.
      operationId: create_schedule
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - in: body
        name: Schedule Parameters
        description: Schedule Attributes
        required: true
        schema:
          $ref: '#/definitions/ScheduleParams'
      responses:
        "201":
          description: Created Schedule. Schedule Detail.
          schema:
            $ref: '#/definitions/Schedule'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/schedules/{id}:
    get:
      tags:
      - Schedule
      summary: Schedule Detail
      description: Retrieve the detials of a Schedule. Supply the unique id of the Schedule. The same information is returned when creating a Schedule.
      operationId: show_schedule
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Site Identifier
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Schedule
        required: true
        type: integer
      responses:
        "200":
          description: Schedule Detail
          schema:
            $ref: '#/definitions/Schedule'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Schedule Record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Schedule
      summary: Update Schedule
      description: Update the Schedule information. Any parameter not provided will be left unchanged.
      operationId: update_schedule
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Schedule
        required: true
        type: integer
      - in: body
        name: Schedule Parameters
        description: Schedule Attributes
        required: true
        schema:
          $ref: '#/definitions/ScheduleParams'
      responses:
        "200":
          description: Schedule Detail
          schema:
            $ref: '#/definitions/Schedule'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Schedule Record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Schedule
      summary: Delete a Schedule for the Site
      description: Permanently deletes a Schedule. This action cannot be undone.
      operationId: delete_schedule
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of the Schedule
        required: true
        type: integer
      responses:
        "204":
          description: Schedule Deleted. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Schedule Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/schedules/{id}/transfer:
    post:
      tags:
      - Schedule
      summary: Transfer Schedule
      description: Transfer a Schedule to a different Site
      operationId: transfer_schedule
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Schedule
        required: true
        type: integer
      - name: new_site_id
        in: formData
        description: New Site ID
        required: true
        type: integer
      responses:
        "200":
          description: Schedule Detail
          schema:
            $ref: '#/definitions/Schedule'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Schedule Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/schedules/available:
    get:
      tags:
      - Schedule
      summary: List Schedule for the Site
      description: Retrieve available and assigned Schedule that belong to a Site.
      operationId: available_schedules
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - name: user_id
        in: query
        description: User ID - Identifier of the User
        required: false
        type: integer
      responses:
        "200":
          description: Array of Schedules
          schema:
            $ref: '#/definitions/ScheduleList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/sip-trunks:
    get:
      tags:
      - Sip Trunk
      summary: List Sip Trunk for the Site
      description: Retrieve all the Sip Trunks that belong to a Site.
      operationId: list_sip-trunk
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Array of Sip Trunks
          schema:
            $ref: '#/definitions/SipTrunkList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Sip Trunk
      summary: Create Sip Trunk
      description: Add a New Sip Trunk to your Site.
      operationId: create_sip-trunk
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - in: body
        name: Sip Trunk Parameters
        description: Sip Trunk Attributes
        required: true
        schema:
          $ref: '#/definitions/SipTrunkParams'
      responses:
        "201":
          description: Created Sip Trunk. Sip Trunk Detail.
          schema:
            $ref: '#/definitions/SipTrunk'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/sip-trunks/{id}:
    get:
      tags:
      - Sip Trunk
      summary: Sip Trunk Detail
      description: Retrieve the detials of a Sip Trunk. Supply the unique id of the Sip Trunk. The same information is returned when creating a Sip Trunk.
      operationId: show_sip-trunk
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Site Identifier
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Sip Trunk
        required: true
        type: integer
      responses:
        "200":
          description: Sip Trunk Detail
          schema:
            $ref: '#/definitions/SipTrunk'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Sip Trunk Record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Sip Trunk
      summary: Update Sip Trunk
      description: Update the Sip Trunk information. Any parameter not provided will be left unchanged.
      operationId: update_sip-trunk
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Sip Trunk
        required: true
        type: integer
      - in: body
        name: Sip Trunk Parameters
        description: Sip Trunk Attributes
        required: true
        schema:
          $ref: '#/definitions/SipTrunkParams'
      responses:
        "200":
          description: Sip Trunk Detail
          schema:
            $ref: '#/definitions/SipTrunk'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Sip Trunk Record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Sip Trunk
      summary: Delete a Sip Trunk for the Site
      description: Permanently deletes a Sip Trunk. This action cannot be undone.
      operationId: delete_sip-trunk
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of the Sip Trunk
        required: true
        type: integer
      responses:
        "204":
          description: Sip Trunk Deleted. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Sip Trunk Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/sip-trunks/{id}/regenerate-password:
    patch:
      tags:
      - Sip Trunk
      summary: Update Sip Trunk Password
      description: Regenerate a new password for your Sip Turnk on the Server. You will need to reset the password on your Sip Trunk.
      operationId: regenerate_password_sip_trunk
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Device
        required: true
        type: integer
      responses:
        "200":
          description: Sip Trunk Detail
          schema:
            $ref: '#/definitions/SipTrunk'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Device Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/sip-trunks/{id}/transfer:
    post:
      tags:
      - Sip Trunk
      summary: Transfer Sip Trunk
      description: Transfer a Sip Trunk to a different Site
      operationId: transfer_sip-trunk
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Sip Trunk
        required: true
        type: integer
      - name: new_site_id
        in: formData
        description: New Site ID
        required: true
        type: integer
      responses:
        "200":
          description: Sip Trunk Detail
          schema:
            $ref: '#/definitions/SipTrunk'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Sip Trunk Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/sip-trunks/status:
    get:
      tags:
      - Sip Trunk
      summary: List the Registration statuses of the sip trunks for a site.
      description: Retrieve all the registered sip trunks with the call processing services under a Site
      operationId: registered_sip-trunks
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Registration Statuses for the sip trunks
          schema:
            $ref: '#/definitions/SipTrunkStatus'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/voice-mail-boxes:
    get:
      tags:
      - Voice Mail Box
      summary: List Voice Mail Box for the Site
      description: Retrieve all the Voice Mail Box that belong to a Site.
      operationId: list_voice-mail-boxes
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Array of Voice Mail Box
          schema:
            $ref: '#/definitions/VoiceMailBoxList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Voice Mail Box
      summary: Create Voice Mail Box
      description: Add a New Voice Mail Box to your Site.
      operationId: create_voice-mail-box
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - name: name
        in: formData
        description: Name Attribute
        required: true
        type: string
      - name: pin
        in: formData
        description: Pin
        required: true
        type: string
      - name: announcement
        in: formData
        description: Greeting message
        required: true
        type: file
      - name: notification_emails
        in: formData
        description: Notification Voice mail box email
        required: true
        type: string
      responses:
        "201":
          description: Created Voice Mail Box. Voice Mail Box Detail.
          schema:
            $ref: '#/definitions/VoiceMailBox'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/voice-mail-boxes/{id}:
    get:
      tags:
      - Voice Mail Box
      summary: Voice Mail Box Detail
      description: Retrieve the detials of a Voice Mail Box. Supply the unique id of the Voice Mail Box. The same information is returned when creating a Voice Mail Box.
      operationId: show_voice-mail-box
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Site Identifier
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Voice Mail Box
        required: true
        type: integer
      responses:
        "200":
          description: Voice Mail Box Detail
          schema:
            $ref: '#/definitions/VoiceMailBox'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Voice Mail Box Record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Voice Mail Box
      summary: Update Voice Mail Box
      description: Update the Voice Mail Box information. Any parameter not provided will be left unchanged.
      operationId: update_voice-mail-box
      consumes:
      - multipart/form-data
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Voice Mail Box
        required: true
        type: integer
      - name: name
        in: formData
        description: Name Attribute
        required: true
        type: string
      - name: pin
        in: formData
        description: Pin
        required: true
        type: string
      - name: announcement
        in: formData
        description: Greeting message
        required: true
        type: file
      - name: notification_emails
        in: formData
        description: Notification Voice mail box email
        required: true
        type: string
      responses:
        "200":
          description: Voice Mail Box Detail
          schema:
            $ref: '#/definitions/VoiceMailBox'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Voice Mail Box Record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Voice Mail Box
      summary: Delete a Voice Mail Box for the Site
      description: Permanently deletes a Voice Mail Box. This action cannot be undone.
      operationId: delete_voice-mail-box
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of the Voice Mail Box
        required: true
        type: integer
      responses:
        "204":
          description: Voice Mail Box Deleted. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Sip Trunk Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/voice-mail-boxes/{id}/upload:
    patch:
      tags:
      - Voice Mail Box
      summary: Upload Greeting Voice Mail Box
      description: Upload the greeting message for Voice Mail Box.
      operationId: patch_voice-mail-box
      consumes:
      - multipart/form-data
      parameters:
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Voice Mail Box
        required: true
        type: integer
      - name: announcement
        in: formData
        description: Greeting message
        required: true
        type: file
      responses:
        "200":
          description: Voice Mail Box Detail
          schema:
            $ref: '#/definitions/VoiceMailBox'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Voice Mail Box Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/voice-mail-boxes/{id}/transfer:
    post:
      tags:
      - Voice Mail Box
      summary: Transfer Voice Mail Box
      description: Transfer a Voice Mail Box to a different Site
      operationId: transfer_voice-mail-box
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Voice Mail Box
        required: true
        type: integer
      - name: new_site_id
        in: formData
        description: New Site ID
        required: true
        type: integer
      responses:
        "200":
          description: Sip Trunk Detail
          schema:
            $ref: '#/definitions/VoiceMailBox'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Voice Mail Box Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/voice-mail-boxes/available:
    get:
      tags:
      - Voice Mail Box
      summary: List available Voice Mail Box for the Site
      description: Retrieve available and assigned Voice Mail Boxes that belong to a Site.
      operationId: available_voice-mail-boxes
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - name: user_id
        in: query
        description: User ID - Identifier of the User
        required: false
        type: integer
      responses:
        "200":
          description: Array of Voice Mail Box
          schema:
            $ref: '#/definitions/VoiceMailBoxList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/call_blocks:
    get:
      tags:
      - Call Blocking
      summary: List Call Blocks for the Site
      description: Retrieve all the Call Blocks that belong to a Site.
      operationId: list_call_blocks
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      responses:
        "200":
          description: Array of CallBlocks
          schema:
            $ref: '#/definitions/CallBlockList'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
    post:
      tags:
      - Call Blocking
      summary: Create Call Block
      description: Add a New Call Block to your Site.
      operationId: create_callblock
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Identifier of the Site
        required: true
        type: integer
      - in: body
        name: Call Block Parameters
        description: Call Block Attributes
        required: true
        schema:
          $ref: '#/definitions/CallBlockParams'
      responses:
        "201":
          description: Created CallBlocks. CallBlock Detail.
          schema:
            $ref: '#/definitions/CallBlock'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find site record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/call_blocks/{id}:
    get:
      tags:
      - Call Blocking
      summary: Call Block Details
      description: Retrieve the detials of a Call Block. Supply the unique id of the Call Block. The same information is returned when creating a Call Block.
      operationId: show_call_block
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: Site ID - Site Identifier
        required: true
        type: integer
      - name: id
        in: path
        description: Id - Identifier of Call Block
        required: true
        type: integer
      responses:
        "200":
          description: Call Block Detail
          schema:
            $ref: '#/definitions/CallBlock'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Call Block Record
          schema:
            $ref: '#/definitions/error'
    put:
      tags:
      - Call Blocking
      summary: Update Call Block
      description: Update the Call Block information. Any parameter not provided will be left unchanged.
      operationId: update_call_block
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of Call Block
        required: true
        type: integer
      - in: body
        name: Call Block Parameters
        description: Call Block Attributes
        required: true
        schema:
          $ref: '#/definitions/CallBlockParams'
      responses:
        "200":
          description: Call Block Detail
          schema:
            $ref: '#/definitions/CallBlock'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Call Block Record
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
      - Call Blocking
      summary: Delete a Call Block for the Site
      description: Permanently deletes a Call Block. This action cannot be undone.
      operationId: delete_call_block
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        type: integer
      - name: id
        in: path
        description: ID of the Call Block
        required: true
        type: integer
      responses:
        "204":
          description: Call Block Deleted. No Content
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Call Block Record
          schema:
            $ref: '#/definitions/error'
  /sites/{site_id}/seats:
    post:
      tags:
      - Seats
      summary: Create a Seat
      description: The Seat Management feature is meant for using the created Templates adding a new set of switchable features when a new set of switchables needs to be created for a user.
      operationId: create_seat
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: This token is used to authenticate a particular account.
        required: true
        type: string
      - name: site_id
        in: path
        description: ID of Site
        required: true
        type: integer
      - in: body
        name: Seat Parameters
        description: Seat Attributes
        required: true
        schema:
          $ref: '#/definitions/SeatParams'
      responses:
        "200":
          description: Seat Stats
          schema:
            $ref: '#/definitions/Seat'
        "400":
          description: Bad Request Parameters or Validation Errors
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized request.  This error will occur if the SecurityContext header is not provided or does not include a party_id.
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Couldn't find Site or the Voice Mail Box Record
          schema:
            $ref: '#/definitions/error'
securityDefinitions:
  password:
    type: oauth2
    tokenUrl: http://ivy-web-5.den.teliax.com/oauth/token
    flow: password
    scopes:
      write: allows modifying resources
      read: allows reading resources
  client_credentials:
    type: oauth2
    tokenUrl: http://ivy-web-5.den.teliax.com/oauth/token
    flow: password
    scopes:
      write: allows modifying resources
      read: allows reading resources
definitions:
  LoginParams:
    required:
    - client_id
    - client_secret
    - grant_type
    properties:
      grant_type:
        type: string
      password:
        type: string
      username:
        type: string
      client_id:
        type: string
      client_secret:
        type: string
      refresh_token:
        type: string
    example:
      grant_type: password
      password: ADfmcsnf3f34nAD
      username: john.doe@teliax.com
      client_id: 4153c85d80d957c09a8a5360f1a80ff6051c68f0e03c4e453f9845d07d8f9921
      client_secret: 371c5c5ec5a42bcb258a8b0c7ef8d0c9de5daa123270cc96605f3f973e22a391
  AccessToken:
    required:
    - access_token
    - created_at
    - expires_in
    - refresh_token
    - token_type
    properties:
      access_token:
        type: string
      token_type:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      created_at:
        type: integer
    example:
      access_token: d79d9eadabfcbd3f2eb9455986c2bd70bc8523f4629825d33060649045a313e6
      token_type: bearer
      expires_in: "7200"
      refresh_token: 128f825fbd91b1b23a10c0e3f408ea6d70163b299d6f579fdc6ed68d690f03cb
      created_at: 1519714076
  LogoutParams:
    required:
    - client_id
    - client_secret
    - token
    properties:
      token:
        type: string
      client_id:
        type: string
      client_secret:
        type: string
    example:
      token: 6d242680a6eaa70cf76debf05d9774e2f27d2bd4416bff9bc145f9dddde71728
      client_id: 579ab02e9c1126e44a5b09b31d409c90ade335615bc408235f5a170f4cc70fdc
      client_secret: bcf5a592c9dc65f905e6d816f9d8b4203c62657b56ff153d7f4a7c4b7a9aa0d3
  CustomerRegistration:
    allOf:
    - $ref: '#/definitions/CustomerRegistrationParams'
    - required:
      - id
      properties:
        id:
          type: integer
        confirmation_token:
          type: string
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 122
        name: Teliax Telecommunications
        active: true
        locale: English
        international_enabled: true
        price_deck: Sample Price Deck
        balance_preference_in_dollars: 100.0
        recharge_preference_in_dollars: 200.0
        address:
          id: 671
          email: john.doe@example.com
          street_address: "233 E Wacker Drive, Suite #1106"
          country: US
          city: Chicago
          state_province: IL
          postal_code: "60601"
          contact_number: "3125233844"
        links:
        - herf: /confirmation
          rel: confirmation
          title: Confirm Account
          method: POST
  CustomerRegistrationParams:
    required:
    - name
    properties:
      name:
        type: string
        example: Teliax Telecommunications
      address:
        $ref: '#/definitions/AddressParams'
  ForgotPassword:
    properties:
      reset_password_token:
        type: string
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      message: An email has been sent with instructions to reset your password
  ForgotPasswordParams:
    required:
    - email
    properties:
      email:
        type: string
        example: john.doe@teliax.com
  ResetPassword:
    properties:
      message:
        type: string
    example:
      message: Password updated successfully
  ResetPasswordParams:
    properties:
      password:
        type: string
        example: new_password
      password_confirmation:
        type: string
        example: new_password
      reset_password_token:
        type: string
        example: U6z9TxNd7xQBJcDF
  Confirmation:
    required:
    - message
    properties:
      message:
        type: string
    example:
      message: Account confirmed
  ConfirmationParams:
    required:
    - confirmation_token
    properties:
      confirmation_token:
        type: string
        example: i2W9OXLqCaKNHoQY07lVAkgPVaI
  Account:
    allOf:
    - $ref: '#/definitions/AccountParams'
    - required:
      - id
      properties:
        id:
          type: integer
          example: 1
        balance:
          type: string
          example: "4276.85"
        current_user:
          $ref: '#/definitions/Account_current_user'
        address:
          $ref: '#/definitions/Address'
        links:
          type: array
          example:
          - href: /account
            rel: self
            title: Account Details
            method: GET
          - href: /account
            rel: edit
            title: Edit Account
            method: PUT
          - href: /account
            rel: delete
            title: Delete Account
            method: DELETE
          - href: "/addresses/{id}"
            rel: edit
            title: Update Address
            method: PUT
          items:
            $ref: '#/definitions/linkDescription'
  AccountParams:
    required:
    - balance_preference_in_dollars
    - locale
    - maximum_recharge_preference_in_dollars
    - name
    - recharge_preference_in_dollars
    properties:
      name:
        type: string
        example: Leap Tel
      locale:
        type: string
        example: English
      balance_preference_in_dollars:
        type: string
        example: "100.0"
      recharge_preference_in_dollars:
        type: string
        example: "200.0"
      maximum_recharge_preference_in_dollars:
        type: string
        example: "1000.0"
  Address:
    allOf:
    - $ref: '#/definitions/AddressParams'
    - required:
      - id
      properties:
        id:
          type: integer
        links:
          type: array
      example:
        id: 671
        email: email@example.com
        street_address: "233 E Wacker Drive, Suite #1106"
        country: US
        city: Chicago
        state_province: IL
        postal_code: "60601"
        contact_number: "3125233844"
        links:
        - href: /addresses/671
          rel: self
          title: Update Address
          method: PUT
        - href: /account
          rel: account
          title: Account Details
          method: GET
  AddressParams:
    required:
    - city
    - contact_number
    - country
    - email
    - postal_code
    - state_province
    - street_address
    properties:
      email:
        type: string
        example: email@example.com
      street_address:
        type: string
        example: "233 E Wacker Drive, Suite #1106"
      country:
        $ref: '#/definitions/country_code'
      city:
        type: string
        example: Chicago
      state_province:
        type: string
        example: IL
      postal_code:
        type: string
        example: "60601"
      contact_number:
        type: string
        example: "3125233844"
    example:
      email: email@example.com
      street_address: "233 E Wacker Drive, Suite #1106"
      country: US
      city: Chicago
      state_province: IL
      postal_code: "60601"
      contact_number: "3125233844"
  UserList:
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/User'
  User:
    allOf:
    - $ref: '#/definitions/UserCommonAttributes'
    - required:
      - id
      properties:
        id:
          type: integer
          example: 1
        features:
          description: If existing set of calling features need to be assigned the to the user then various features can be assigned to a user. If new set of features need to be assigned then please pass the site_id and template_id. If the user is being updated then site_id and template_id will be ignored.
          $ref: '#/definitions/UserFeatures'
        links:
          type: array
          example:
          - href: /users/1
            rel: self
            title: User Details
            method: GET
          - href: /users/1
            rel: Delete
            title: Delele User
            method: DELETE
          - href: /users/1
            rel: Edit
            title: Edit User
            method: PUT
          - href: /account
            rel: account
            title: Account
            method: GET
          items:
            $ref: '#/definitions/linkDescription'
  UserParams:
    allOf:
    - $ref: '#/definitions/UserCommonAttributes'
    - properties:
        features:
          $ref: '#/definitions/UserFeatureParams'
        site_id:
          type: integer
          example: 6
        template_id:
          type: string
          example: "1"
  UserCommonAttributes:
    required:
    - active
    - email
    - first_name
    - last_name
    - locale
    - role
    properties:
      active:
        type: boolean
        example: true
      first_name:
        type: string
        example: Jane
      last_name:
        type: string
        example: Doe
      email:
        type: string
        example: jane.doe@gmail.com
      role:
        type: string
        example: administrator
      locale:
        type: string
        example: en
  UserFeatureName:
    type: object
    properties:
      name:
        type: string
  UserFeatures:
    properties:
      devices:
        type: array
        items:
          $ref: '#/definitions/Device'
      voice_mail_boxes:
        type: array
        items:
          $ref: '#/definitions/VoiceMailBox'
      ring_groups:
        type: array
        items:
          $ref: '#/definitions/RingGroup'
      extensions:
        type: array
        items:
          $ref: '#/definitions/Extension'
      phone_numbers:
        type: array
        items:
          $ref: '#/definitions/PhoneNumber'
      conference_rooms:
        type: array
        items:
          $ref: '#/definitions/ConferenceRoom'
      fax_machines:
        type: array
        items:
          $ref: '#/definitions/FaxMachine'
      forwards:
        type: array
        items:
          $ref: '#/definitions/Forward'
      schedules:
        type: array
        items:
          $ref: '#/definitions/Schedule'
  UserFeatureParams:
    type: object
    properties:
      devices:
        type: array
        example:
        - 10
        items:
          $ref: '#/definitions/SwitchableId'
      voice_mail_boxes:
        type: array
        example:
        - 123
        items:
          $ref: '#/definitions/SwitchableId'
      ring_groups:
        type: array
        example:
        - 43
        items:
          $ref: '#/definitions/SwitchableId'
      extensions:
        type: array
        example:
        - 42
        items:
          $ref: '#/definitions/SwitchableId'
      phone_numbers:
        type: array
        example:
        - 43
        items:
          $ref: '#/definitions/SwitchableId'
      conference_rooms:
        type: array
        example:
        - 43
        items:
          $ref: '#/definitions/SwitchableId'
      fax_machines:
        type: array
        example:
        - 43
        items:
          $ref: '#/definitions/SwitchableId'
      forwards:
        type: array
        example:
        - 43
        items:
          $ref: '#/definitions/SwitchableId'
      schedules:
        type: array
        example:
        - 43
        items:
          $ref: '#/definitions/SwitchableId'
  SwitchableId:
    type: integer
    description: This is id of switchable
  MobileDeviceCredentials:
    properties:
      login:
        type: string
        example: john-doe-login
      password:
        type: string
        example: 9mxl3wWg8R5cSb8DE86Vu2YeWMo
      dns_name:
        type: string
        example: john-doe.uc.leap.tel
      name:
        type: string
        example: John Doe mobile device
  CreditCardList:
    properties:
      credit_cards:
        type: array
        items:
          $ref: '#/definitions/CreditCard'
    example:
      credit_cards:
      - id: 1
        name: Primary Credit Card
        priority: 1
        active: true
        expired: false
        verified: true
      - href: /credit-cards/1
        rel: self
        title: Credit Card Details
        method: GET
      - href: /credit-cards/1
        rel: Delete
        title: Delete Credit Card
        method: DELETE
      - href: /credit-cards/1
        rel: Edit
        title: Edit Credit Card
        method: PUT
      - href: /credit-cards/1/verify
        rel: Verify
        title: Verify Credit Card
        method: PATCH
      links:
      - href: /credit-cards
        rel: Self
        title: Credit Cards
        method: GET
  CreditCard:
    required:
    - active
    - expired
    - id
    - name
    - priority
    - verified
    properties:
      id:
        type: integer
      name:
        type: string
      priority:
        type: integer
      active:
        type: boolean
      expired:
        type: boolean
      verified:
        type: boolean
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      id: 1
      name: Primary Credit Card
      priority: 1
      active: true
      expired: false
      verified: true
      links:
      - href: /credit-cards/1
        rel: self
        title: Credit Card Details
        method: GET
      - href: /credit-cards/1
        rel: Delete
        title: Delete Credit Card
        method: DELETE
      - href: /credit-cards/1
        rel: Edit
        title: Edit Credit Card
        method: PUT
      - href: /credit-cards/1/verify
        rel: Verify
        title: Verify Credit Card
        method: PATCH
  CreditCardParams:
    required:
    - active
    - addr1
    - cardexpmonth
    - cardexpyear
    - cardnumber
    - cardtype
    - city
    - country
    - cvv
    - fname
    - lname
    - name
    - postalcode
    - priority
    properties:
      name:
        type: string
        example: Main Credit Card
      active:
        type: boolean
        example: true
        description: Inactive cards will not be charged when a payment is made.
      priority:
        type: integer
        example: 100
        description: "When you make a payment, we will attempt to charge payment methods in order from highest priority (closest to 100) to lowest."
        minimum: 0
        maximum: 100
      fname:
        type: string
        example: John
        description: The card holder's first name.
      lname:
        type: string
        example: Doe
        description: The card holder's last name.
      addr1:
        type: string
        example: 233 E Wacker Drive
        description: Card holder\'s street address.
      addr2:
        type: string
        example: "Suite #1106"
        description: "Apartment or suite number, if applicable."
      country:
        type: string
        example: US
        description: Country where card holder resides.
      state:
        type: string
        example: IL
        description: "State where card holder resides, if applicable."
      city:
        type: string
        example: Chicago
        description: City where card holder resides.
      postalcode:
        type: string
        example: "60601"
        description: Postal/ZIP code where card holder resides.
      email:
        type: string
        example: john.doe@teliax.com
        description: Contact email of card holder.
      dayphone:
        type: string
        description: Daytime phone number of card holder.
      eveningphone:
        type: string
        description: Evening phone number of card holder.
      cardtype:
        type: string
        example: Visa
        description: Type of credit card.
        enum:
        - Visa
        - Mastercard
        - American Express
        - Discover
      cardnumber:
        type: string
        example: "4111111111111111"
        description: Credit card number.
      cardexpmonth:
        type: string
        example: "02"
        description: Month of credit card's expiration date.
      cardexpyear:
        type: string
        example: "2024"
        description: Year of credit card\'s expiration date.
      cvv:
        type: string
        example: "786"
        description: CVV on back of credit card.
  CreditCardUpdateParams:
    required:
    - active
    - name
    - priority
    properties:
      name:
        type: string
        example: Main Credit Card
      active:
        type: boolean
        example: true
      priority:
        type: integer
        example: 99
        description: "When you make a payment, we will attempt to charge payment methods in order from highest priority (closest to 100) to lowest."
        minimum: 0
        maximum: 100
  StatementList:
    type: object
    properties:
      statements:
        type: array
        description: Array of Statements
        items:
          $ref: '#/definitions/Statement'
      total_items:
        type: string
        example: "350"
        description: Total numnber of items
        readOnly: true
      total_pages:
        type: string
        example: "7"
        description: Total number of pages
        readOnly: true
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      statements:
      - id: 1
        created_at: 02/02/2018
        closed_at: 02/02/2018
        image: http://example.com/image.jpg
        export: http://example.com/image.pdf
        cdr: http://example.com/cdr/export.csv
        links:
        - href: /statements/1
          rel: self
          method: GET
      total_items: 350
      total_pages: 7
      links:
      - href: /statements?page_size=50&page=3
        rel: self
        title: Self
      - href: /statements?page_size=50&page=1
        rel: first
        title: First Page
      - href: /statements?page_size=50&page=4
        rel: next
        title: Next Page
      - href: /statements?page_size=50&page=2
        rel: prev
        title: Previous Page
      - href: /statements?page_size=50&page=5
        rel: last
        title: Last Page
  Statement:
    properties:
      id:
        type: integer
      created_at:
        type: string
      closed_at:
        type: string
      image:
        type: string
      export:
        type: string
      cdr:
        type: string
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      id: 1
      created_at: 02/02/2018
      closed_at: 02/02/2018
      image: http://example.com/image.jpg
      export: http://example.com/export.csv
      cdr: http://example.com/cdr/export.csv
      links:
      - href: /statements/1
        rel: self
        title: Self
        method: GET
  PaymentList:
    type: object
    properties:
      payments:
        type: array
        items:
          $ref: '#/definitions/Payment'
      total_items:
        type: string
        example: "350"
        description: Total numnber of items
        readOnly: true
      total_pages:
        type: string
        example: "7"
        description: Total number of pages
        readOnly: true
      links:
        type: array
        example:
        - href: /payments?page_size=3&page=3
          rel: self
          title: Self
        - href: /payments?page_size=3&page=1
          rel: first
          title: First Page
        - href: /payments?page_size=3&page=4
          rel: next
          title: Next page
        - href: /payments?page_size=3&page=2
          rel: prev
          title: Previous Page
        - href: /payments?page_size=3&page=7
          rel: last
          title: Last Page
        items:
          $ref: '#/definitions/linkDescription'
  Payment:
    properties:
      amount_in_dollars:
        type: string
      success:
        type: boolean
      transaction_id:
        type: integer
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      amount_in_dollars: "10.00"
      success: true
      transaction_id: 10001
      links:
      - href: /payments?page=1&page_size=10
        title: Payments
  PlanList:
    properties:
      current_plan:
        $ref: '#/definitions/Plan'
      available_plans:
        type: array
        items:
          $ref: '#/definitions/Plan'
  Plan:
    allOf:
    - $ref: '#/definitions/PlanParams'
    - required:
      - finalized
      - id
      - items
      - price_deck
      - total_cost
      properties:
        id:
          type: integer
        finalized:
          type: boolean
        total_cost:
          type: string
        packages:
          $ref: '#/definitions/PackagesList'
        price_deck:
          type: string
        items:
          type: array
          items:
            $ref: '#/definitions/Item'
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 1
        name: Unlimited Device Plan
        description: This plan contains unlimited devices!
        removable: false
        active: true
        approved: true
        finalized: true
        totla_cost: 20
        price_deck: Main Price Deck
        items:
        - id: 449
          name: Emergency call
          item_type: CDR
          item_rules: emergency
          price_deck_id: 1
        links:
        - href: /plan/1
          rel: self
          title: Plan Details
          method: GET
        - href: /plan/1/pacakges
          rel: Packages
          title: Packages
          method: GET
  PlanParams:
    required:
    - active
    - description
    - name
    - price_deck_id
    - removable
    properties:
      name:
        type: string
        example: Unlimited Device Plan
      description:
        type: string
        example: This plan contains unlimited devices!
      removable:
        type: boolean
        example: true
      active:
        type: boolean
        example: true
      approved:
        type: boolean
        example: true
      price_deck_id:
        type: integer
        example: 233
  PackagesList:
    properties:
      packages:
        $ref: '#/definitions/IncludedAndOptionalPackages'
      links:
        type: array
        example:
        - href: /plan/packages
          rel: self
          title: Packages
          method: GET
        items:
          $ref: '#/definitions/linkDescription'
  IncludedAndOptionalPackages:
    properties:
      included_packages:
        type: array
        items:
          $ref: '#/definitions/Package'
      optional_packages:
        type: array
        items:
          $ref: '#/definitions/Package'
  Package:
    allOf:
    - $ref: '#/definitions/PackageParams'
    - required:
      - id
      - included
      - item_rules
      - item_type
      - price
      - removable
      properties:
        id:
          type: integer
        name:
          type: string
        included:
          type: boolean
        item_type:
          type: string
        item_rules:
          type: string
        item_quantity:
          type: integer
        price:
          type: integer
        plan:
          type: string
        removable:
          type: boolean
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 94
        name: Plan Subscription
        included: true
        item_type: subscription
        item_rules: ""
        item_quantity: 1
        price: 2500
        plan: Unlimited Device Plan
        removeable: false
        links:
        - href: /plan/package/94
          rel: self
          title: Package Details
          method: GET
        - href: /plan/package/94/add
          rel: add
          title: Add Package
          method: PATCH
        - href: /plan/package/94/remove
          rel: remove
          title: Remove Package
          method: PATCH
  PackageParams:
    required:
    - item_quantity
    - item_type_and_rules
    - name
    - plan_id
    properties:
      name:
        type: string
        example: Plan Subscription
      item_type_and_rules:
        type: string
        example: subscription
      removeable:
        type: boolean
        example: false
      item_quantity:
        type: integer
        example: 1
      price_in_dollars:
        type: string
        example: "2500"
      plan_id:
        type: string
        example: "22"
      included:
        type: boolean
        example: false
  Item:
    allOf:
    - $ref: '#/definitions/ItemParams'
    - required:
      - id
      properties:
        id:
          type: string
      example:
        id: 449
        name: Emergency Call
        item_type: cdr
        items_rules: emergency
        item_price: "0.0"
        price_deck: Teliax HQ
        links:
        - href: /items/449
          rel: Update
          title: Update Item
          method: PUT
  ItemParams:
    required:
    - item_price
    - item_rules
    - item_type
    - name
    properties:
      name:
        type: string
        example: Emergency Call
      item_type:
        type: string
        example: cdr
      item_rules:
        type: string
        example: "0.0"
      item_price:
        type: string
        example: Teliax HQ
      tax_category:
        type: integer
        example: 59
      tax_code:
        type: integer
        example: 8
  NumbersAndLocations:
    properties:
      available_numbers:
        type: array
        items:
          $ref: '#/definitions/NumberAndLocation'
  NumberAndLocation:
    properties:
      number:
        type: string
      location:
        type: string
    example:
      number: 3125233844
      location: Chicago
  TemplateList:
    type: object
    properties:
      templates:
        type: array
        description: Array of templates
        items:
          $ref: '#/definitions/Template'
      total_items:
        type: string
        example: "350"
        description: Total numnber of items
        readOnly: true
      total_pages:
        type: string
        example: "7"
        description: Total number of pages
        readOnly: true
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
  Template:
    allOf:
    - $ref: '#/definitions/TemplateParams'
    - required:
      - id
      properties:
        id:
          type: integer
          example: 1
        last_updated_by:
          type: string
          example: John Doe
        owner:
          type: string
          example: Leap Tel
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
  TemplateParams:
    required:
    - features
    - name
    properties:
      name:
        type: string
        example: Sales Team
      features:
        $ref: '#/definitions/TemplateSwitchable'
  TemplateSwitchable:
    properties:
      switchable:
        type: string
      position:
        type: integer
      attrs:
        $ref: '#/definitions/TemplateSwitchable_attrs'
      destinations:
        type: array
        items:
          $ref: '#/definitions/TemplateSwitchable'
      failover:
        $ref: '#/definitions/TemplateSwitchable'
      target_type:
        type: string
    example:
      switchable: PhoneNumber
      position: 1
      attrs:
      - name: name
        derivative: calculated
        default: Phone Number
      destinations:
      - switchable: RingGroup
        position: 2
        target_type: destination
        attrs:
        - name: name
          derivative: calculated
          default: Ring Group
        - name: name
          derivative: predefined
          default: "120"
        destinations:
        - switchable: Device
          target_type: destination
          position: 3
          attrs:
          - name: name
            derivative: calculated
            default: Device
          - name: login
            derivative: calculated
            default: ""
          - name: channel_limit
            derivative: predefined
            default: "2"
          - name: timeout
            derivative: predefined
            default: "120"
          - name: acl
            derivative: predefined
            default: 0.0.0.0/0
          - name: caller_id_name
            derivative: prompt
            default: ""
          - name: caller_id_number
            derivative: prompt
            default: ""
          destinations: []
          failover: {}
        - switchable: Device
          target_type: destination
          position: 4
          attrs:
          - name: name
            derivative: calculated
            default: Device
          - name: login
            derivative: calculated
            default: ""
          - name: channel_limit
            derivative: predefined
            default: "2"
          - name: timeout
            derivative: predefined
            default: "120"
          - name: acl
            derivative: predefined
            default: 0.0.0.0/0
          - name: caller_id_name
            derivative: prompt
            default: ""
          - name: caller_id_number
            derivative: prompt
            default: ""
          destinations: []
          failover: {}
      failover:
        switchable: VoiceMailBox
        target_type: failover
        position: 5
        attrs:
        - name: name
          derivative: calculated
          default: Voice Mail Box
        - name: notification_emails
          derivative: calculated
          default: ""
        destinations: []
        failover: {}
  SiteList:
    type: object
    properties:
      sites:
        type: array
        description: Array of Sites
        items:
          $ref: '#/definitions/Site'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      sites:
      - id: 6
        dns_extension: hq
        dns_name: hq.ivy.teliax.com
        active: true
        caller_id_name: Teliax Inc
        caller_id_number: "3125233844"
        thin_client_id: 12
        acl: 0.0.0.0/0
        channel_limit: 55
        music_on_hold: http://example.com/music_on_hold.ogg
        permitted_country_codes:
        - INTERSTATE|INTRASTATE|LOCAL|TOLLFREE
        - 1403|1587|1780|1587|1250|1236|1604|1778|1236|1204|1431|1506|1709|1902|1867|1416|1647|1437|1519|1226|1613|1343|1705|1249|1807|1905|1289|1365|1418|1581|1450|1579|1514|1438|1819|1873|1306|1639
        - 1787|1939
        - "1345"
        - 1809|1829|1849
        - "30"
        - "33"
        - "34"
        - "358"
        - "36"
        - "381"
        - "39"
        - "44"
        - "441481"
        - "441534"
        - "46"
        - "47"
        - "48"
        - "49"
        - "506"
        - "507"
        - "51"
        - "52"
        - "55"
        - "57"
        - "593"
        - "91"
        links:
        - href: /sites/6
          rel: self
          title: Site Details
          method: GET
        - href: /sites/6
          rel: Delete
          title: Delete Site
          method: DELETE
        - href: /sites/6
          rel: Edit
          title: Edit Site
          method: PUT
      links:
      - href: /sites
        rel: self
        title: Sites
        method: GET
  Site:
    allOf:
    - $ref: '#/definitions/SiteCoreAttributes'
    - required:
      - id
      properties:
        id:
          type: integer
        dns_name:
          type: string
        music_on_hold:
          type: string
        thin_client:
          type: string
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 6
        dns_extension: hq
        dns_name: hq.ivy.teliax.com
        active: true
        caller_id_name: Teliax Inc
        caller_id_number: "3125233844"
        thin_client_id: 12
        thin_client: Denver Bonsai 7
        acl: 0.0.0.0/0
        channel_limit: 55
        music_on_hold: http://example.com/music_on_hold.ogg
        permitted_country_codes:
        - INTERSTATE|INTRASTATE|LOCAL|TOLLFREE
        - 1787|1939
        - "1345"
        links:
        - href: /sites/6
          rel: self
          title: Site Details
          method: GET
        - href: /sites/6
          rel: Delete
          title: Delete Site
          method: DELETE
        - href: /sites/6
          rel: edit
          title: Edit Site
          method: PUT
        - href: /sites/6/locations
          rel: locations
          title: Locations
          method: GET
        - href: /sites/6/devices
          rel: devices
          title: Devices
          method: GET
        - href: /sites/6/conference-rooms
          rel: conference_rooms
          title: Conference Rooms
          method: GET
        - href: /sites/6/e911s
          rel: e911s
          title: E911
          method: GET
        - href: /sites/6/extensions
          rel: extensions
          title: Extensions
          method: GET
        - href: /sites/6/fax-machines
          rel: fax_machines
          title: Fax Machines
          method: GET
        - href: /sites/6/forwards
          rel: forwards
          title: Forwards
          method: GET
        - href: /sites/6/menus
          rel: menus
          title: Menus
          method: GET
        - href: /sites/6/phone-numbers
          rel: phone_numbers
          title: Phone Numbers
          method: GET
        - href: /sites/6/ring-groups
          rel: ring_groups
          title: Ring Groups
          method: GET
        - href: /sites/6/schedules
          rel: schedules
          title: Schedules
          method: GET
        - href: /sites/6/sip-trunks
          rel: sip_trunks
          title: Sip Trunks
          method: GET
        - href: /sites/6/voice-mail-boxes
          rel: voice_mail_boxes
          title: Voice Mail Boxes
          method: GET
  SiteParams:
    allOf:
    - $ref: '#/definitions/SiteCoreAttributes'
    - required:
      - permissions
      properties:
        permissions:
          $ref: '#/definitions/SitePermission'
  SitePermission:
    required:
    - site_member
    - site_owner
    properties:
      site_owner:
        type: array
        items:
          type: string
      site_member:
        type: array
        items:
          type: string
  SiteCoreAttributes:
    required:
    - acl
    - active
    - caller_id_name
    - caller_id_number
    - channel_limit
    - dns_extension
    - permitted_country_codes
    - thin_client_id
    properties:
      active:
        type: boolean
        example: true
      caller_id_name:
        type: string
        example: Teliax Inc
      caller_id_number:
        type: integer
        example: 3125233844
      thin_client_id:
        type: integer
        example: 1
      dns_extension:
        type: string
        example: hq
      permitted_country_codes:
        type: array
        example:
        - INTERSTATE|INTRASTATE|LOCAL|TOLLFREE
        - 1403|1587|1780|1587|1250|1236|1604|1778|1236|1204|1431|1506|1709|1902|1867|1416|1647|1437|1519|1226|1613|1343|1705|1249|1807|1905|1289|1365|1418|1581|1450|1579|1514|1438|1819|1873|1306|1639
        description: Array of Country Codes
        items:
          type: string
      acl:
        type: string
        example: 0.0.0.0/0
      channel_limit:
        type: integer
        example: 55
        minimum: 0
        maximum: 1000
  SiteDestinationList:
    properties:
      destinations:
        type: array
        description: Array of Destinations
        items:
          $ref: '#/definitions/FailoverAndDestination'
      links:
        type: array
        example:
        - href: /sites/1/potential_destinations
          rel: self
          title: Potential Destinations
          method: GET
        items:
          $ref: '#/definitions/linkDescription'
  SiteFailOverList:
    properties:
      fail_overs:
        type: array
        items:
          $ref: '#/definitions/FailoverAndDestination'
      links:
        type: array
        example:
        - href: /sites/1/potential_fail_overs
          rel: self
          title: Potential Fail Overs
          method: GET
        items:
          $ref: '#/definitions/linkDescription'
  FailoverAndDestination:
    allOf:
    - $ref: '#/definitions/FailoverAndDestinationCodeParam'
    - required:
      - name
      properties:
        name:
          type: string
      example:
        name: Netrio - Leap Brand (forward:1254)
        code: forward:1254
  FailoverAndDestinationCodeParam:
    required:
    - code
    properties:
      code:
        type: string
        example: forward:1254
  LocationList:
    type: object
    properties:
      locations:
        type: array
        description: Array of Locations
        items:
          $ref: '#/definitions/Location'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      locations:
      - id: 6
        name: Teliax Office
        house_number: "2150"
        house_number_suffix: ""
        unit_location: Ste 310
        street: West 29th ave
        city: Denver
        state_province: CO
        postal_code: "80211"
        country_code: US
        caller_id_name: Teliax Office
        updated_by: John Doe
        latitude: ""
        e911_enabled: true
        e911_id: 123
        links:
        - href: /sites/6/locations/9
          rel: self
          title: E911 Details
          method: GET
        - href: /sites/6/locations/9
          rel: Delete
          title: Delete E911
          method: DELETE
        - href: /sites/6/locations/9
          rel: Edit
          title: Edit Location
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
      links:
      - href: /sites/6/locations
        rel: self
        title: Locations
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  Location:
    allOf:
    - $ref: '#/definitions/LocationParams'
    - required:
      - id
      properties:
        id:
          type: integer
        e911_id:
          type: integer
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 6
        name: Teliax Office
        house_number: "2150"
        house_number_suffix: ""
        unit_location: Ste 310
        street: West 29th ave
        city: Denver
        state_province: CO
        postal_code: "80211"
        country_code: US
        caller_id_name: Teliax Office
        updated_by: John Doe
        latitude: ""
        longitude: ""
        e911_enabled: true
        e911_id: 123
        links:
        - href: /sites/6/locations/6
          rel: self
          title: Location Details
          method: GET
        - href: /sites/6/locations/6
          rel: Delete
          title: Delete Location
          method: DELETE
        - href: /sites/6/locations/6
          rel: Edit
          title: Edit Location
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
  LocationParams:
    required:
    - name
    properties:
      name:
        type: string
        example: Teliax Office
      house_number:
        type: string
        example: "2150"
      house_number_suffix:
        type: string
        example: ""
      unit_location:
        type: string
        example: Ste 310
      street:
        type: string
        example: West 29th ave
      city:
        type: string
        example: Denver
      state_province:
        type: string
        example: CO
      postal_code:
        type: string
        example: "80211"
      country_code:
        type: string
        example: US
      latitude:
        type: string
        example: ""
      longitude:
        type: string
        example: ""
      updated_by:
        type: string
        example: John Doe
      caller_id_name:
        type: string
        example: John Doe
      e911_enabled:
        type: boolean
        example: true
  DeviceList:
    type: object
    properties:
      devices:
        type: array
        description: Array of Devices
        items:
          $ref: '#/definitions/Device'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      devices:
      - id: 1763
        code: device:1763
        active: true
        name: John Doe Device
        timeout: 120
        caller_id_name: John Doe
        caller_id_number: "3125233844"
        acl: 0.0.0.0/0
        channel_limit: 2
        login: john.doe
        password: safe-password
        user_id: 1
        fail_over:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        site: hq.ivy.teliax.com
        links:
        - href: /sites/6/devices/1
          rel: self
          title: Device Details
          method: GET
        - href: /sites/6/devices/1
          rel: Delete
          title: Delete Device
          method: DELETE
        - href: /sites/6/devices/1
          rel: Edit
          title: Edit Device
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
      links:
      - href: /sites/6/devices
        rel: self
        title: Devices
        method: GET
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  Device:
    allOf:
    - $ref: '#/definitions/DeviceCommonAttributes'
    - required:
      - fail_over
      - id
      - password
      - site
      - user_id
      properties:
        id:
          type: integer
        site:
          type: string
        password:
          type: string
        fail_over:
          $ref: '#/definitions/FailoverAndDestination'
        user_id:
          type: integer
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 1763
        code: device:1763
        active: true
        name: John Doe's Device
        timeout: 120
        caller_id_name: John Doe
        caller_id_number: "3125233844"
        acl: 0.0.0.0/0
        channel_limit: 2
        login: john_doe
        password: safe-password
        user_id: 1
        fail_over:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        site: hq.ivy.teliax.com
        links:
        - href: /sites/6/devices/1
          rel: self
          title: Device Details
          method: GET
        - href: /sites/6/devices/1
          rel: Delete
          title: Delete Device
          method: DELETE
        - href: /sites/6/devices/1
          rel: Edit
          title: Edit Device
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
  DeviceParams:
    allOf:
    - $ref: '#/definitions/DeviceCommonAttributes'
    - $ref: '#/definitions/DeviceFailoverParam'
  DeviceCommonAttributes:
    required:
    - acl
    - active
    - caller_id_name
    - caller_id_number
    - channel_limit
    - login
    - name
    - timeout
    properties:
      name:
        type: string
        example: John Doe's Device
      login:
        type: string
        example: john_doe
      channel_limit:
        type: integer
        example: 2
      timeout:
        type: integer
        example: 120
      caller_id_name:
        type: string
        example: John Doe
      caller_id_number:
        type: integer
        example: 3125233844
      acl:
        type: string
        example: 0.0.0.0/0
      active:
        type: boolean
        example: true
  DeviceFailoverParam:
    properties:
      fail_over:
        $ref: '#/definitions/FailoverAndDestinationCodeParam'
  DeviceStatus:
    type: object
    properties:
      devices:
        type: array
        description: Array of login names for registered devices
        items:
          type: string
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      devices:
      - john_doe
      - jane_doe
      links:
      - href: /sites/6/devices/status
        rel: self
        title: Devices
        method: GET
      - href: /sites/6/devices
        rel: List
        title: Devices
        method: GET
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  ConferenceRoomList:
    type: object
    properties:
      conference_rooms:
        type: array
        description: Array of Conference Rooms
        items:
          $ref: '#/definitions/ConferenceRoom'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      conference_rooms:
      - id: 3
        code: conference_room:3
        name: John Doe
        profile: default
        pin: 6778
        moderator_pin: 5678
        greeting: http://example.com/greeting.ogg
        music_on_hold: http://example.com/music_on_hold.ogg
        user_id: 1
        links:
        - href: /sites/6/conference-rooms/7
          rel: self
          title: Conference Room Details
          method: GET
        - href: /sites/6/conference-rooms/7
          rel: Delete
          title: Delete Conference Room
          method: DELETE
        - href: /sites/6/conference-rooms/7
          rel: Edit
          title: Edit Conference Room
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
      links:
      - href: /sites/6/conference-rooms
        rel: self
        title: Conference Rooms
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  ConferenceRoom:
    allOf:
    - $ref: '#/definitions/ConferenceRoomParams'
    - required:
      - greeting
      - id
      - music_on_hold
      - user_id
      properties:
        id:
          type: integer
        music_on_hold:
          type: string
        greeting:
          type: string
        user_id:
          type: integer
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 3
        code: conference_room:3
        name: John Doe
        profile: default
        pin: 6778
        moderator_pin: 5678
        greeting: http://example.com/greeting.ogg
        music_on_hold: http://example.com/music_on_hold.ogg
        user_id: 1
        links:
        - href: /sites/6/conference-rooms/7
          rel: self
          title: Conference Room Details
          method: GET
        - href: /sites/6/conference-rooms/7
          rel: Delete
          title: Delete Conference Room
          method: DELETE
        - href: /sites/6/conference-rooms/7
          rel: Edit
          title: Edit Conference Room
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
  ConferenceRoomParams:
    required:
    - moderator_pin
    - name
    - pin
    - profile
    properties:
      name:
        type: string
      profile:
        type: string
      pin:
        type: string
      moderator_pin:
        type: string
  E911List:
    type: object
    properties:
      e911s:
        type: array
        description: Array of E911s
        items:
          $ref: '#/definitions/E911'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      e911s:
      - id: 19
        code: e911:19
        name: Teliax Office
        house_number: "2150"
        house_number_suffix: ""
        unit_location: Ste 310
        street: West 29th ave
        city: Denver
        state_province: CO
        postal_code: "80211"
        country_code: US
        caller_id_name: Teliax Office
        latitude: ""
        user_id: 1
        links:
        - href: /sites/6/e911s/9
          rel: self
          title: E911 Details
          method: GET
        - href: /sites/6/e911s/9
          rel: Delete
          title: Delete E911
          method: DELETE
        - href: /sites/6/e911s/9
          rel: Edit
          title: Edit E911
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
      links:
      - href: /sites/6/e911s
        rel: self
        title: E911s
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  E911:
    allOf:
    - $ref: '#/definitions/E911Params'
    - required:
      - id
      - user_id
      properties:
        id:
          type: integer
        user_id:
          type: integer
        links:
          type: array
          example:
          - href: "/sites/{site_id}/e911s/{id}"
            rel: self
            method: GET
          - href: "/sites/{site_id}/e911s/{id}"
            rel: Delete
            method: DELETE
          - href: "/sites/{site_id}/e911s/{id}"
            rel: Edit
            method: PUT
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 19
        code: e911:19
        name: Teliax Office
        house_number: "2150"
        house_number_suffix: ""
        unit_location: Ste 310
        street: West 29th ave
        city: Denver
        state_province: CO
        postal_code: "80211"
        country_code: US
        caller_id_name: Teliax Office
        latitude: ""
        longitude: ""
        user_id: 1
        links:
        - href: /sites/6/e911s/9
          rel: self
          title: E911 Details
          method: GET
        - href: /sites/6/e911s/9
          rel: Delete
          title: Delete E911
          method: DELETE
        - href: /sites/6/e911s/9
          rel: Edit
          title: Edit E911
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
  E911Params:
    required:
    - caller_id_name
    - city
    - country_code
    - house_number
    - house_number_suffix
    - latitude
    - longitude
    - name
    - postal_code
    - state_province
    - street
    - unit_location
    properties:
      name:
        type: string
        example: Teliax Office
      caller_id_name:
        type: string
        example: Teliax Office
      house_number:
        type: string
        example: "2150"
      house_number_suffix:
        type: string
        example: ""
      unit_location:
        type: string
        example: Ste 310
      street:
        type: string
        example: West 29th ave
      city:
        type: string
        example: Denver
      state_province:
        type: string
        example: CO
      postal_code:
        type: string
        example: "80211"
      country_code:
        type: string
        example: US
      latitude:
        type: string
        example: ""
      longitude:
        type: string
        example: ""
  ExtensionList:
    type: object
    properties:
      extensions:
        type: array
        description: Array of Extensions
        items:
          $ref: '#/definitions/Extension'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      extensions:
      - id: 14
        code: extension:14
        name: John Doe
        number: "5467"
        destination:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        site: hq.uc.leap.tel
        user_id: 1
        links:
        - href: /sites/6/extensions/14
          rel: self
          title: Extension Details
          method: GET
        - href: /sites/6/extensions/14
          rel: Delete
          title: Delete Extension
          method: DELETE
        - href: /sites/6/extensions/14
          rel: Edit
          title: Edit Extension
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
      links:
      - href: /sites/6/extensions
        rel: self
        title: Extensions
        method: GET
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  Extension:
    allOf:
    - $ref: '#/definitions/ExtensionCammonAttributes'
    - required:
      - destination
      - id
      - site
      properties:
        id:
          type: integer
        site:
          type: string
        destination:
          $ref: '#/definitions/FailoverAndDestination'
        user_id:
          type: integer
        links:
          type: array
          example:
          - href: "/sites/{site_id}/extensions/{id}"
            rel: self
            method: GET
          - href: "/sites/{site_id}/extensions/{id}"
            rel: Delete
            method: DELETE
          - href: "/sites/{site_id}/extensions/{id}"
            rel: Edit
            method: PUT
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 14
        code: extension:14
        name: John Doe
        number: "5467"
        destination:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        site: hq.uc.leap.tel
        user_id: 1
        links:
        - href: /sites/6/extensions/14
          rel: self
          title: Extension Details
          method: GET
        - href: /sites/6/extensions/14
          rel: Delete
          title: Delete Extension
          method: DELETE
        - href: /sites/6/extensions/14
          rel: Edit
          title: Edit Extension
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
  ExtensionParams:
    allOf:
    - $ref: '#/definitions/ExtensionCammonAttributes'
    - $ref: '#/definitions/ExtensionDestinationParam'
  ExtensionCammonAttributes:
    required:
    - name
    - number
    properties:
      name:
        type: string
        example: John Doe
      number:
        type: string
        example: "5467"
  ExtensionDestinationParam:
    properties:
      destination:
        $ref: '#/definitions/FailoverAndDestinationCodeParam'
  FaxMachineList:
    type: object
    properties:
      fax_machines:
        type: array
        description: Array of Fax Machines
        items:
          $ref: '#/definitions/FaxMachine'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      fax_machines:
      - id: 3
        code: fax_machine:3
        name: TLX Port
        notification_emails: john.doe@teliax.com
        user_id: 1
        links:
        - href: /sites/6/fax-machines/3
          rel: self
          title: Fax Machine Details
          method: GET
        - href: /sites/6/fax-machines/3
          rel: Delete
          title: Delete Fax Machine
          method: DELETE
        - href: /sites/6/fax-machines/3
          rel: Edit
          title: Edit Fax Machine
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
      links:
      - href: /sites/6/fax-machines
        rel: self
        title: Fax Machines
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  FaxMachine:
    allOf:
    - $ref: '#/definitions/FaxMachineParams'
    - required:
      - id
      - site
      properties:
        id:
          type: integer
        site:
          type: string
        user_id:
          type: integer
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 3
        code: fax_machine:3
        name: TLX Port
        notification_emails: john.doe@teliax.com
        site: hq.uc.leap.tel
        user_id: 1
        links:
        - href: /sites/6/fax-machines/3
          rel: self
          title: Fax Machine Details
          method: GET
        - href: /sites/6/fax-machines/3
          rel: Delete
          title: Delete Fax Machine
          method: DELETE
        - href: /sites/6/fax-machines/3
          rel: Edit
          title: Edit Fax Machine
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
  FaxMachineParams:
    required:
    - name
    - notification_emails
    properties:
      name:
        type: string
        example: TLX Port
      notification_emails:
        type: string
        example: john.doe@teliax.com
  ForwardList:
    type: object
    properties:
      forwards:
        type: array
        description: Array of Forwards
        items:
          $ref: '#/definitions/Forward'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      forwards:
      - id: 12
        code: forward:12
        name: Sales Mobile
        timeout: 20
        destination_dial_string: "3034569999"
        user_id: 1
        fail_over:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        links:
        - href: /sites/6/forwards/12
          rel: self
          title: Forward Details
          method: GET
        - href: /sites/6/forwards/12
          rel: Delete
          title: Delete Forward
          method: DELETE
        - href: /sites/6/forwards/12
          rel: Edit
          title: Edit Forward
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
      links:
      - href: /sites/6/forwards
        rel: self
        title: Forwards
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  Forward:
    allOf:
    - $ref: '#/definitions/ForwardCommonAttributes'
    - required:
      - fail_over
      - id
      properties:
        id:
          type: integer
        fail_over:
          $ref: '#/definitions/FailoverAndDestinationCodeParam'
        user_id:
          type: integer
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 12
        code: forward:12
        name: Sales Mobile
        timeout: 20
        destination_dial_string: "3034569999"
        user_id: 1
        fail_over:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        links:
        - href: /sites/6/forwards/12
          rel: self
          title: Forward Details
          method: GET
        - href: /sites/6/forwards/12
          rel: Delete
          title: Delete Forward
          method: DELETE
        - href: /sites/6/forwards/12
          rel: Edit
          title: Edit Forward
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
  ForwardParams:
    allOf:
    - $ref: '#/definitions/ForwardCommonAttributes'
    - $ref: '#/definitions/ForwardFailoverParam'
  ForwardCommonAttributes:
    required:
    - destination_dial_string
    - name
    - timeout
    properties:
      name:
        type: string
        example: John Doe Mobile
      timeout:
        type: integer
        example: 20
      destination_dial_string:
        type: string
        example: "3125233844"
  ForwardFailoverParam:
    required:
    - fail_over
    properties:
      fail_over:
        $ref: '#/definitions/FailoverAndDestinationCodeParam'
  MenuList:
    type: object
    properties:
      menus:
        type: array
        description: Array of Menus
        items:
          $ref: '#/definitions/Menu'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      menus:
      - id: 2
        code: menu:2
        greeting: http://example.com/2.ogg
        name: Closed
        pin: "0324"
        user_id: 1
        fail_over:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        option_routes:
          "0":
            name: Reception (forward:1254)
            code: forward:1254
          "1":
            name: Tech Support
            code: forward:1254
          "2":
            name: Customer Support
            code: forward:1254
        links:
        - href: /sites/6/menus/2
          rel: self
          title: Menu Details
          method: GET
        - href: /sites/6/menus/2
          rel: Delete
          title: Delete Menu
          method: DELETE
        - href: /sites/6/menus/2
          rel: Edit
          title: Edit Menu
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
      links:
      - href: /sites/6/menus
        rel: self
        title: Menus
        method: GET
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  Menu:
    required:
    - fail_over
    - greeting
    - id
    - name
    - option_routes
    - pin
    - user_id
    properties:
      id:
        type: integer
      name:
        type: string
      greeting:
        type: string
      pin:
        type: string
      fail_over:
        $ref: '#/definitions/FailoverAndDestination'
      option_routes:
        $ref: '#/definitions/OptionRoutes'
      user_id:
        type: integer
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      id: 2
      code: menu:2
      greeting: http://example.com/2.ogg
      name: Closed
      pin: "0324"
      user_id: 1
      fail_over:
        name: Netrio - Leap Brand (forward:1254)
        code: forward:1254
      option_routes:
        "0":
          name: Reception (forward:1254)
          code: forward:1254
        "1":
          name: Tech Support
          code: forward:1254
        "2":
          name: Customer Support
          code: forward:1254
      links:
      - href: /sites/6/menus/2
        rel: self
        title: Menu Details
        method: GET
      - href: /sites/6/menus/2
        rel: Delete
        title: Delete Menu
        method: DELETE
      - href: /sites/6/menus/2
        rel: Edit
        title: Edit Menu
        method: PUT
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  OptionRoutes:
    properties:
      "0":
        $ref: '#/definitions/FailoverAndDestination'
      "1":
        $ref: '#/definitions/FailoverAndDestination'
      "2":
        $ref: '#/definitions/FailoverAndDestination'
      "3":
        $ref: '#/definitions/FailoverAndDestination'
      "4":
        $ref: '#/definitions/FailoverAndDestination'
      "5":
        $ref: '#/definitions/FailoverAndDestination'
      "6":
        $ref: '#/definitions/FailoverAndDestination'
      "7":
        $ref: '#/definitions/FailoverAndDestination'
      "8":
        $ref: '#/definitions/FailoverAndDestination'
      "9":
        $ref: '#/definitions/FailoverAndDestination'
      '*':
        $ref: '#/definitions/FailoverAndDestination'
  PhoneNumberList:
    type: object
    properties:
      phone_numbers:
        type: array
        description: Array of Phone Numbers
        items:
          $ref: '#/definitions/PhoneNumber'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      phone_numbers:
      - id: 127
        code: phone_number:127
        name: Phone Number - John Doe
        number: "13034124562"
        user_id: 1
        destination:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        links:
        - href: /sites/6/phone-numbers/127
          rel: self
          title: Phone Number Details
          method: GET
        - href: /sites/6/phone-numbers/127
          rel: Delete
          title: Delete Phone Number
          method: DELETE
        - href: /sites/6/phone-numbers/127
          rel: Edit
          title: Edit Phone Number
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
      links:
      - href: /sites/6/phone-numbers
        rel: self
        title: Phone Numbers
        method: GET
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  PhoneNumber:
    allOf:
    - $ref: '#/definitions/PhoneNumberCommonAttributes'
    - required:
      - destination
      - id
      - user_id
      properties:
        id:
          type: integer
        destination:
          $ref: '#/definitions/FailoverAndDestination'
        user_id:
          type: integer
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 127
        code: phone_number:127
        name: Phone Number - John Doe
        number: "13034124562"
        user_id: 1
        destination:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        links:
        - href: /sites/6/phone-numbers/127
          rel: self
          title: Phone Number Details
          method: GET
        - href: /sites/6/phone-numbers/127
          rel: Delete
          title: Delete Phone Number
          method: DELETE
        - href: /sites/6/phone-numbers/127
          rel: Edit
          title: Edit Phone Number
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
  PhoneNumberParams:
    allOf:
    - $ref: '#/definitions/PhoneNumberPartialParams'
    - required:
      - category
      properties:
        category:
          type: string
          example: domestic
  PhoneNumberPartialParams:
    allOf:
    - $ref: '#/definitions/PhoneNumberCommonAttributes'
    - required:
      - destination
      properties:
        destination:
          $ref: '#/definitions/FailoverAndDestinationCodeParam'
  PhoneNumberCommonAttributes:
    required:
    - name
    - number
    properties:
      name:
        type: string
        example: Phone Number - John Doe
      number:
        type: string
        example: "13034124562"
  RingGroupList:
    type: object
    properties:
      ring_groups:
        type: array
        description: Array of Ring Groups
        items:
          $ref: '#/definitions/RingGroup'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      ring_groups:
      - id: 13
        code: ring_group:13
        name: Telaix Heros
        timeout: 30
        destinations:
        - name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        - name: Receptionist (extension:781)
          code: extension:781
        fail_over:
          name: Support (voice_mail_box:23)
          code: voice_mail_box:23
        site: hq.uc.leap.tel
        user_id: 1
        links:
        - href: /sites/6/ring-groups/13
          rel: self
          title: Ring Group Details
          method: GET
        - href: /sites/6/ring-groups/13
          rel: Delete
          title: Delete Ring Group
          method: DELETE
        - href: /sites/6/ring-groups/13
          rel: Edit
          title: Edit Ring Group
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
      links:
      - href: /sites/6/ring-groups
        rel: self
        title: Ring Groups
        method: GET
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  RingGroup:
    allOf:
    - $ref: '#/definitions/RingGroupCommonAttributes'
    - required:
      - destinations
      - fail_over
      - id
      - user_id
      properties:
        id:
          type: integer
        destinations:
          type: array
          items:
            $ref: '#/definitions/FailoverAndDestination'
        fail_over:
          $ref: '#/definitions/FailoverAndDestination'
        user_id:
          type: integer
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 13
        code: ring_group:13
        name: Telaix Heros
        timeout: 30
        destinations:
        - name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        - name: Receptionist (extension:781)
          code: extension:781
        fail_over:
          name: Support (voice_mail_box:23)
          code: voice_mail_box:23
        user_id: 1
        site: hq.uc.leap.tel
        links:
        - href: /sites/6/ring-groups/13
          rel: self
          title: Ring Group Details
          method: GET
        - href: /sites/6/ring-groups/13
          rel: Delete
          title: Delete Ring Group
          method: DELETE
        - href: /sites/6/ring-groups/13
          rel: Edit
          title: Edit Ring Group
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
  RingGroupParams:
    allOf:
    - $ref: '#/definitions/RingGroupCommonAttributes'
    - required:
      - destinations
      - fail_over
      properties:
        destinations:
          type: array
          example:
          - forward:1254
          - extension:781
          items:
            $ref: '#/definitions/FailoverAndDestinationCodeParam'
        fail_over:
          $ref: '#/definitions/FailoverAndDestinationCodeParam'
  RingGroupCommonAttributes:
    required:
    - name
    - timeout
    properties:
      name:
        type: string
        example: Telaix Heros
      timeout:
        type: integer
        example: 30
  ScheduleList:
    type: object
    properties:
      schedules:
        type: array
        description: Array of Schedules
        items:
          $ref: '#/definitions/Schedule'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      schedules:
      - id: 7
        code: schedule:7
        name: Open Hours
        exceptions: 01/01 05/29 07/04 09/04 11/23 11/24 12/26
        start_min: "00"
        start_hour: "08"
        start_weekday: Mon
        start_month: Jan
        start_day: "01"
        end_min: "00"
        end_hour: "17"
        end_weekday: Fri
        end_month: Dec
        end_day: "31"
        time_zone: Mountain Time (US & Canada)
        user_id: 1
        positive:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        negative:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        site: hq.uc.leap.tel
        links:
        - href: /sites/6/schedules/7
          rel: self
          title: Scheudle Details
          method: GET
        - href: /sites/6/schedules/7
          rel: Delete
          title: Delete Schedule
          method: DELETE
        - href: /sites/6/schedules/7
          rel: Edit
          title: Edit Schedule
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
      links:
      - href: /sites/6/schedules
        rel: self
        title: Schedules
        method: GET
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  Schedule:
    allOf:
    - $ref: '#/definitions/ScheduleCommonAttributes'
    - required:
      - id
      - negative
      - positive
      properties:
        id:
          type: integer
        start_month:
          type: string
        end_month:
          type: string
        positive:
          $ref: '#/definitions/FailoverAndDestination'
        negative:
          $ref: '#/definitions/FailoverAndDestination'
        user_id:
          type: integer
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 7
        code: schedule:7
        name: Open Hours
        exceptions: 01/01 05/29 07/04 09/04 11/23 11/24 12/26
        start_min: "00"
        start_hour: "08"
        start_weekday: Mon
        start_month: Jan
        start_day: "01"
        end_min: "00"
        end_hour: "17"
        end_weekday: Fri
        end_month: Dec
        end_day: "31"
        time_zone: Mountain Time (US & Canada)
        positive:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        negative:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        site: hq.uc.leap.tel
        user_id: 1
        links:
        - href: /sites/6/schedules/7
          rel: self
          title: Scheudle Details
          method: GET
        - href: /sites/6/schedules/7
          rel: Delete
          title: Delete Schedule
          method: DELETE
        - href: /sites/6/schedules/7
          rel: Edit
          title: Edit Schedule
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
  ScheduleParams:
    allOf:
    - $ref: '#/definitions/ScheduleCommonAttributes'
    - required:
      - negative
      - positive
      properties:
        positive:
          $ref: '#/definitions/FailoverAndDestinationCodeParam'
        negative:
          $ref: '#/definitions/FailoverAndDestinationCodeParam'
  ScheduleCommonAttributes:
    required:
    - end_hour
    - end_min
    - end_weekday
    - exceptions
    - name
    - start_hour
    - start_min
    - start_weekday
    - time_zone
    properties:
      name:
        type: string
        example: Open Hours
      time_zone:
        $ref: '#/definitions/Timezone'
      start_hour:
        $ref: '#/definitions/Hours'
      start_min:
        $ref: '#/definitions/Minutes'
      end_hour:
        $ref: '#/definitions/Hours'
      end_min:
        $ref: '#/definitions/Minutes'
      start_weekday:
        $ref: '#/definitions/Weekdays'
      end_weekday:
        $ref: '#/definitions/Weekdays'
      exceptions:
        type: string
        example: ""
        pattern: /\A(\d\d\/\d\d\W?)*\z/
  SipTrunkList:
    type: object
    properties:
      sip_trunks:
        type: array
        description: Array of Sip Trunks
        items:
          $ref: '#/definitions/SipTrunk'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      sip_trunks:
      - id: 161
        name: First Sip Trunk
        code: sip_trunk:161
        disable_comfort_noise: true
        channel_limit: 2
        login: sip_trunk_one
        password: CTu6ZRTHM6JD7RmYfzBq3gtt
        contact_ip: 25.54.34.34:5060
        timeout: 120
        fail_over:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        caller_id_name: Telaix Inc
        caller_id_number: 312-523-3845
        acl: 0.0.0.0/0
        site: hq.uc.leap.tel
        user_id: 1
        links:
        - href: /sites/6/sip-trunks/161
          rel: self
          title: Sip Trunk Details
          method: GET
        - href: /sites/6/sip-trunks/161
          rel: Delete
          title: Delete Sip Trunk
          method: DELETE
        - href: /sites/6/sip-trunks/161
          rel: Edit
          title: Edit Sip Trunk
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
      links:
      - href: /sites/6/sip-trunks
        rel: self
        title: Sip Trunks
        method: GET
      - href: /sites/6
        rel: up
        title: Site
        method: GET
      - href: /sites/6/sip-trunks/status
        rel: Registration Status
        title: Sip Trunks
        method: GET
  SipTrunk:
    allOf:
    - $ref: '#/definitions/SipTrunkCommonAttributes'
    - required:
      - fail_over
      - id
      - password
      - site
      properties:
        id:
          type: integer
        password:
          type: string
        site:
          type: string
        fail_over:
          $ref: '#/definitions/FailoverAndDestination'
        user_id:
          type: integer
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 161
        code: sip_trunk:161
        name: First Sip Trunk
        disable_comfort_noise: true
        channel_limit: 2
        login: sip_trunk_one
        password: CTu6ZRTHM6JD7RmYfzBq3gtt
        contact_ip: 25.54.34.34:5060
        timeout: 120
        fail_over:
          name: Netrio - Leap Brand (forward:1254)
          code: forward:1254
        caller_id_name: Telaix Inc
        caller_id_number: 312-523-3845
        acl: 0.0.0.0/0
        site: hq.uc.leap.tel
        user_id: 1
        links:
        - href: /sites/6/sip-trunks/161
          rel: self
          title: Sip Trunk Details
          method: GET
        - href: /sites/6/sip-trunks/161
          rel: Delete
          title: Delete Sip Trunk
          method: DELETE
        - href: /sites/6/sip-trunks/161
          rel: Edit
          title: Edit Sip Trunk
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
  SipTrunkParams:
    allOf:
    - $ref: '#/definitions/SipTrunkCommonAttributes'
    - $ref: '#/definitions/SipTrunkFailoverParam'
  SipTrunkCommonAttributes:
    required:
    - acl
    - caller_id_name
    - caller_id_number
    - channel_limit
    - contact_ip
    - disable_comfort_noise
    - login
    - name
    - timeout
    properties:
      name:
        type: string
        example: First Sip Trunk
      disable_comfort_noise:
        type: boolean
        example: true
      channel_limit:
        type: integer
        example: 2
      login:
        type: string
        example: sip_trunk_one
      contact_ip:
        type: string
        example: 25.54.34.34:5060
      timeout:
        type: integer
        example: 120
      caller_id_name:
        type: string
        example: Telaix Inc'
      caller_id_number:
        type: string
        example: "3125233845"
      acl:
        type: string
        example: 0.0.0.0/0
  SipTrunkFailoverParam:
    properties:
      fail_over:
        $ref: '#/definitions/FailoverAndDestinationCodeParam'
  SipTrunkStatus:
    type: object
    properties:
      sip_trunks:
        type: array
        description: Array of login names for registered sip trunks
        items:
          type: string
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      sip_trunks:
      - john_doe
      - jane_doe
      links:
      - href: /sites/6/sip-trunks/status
        rel: self
        title: Sip Trunks
        method: GET
      - href: /sites/6/sip-trunks
        rel: List
        title: Sip Trunks
        method: GET
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  VoiceMailBoxList:
    type: object
    properties:
      voice_mail_boxes:
        type: array
        description: Array of VoiceMailBox
        items:
          $ref: '#/definitions/VoiceMailBox'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      voice_mail_boxes:
      - id: 553
        code: voice_mail_box:553
        name: John Doe
        email: john.doe@teliax.com
        user_id: 1
        links:
        - href: /sites/6/voice-mail-boxes/553
          rel: self
          title: Voice Mail Box Details
          method: GET
        - href: /sites/6/voice-mail-boxes/553
          rel: Delete
          title: Delete Voice Mail Box
          method: DELETE
        - href: /sites/6/voice-mail-boxes/553
          rel: Edit
          title: Edit Voice Mail Box
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
      links:
      - href: /sites/6/voice-mail-boxes
        rel: self
        title: Voice Mail Boxes
        method: GET
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  VoiceMailBox:
    allOf:
    - $ref: '#/definitions/VoiceMailBoxParams'
    - required:
      - greeting
      - id
      - user_id
      properties:
        id:
          type: integer
        greeting:
          type: string
        user_id:
          type: integer
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 553
        code: voice_mail_box:553
        name: John Doe
        email: john.doe@teliax.com
        greeting: http://example.com/greeting.ogg
        user_id: 1
        links:
        - href: /sites/6/voice-mail-boxes/553
          rel: self
          title: Voice Mail Box Details
          method: GET
        - href: /sites/6/voice-mail-boxes/553
          rel: Delete
          title: Delete Voice Mail Box
          method: DELETE
        - href: /sites/6/voice-mail-boxes/553
          rel: Edit
          title: Edit Voice Mail Box
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
  VoiceMailBoxParams:
    required:
    - name
    - notification_emails
    - pin
    properties:
      name:
        type: string
      pin:
        type: string
      notification_emails:
        type: string
  CallBlockList:
    type: object
    properties:
      call_block:
        type: array
        description: Array of Call Blocks
        items:
          $ref: '#/definitions/CallBlock'
      links:
        type: array
        items:
          $ref: '#/definitions/linkDescription'
    example:
      call_blocks:
      - id: 1
        number: "9123456789"
        applicable_to_all_extensions: true
        applicable_to_specific_extensions: false
        extensions:
        - device:4
        - device:5
        links:
        - href: /sites/6/call_blocks/10
          rel: self
          title: Call Block Details
          method: GET
        - href: /sites/6/call_blocks/10
          rel: Delete
          title: Delete Call Block
          method: DELETE
        - href: /sites/6/call_blocks/10
          rel: Edit
          title: Edit Call Block
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
      links:
      - href: /sites/6/call_blocks
        rel: self
        title: Call Blocks
      - href: /sites/6
        rel: up
        title: Site
        method: GET
  CallBlock:
    allOf:
    - $ref: '#/definitions/CallBlockParams'
    - required:
      - id
      properties:
        id:
          type: integer
        links:
          type: array
          items:
            $ref: '#/definitions/linkDescription'
      example:
        id: 1
        number: "9123456789"
        applicable_to_all_extensions: true
        applicable_to_specific_extensions: false
        extensions:
        - device:4
        - device:5
        links:
        - href: /sites/6/call_blocks/10
          rel: self
          title: Call Block Details
          method: GET
        - href: /sites/6/call_blocks/10
          rel: Delete
          title: Delete Call Block
          method: DELETE
        - href: /sites/6/call_blocks/10
          rel: Edit
          title: Edit Call Block
          method: PUT
        - href: /sites/6
          rel: up
          title: Site
          method: GET
  CallBlockParams:
    required:
    - applicable_to_all_extensions
    - applicable_to_specific_extensions
    - extensions
    - number
    properties:
      number:
        type: string
      applicable_to_all_extensions:
        type: boolean
      applicable_to_specific_extensions:
        type: boolean
      extensions:
        type: array
  Seat:
    required:
    - site
    - stats
    - template
    - user
    properties:
      user:
        type: string
        example: John Doe
      template:
        type: string
        example: Associate
      site:
        type: string
        example: test.uc.leap.tel
      stats:
        type: object
        example:
          features:
            PhoneNumber:
              name: Phone Number - John Doe
              destination: Ring Group - John Doe
              failover: Voice Mail Box - John Doe
              category: Domestic
              phone_number: "3125233844"
            RingGroup:
              name: Ring Group - John Doe
              timeout: "120"
              destinations:
              - Device 1 - John Doe
              - Device 2 - John Doe
            Device 1:
              name: "Device: John Doe 1"
              login: john-doe-device-1
              password: AvTQLwvaAfjdfSbSWuWn
              channel_limit: "1"
              caller_id_name: John Doe
              caller_id_number: "3125233844"
              acl: 0.0.0.0/0
            Device 2:
              name: "Device: John Doe 2"
              login: john-doe-device-2
              password: YM1xj4R0HvUOdmfXSNWN
              channel_limit: "1"
              caller_id_name: John Doe
              caller_id_number: "3125233844"
              acl: 0.0.0.0/0
            VoiceMailBox:
              name: VoiceMail Box - John Doe
              pin: "1234"
              notifiction_email: john.doe@leap.tel
        properties: {}
  SeatParams:
    required:
    - features
    - template_id
    - user_id
    properties:
      user_id:
        type: integer
        example: 1
      template_id:
        type: integer
        example: 1
      features:
        $ref: '#/definitions/SeatSwitchable'
  SeatSwitchable:
    properties:
      switchable:
        type: string
      position:
        type: integer
      destinations:
        type: array
        items:
          $ref: '#/definitions/SeatSwitchable'
      failover:
        $ref: '#/definitions/SeatSwitchable'
      target_type:
        type: string
      attrs:
        type: object
        properties: {}
    example:
      switchable: PhoneNumber
      attrs: {}
      destinations:
      - switchable: RingGroup
        attrs: {}
        destinations:
        - switchable: Device
          attrs:
            caller_id_name: John Doe
            call_id_number: "3125233844"
        - switchable: Device
          attrs:
            caller_id_name: John Doe
            call_id_number: "3125233844"
      failover:
        switchable: VoiceMailBox
        attrs: {}
  linkDescription:
    type: object
    required:
    - href
    - rel
    properties:
      href:
        type: string
        description: "a URI template, as defined by RFC 6570, with the addition of the $, ( and ) characters for pre-processing"
      rel:
        type: string
        description: relation to the target resource of the link
      title:
        type: string
        description: a title for the link
      targetSchema:
        description: JSON Schema describing the link target
        $ref: '#/definitions/#'
      mediaType:
        type: string
        description: media type (as defined by RFC 2046) describing the link target
      method:
        type: string
        description: method for requesting the target of the link (e.g. for HTTP this might be "GET" or "DELETE")
      encType:
        type: string
        description: The media type in which to submit data along with the request
        default: application/json
      schema:
        description: Schema describing the data to submit along with the request
        $ref: '#/definitions/#'
  TimezoneList:
    properties:
      timezones:
        type: array
        example:
        - Pacific/Midway
        - Pacific/Pago_Pago
        - Pacific/Honolulu
        - America/Juneau
        - America/Los_Angeles
        - America/Tijuana
        - America/Denver
        - America/Phoenix
        - America/Chihuahua
        - America/Mazatlan
        - America/Chicago
        - America/Regina
        - America/Mexico_City
        - America/Monterrey
        - America/Guatemala
        - America/New_York
        - America/Indiana/Indianapolis
        - America/Bogota
        - America/Lima
        - America/Halifax
        - America/Caracas
        - America/La_Paz
        - America/Santiago
        - America/St_Johns
        - America/Sao_Paulo
        - America/Argentina/Buenos_Aires
        - America/Montevideo
        - America/Guyana
        - America/Godthab
        - Atlantic/South_Georgia
        - Atlantic/Azores
        - Atlantic/Cape_Verde
        - Europe/Dublin
        - Europe/London
        - Europe/Lisbon
        - Africa/Casablanca
        - Africa/Monrovia
        - Etc/UTC
        - Europe/Belgrade
        - Europe/Bratislava
        - Europe/Budapest
        - Europe/Ljubljana
        - Europe/Prague
        - Europe/Sarajevo
        - Europe/Skopje
        - Europe/Warsaw
        - Europe/Zagreb
        - Europe/Brussels
        - Europe/Copenhagen
        - Europe/Madrid
        - Europe/Paris
        - Europe/Amsterdam
        - Europe/Berlin
        - Europe/Zurich
        - Europe/Rome
        - Europe/Stockholm
        - Europe/Vienna
        - Africa/Algiers
        - Europe/Bucharest
        - Africa/Cairo
        - Europe/Helsinki
        - Europe/Kiev
        - Europe/Riga
        - Europe/Sofia
        - Europe/Tallinn
        - Europe/Vilnius
        - Europe/Athens
        - Europe/Istanbul
        - Europe/Minsk
        - Asia/Jerusalem
        - Africa/Harare
        - Africa/Johannesburg
        - Europe/Kaliningrad
        - Europe/Moscow
        - Europe/Volgograd
        - Europe/Samara
        - Asia/Kuwait
        - Asia/Riyadh
        - Africa/Nairobi
        - Asia/Baghdad
        - Asia/Tehran
        - Asia/Muscat
        - Asia/Baku
        - Asia/Tbilisi
        - Asia/Yerevan
        - Asia/Kabul
        - Asia/Yekaterinburg
        - Asia/Karachi
        - Asia/Tashkent
        - Asia/Kolkata
        - Asia/Kathmandu
        - Asia/Dhaka
        - Asia/Colombo
        - Asia/Almaty
        - Asia/Novosibirsk
        - Asia/Rangoon
        - Asia/Bangkok
        - Asia/Jakarta
        - Asia/Krasnoyarsk
        - Asia/Shanghai
        - Asia/Chongqing
        - Asia/Hong_Kong
        - Asia/Urumqi
        - Asia/Kuala_Lumpur
        - Asia/Singapore
        - Asia/Taipei
        - Australia/Perth
        - Asia/Irkutsk
        - Asia/Ulaanbaatar
        - Asia/Seoul
        - Asia/Tokyo
        - Asia/Yakutsk
        - Australia/Darwin
        - Australia/Adelaide
        - Australia/Melbourne
        - Australia/Sydney
        - Australia/Brisbane
        - Australia/Hobart
        - Asia/Vladivostok
        - Pacific/Guam
        - Pacific/Port_Moresby
        - Asia/Magadan
        - Asia/Srednekolymsk
        - Pacific/Guadalcanal
        - Pacific/Noumea
        - Pacific/Fiji
        - Asia/Kamchatka
        - Pacific/Majuro
        - Pacific/Auckland
        - Pacific/Tongatapu
        - Pacific/Fakaofo
        - Pacific/Chatham
        - Pacific/Apia
        items:
          $ref: '#/definitions/Timezone'
  Timezone:
    type: string
    minLength: 1
    maxLength: 127
    description: "A time zone, following the format defined in the IANA tz database (https://www.iana.org/time-zones). Valid examples are America/New_York and Etc/UTC. Do not use ambiguous, non-qualified values such as EST or GB. Before including this type in your interface, please consider whether it is actually appropriate to convey time zone information with your type. It is almost always the case that this should be transformed from UTC at the time of display to the user; this type might therefore be most associated with user-preference APIs."
    enum:
    - Pacific/Midway
    - Pacific/Pago_Pago
    - Pacific/Honolulu
    - America/Juneau
    - America/Los_Angeles
    - America/Tijuana
    - America/Denver
    - America/Phoenix
    - America/Chihuahua
    - America/Mazatlan
    - America/Chicago
    - America/Regina
    - America/Mexico_City
    - America/Monterrey
    - America/Guatemala
    - America/New_York
    - America/Indiana/Indianapolis
    - America/Bogota
    - America/Lima
    - America/Halifax
    - America/Caracas
    - America/La_Paz
    - America/Santiago
    - America/St_Johns
    - America/Sao_Paulo
    - America/Argentina/Buenos_Aires
    - America/Montevideo
    - America/Guyana
    - America/Godthab
    - Atlantic/South_Georgia
    - Atlantic/Azores
    - Atlantic/Cape_Verde
    - Europe/Dublin
    - Europe/London
    - Europe/Lisbon
    - Africa/Casablanca
    - Africa/Monrovia
    - Etc/UTC
    - Europe/Belgrade
    - Europe/Bratislava
    - Europe/Budapest
    - Europe/Ljubljana
    - Europe/Prague
    - Europe/Sarajevo
    - Europe/Skopje
    - Europe/Warsaw
    - Europe/Zagreb
    - Europe/Brussels
    - Europe/Copenhagen
    - Europe/Madrid
    - Europe/Paris
    - Europe/Amsterdam
    - Europe/Berlin
    - Europe/Zurich
    - Europe/Rome
    - Europe/Stockholm
    - Europe/Vienna
    - Africa/Algiers
    - Europe/Bucharest
    - Africa/Cairo
    - Europe/Helsinki
    - Europe/Kiev
    - Europe/Riga
    - Europe/Sofia
    - Europe/Tallinn
    - Europe/Vilnius
    - Europe/Athens
    - Europe/Istanbul
    - Europe/Minsk
    - Asia/Jerusalem
    - Africa/Harare
    - Africa/Johannesburg
    - Europe/Kaliningrad
    - Europe/Moscow
    - Europe/Volgograd
    - Europe/Samara
    - Asia/Kuwait
    - Asia/Riyadh
    - Africa/Nairobi
    - Asia/Baghdad
    - Asia/Tehran
    - Asia/Muscat
    - Asia/Baku
    - Asia/Tbilisi
    - Asia/Yerevan
    - Asia/Kabul
    - Asia/Yekaterinburg
    - Asia/Karachi
    - Asia/Tashkent
    - Asia/Kolkata
    - Asia/Kathmandu
    - Asia/Dhaka
    - Asia/Colombo
    - Asia/Almaty
    - Asia/Novosibirsk
    - Asia/Rangoon
    - Asia/Bangkok
    - Asia/Jakarta
    - Asia/Krasnoyarsk
    - Asia/Shanghai
    - Asia/Chongqing
    - Asia/Hong_Kong
    - Asia/Urumqi
    - Asia/Kuala_Lumpur
    - Asia/Singapore
    - Asia/Taipei
    - Australia/Perth
    - Asia/Irkutsk
    - Asia/Ulaanbaatar
    - Asia/Seoul
    - Asia/Tokyo
    - Asia/Yakutsk
    - Australia/Darwin
    - Australia/Adelaide
    - Australia/Melbourne
    - Australia/Sydney
    - Australia/Brisbane
    - Australia/Hobart
    - Asia/Vladivostok
    - Pacific/Guam
    - Pacific/Port_Moresby
    - Asia/Magadan
    - Asia/Srednekolymsk
    - Pacific/Guadalcanal
    - Pacific/Noumea
    - Pacific/Fiji
    - Asia/Kamchatka
    - Pacific/Majuro
    - Pacific/Auckland
    - Pacific/Tongatapu
    - Pacific/Fakaofo
    - Pacific/Chatham
    - Pacific/Apia
  Weekdays:
    type: string
    description: Weekdays
    enum:
    - Sun
    - Mon
    - Tue
    - Wed
    - Thu
    - Fri
    - Sat
  Hours:
    type: string
    description: Hours in the day
    enum:
    - "0"
    - "1"
    - "2"
    - "3"
    - "4"
    - "5"
    - "6"
    - "7"
    - "08"
    - "09"
    - "10"
    - "11"
    - "12"
    - "13"
    - "14"
    - "15"
    - "16"
    - "17"
    - "18"
    - "19"
    - "20"
    - "21"
    - "22"
    - "23"
  Minutes:
    type: string
    description: Set Minute for an instance
    enum:
    - "0"
    - "1"
    - "2"
    - "3"
    - "4"
    - "5"
    - "6"
    - "7"
    - "08"
    - "09"
    - "10"
    - "11"
    - "12"
    - "13"
    - "14"
    - "15"
    - "16"
    - "17"
    - "18"
    - "19"
    - "20"
    - "21"
    - "22"
    - "23"
    - "24"
    - "25"
    - "26"
    - "27"
    - "28"
    - "29"
    - "30"
    - "31"
    - "32"
    - "33"
    - "34"
    - "35"
    - "36"
    - "37"
    - "38"
    - "39"
    - "40"
    - "41"
    - "42"
    - "43"
    - "44"
    - "45"
    - "46"
    - "47"
    - "48"
    - "49"
    - "50"
    - "51"
    - "52"
    - "53"
    - "54"
    - "55"
    - "56"
    - "57"
    - "58"
    - "59"
  CountryCodeList:
    properties:
      countries:
        type: array
        description: Array of Countries
        items:
          $ref: '#/definitions/CountryCode'
  CountryCode:
    required:
    - code
    - id
    - name
    - region
    properties:
      id:
        type: string
      name:
        type: string
      code:
        type: string
      region:
        type: string
    example:
    - id: INTERSTATE|INTRASTATE|LOCAL|TOLLFREE
      name: United States - 1
      code: INTERSTATE|INTRASTATE|LOCAL|TOLLFREE
      region: "Zone 1: North America"
    - id: "20"
      name: Egypt - 20
      code: "20"
      region: "Zone 2: Africa"
  ThinClientList:
    properties:
      thin_clients:
        type: array
        description: Array of Thin Clients
        items:
          $ref: '#/definitions/ThinClient'
  ThinClient:
    required:
    - active
    - category
    - id
    - identification
    - ipv4_address
    - provider
    properties:
      id:
        type: integer
      active:
        type: boolean
      category:
        type: string
      ipv4_address:
        type: string
      string:
        type: string
      provider:
        type: string
      identification:
        type: string
    example:
    - id: 11
      active: true
      category: public
      ipv4_address: 63.211.239.115
      provider: Teliax Inc.
      string: Denver - Bonsai 5
      identification: 00-21-5e-96-e3-bc
    - id: 12
      active: true
      category: public
      ipv4_address: 63.211.239.116
      provider: Teliax Inc.
      string: Denver - Bonsai 6
      identification: 00-21-5e-96-fe-6c
  country_code:
    type: string
    minLength: 2
    maxLength: 2
    pattern: "^([A-Z]{2}|C2)$"
    format: paypal_common_country_code_v1
    description: "The [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as is used in that country's top-level domain names.</blockquote>.  Note that Teliax adds the proprietary code <code>C2</code> for Chinese international transactions."
  error_issue:
    type: string
    format: paypal_common_error_issue_v1
    description: "String related to issue in error. To accommodate variables, format the string using the syntax described in `java.util.Formatter`."
  error_spec_issue:
    type: object
    required:
    - id
    - issue
    properties:
      id:
        type: string
        description: The ID for the issue.
      issue:
        description: Use the Java String Formatter syntax to format the issue as a parameterized string. Localize the string. Stream the value out in error response from catalog's `error_details.json#issue`.
        $ref: '#/definitions/error_issue'
    title: error_issue
    description: An issue associated with an error. An issue corresponds to common `error_detail `.
  error_spec:
    type: object
    required:
    - http_status_codes
    - message
    - name
    properties:
      name:
        type: string
        description: "Human-readable, unique name of the error. It is recommended that this value be streamed out in error response as error.json#name."
      message:
        type: string
        description: Message describing the error. Should be localized based on locale. It is recommended that this value be streamed out in error response as error.json#message.
      log_level:
        type: string
        description: "Log level associated with this error. For example, CAL log level. This MUST NOT be streamed out in error responses as well as exposed in any external documentation."
        enum:
        - ERROR
        - FATAL
        - INFO
        - WARN
      legacy_code:
        type: string
        description: Legacy error code. Use iff existing error metadata has the code. It is recommended that this value be streamed out in error response as additionalProperty of error.json
      http_status_codes:
        type: array
        description: Applicable HTTP status codes for this error.
        items:
          type: integer
          minimum: 400
          maximum: 599
      suggested_application_actions:
        type: array
        description: Suggest practical actions that the developer of application consuming the API could take in order to resolve the error condition. These must be in English.
        items:
          type: string
      suggested_user_actions:
        type: array
        description: Suggest practical actions that a user of the application consuming the API could take in order to resolve the error condition. These must be in the language used in error_catalog.json#langauge.
        items:
          type: string
      issues:
        type: array
        description: Issues associated with this error. Issue corresponds to error_detail.json
        items:
          $ref: '#/definitions/error_spec_issue'
      links:
        type: array
        description: Error context specific HATEOAS links. Corresponds to error.json#links
        items:
          $ref: '#/definitions/linkDescription'
    title: error_spec
    description: Metadata for an error. Can be associated with one or more methods that belong to one or more APIs of the same name space. Error spec corresponds to common `error.json`.
  error_detail:
    type: object
    required:
    - issue
    properties:
      field:
        type: string
        description: "The field that caused the error. If the field is in the body, set this value to the JSON pointer to that field. Required for client-side errors."
      value:
        type: string
        description: The value of the field that caused the error.
      location:
        type: string
        description: "The location of the field that caused the error. A valid value is `body`, `path`, or `query`. Default is `body`."
      issue:
        type: string
        description: The reason for the error.
    title: PPaaS Error Details
    description: Error details.
  error:
    type: object
    required:
    - debug_id
    - message
    - name
    properties:
      name:
        type: string
        description: "Human readable, unique name of the error. It is recommended that this value is streamed out in error response from catalog's error_spec.json#name."
      debug_id:
        type: string
        description: Internal identifier used for correlation purposes.
      message:
        type: string
        description: Message describing the error. It is recommended that this value is streamed out in error response from catalog's error_spec.json#message.
      information_link:
        type: string
        description: URI for detailed information related to this error for the developer. It is recommended that this value is streamed out in error response from one of the links from catalog's error_spec.json#links.
      details:
        type: array
        description: Additional details for the error. Mandatory for client side 4xx errors.
        items:
          $ref: '#/definitions/error_detail'
      links:
        type: array
        description: Error context specific HATEOAS links
        items:
          $ref: '#/definitions/linkDescription'
    title: error
    description: Error details.
  error_call_record:
    type: object
    required:
    - error
    properties:
      error:
        type: string
        description: describes the validation error
    title: error_call_record
    description: Error details.
    example:
      error: invalid filter column
  CallRecordList:
    properties:
      call_records:
        type: array
        description: Array of Call Records
        items:
          $ref: '#/definitions/CallRecord'
  CallRecord:
    required:
    - customer_balance_adjustment
    - humanized_item_name
    - id
    - item_options
    - item_rules
    - item_summary
    - item_type
    properties:
      id:
        type: integer
      item_type:
        type: string
      item_rules:
        type: string
      item_options:
        type: object
        properties: {}
      item_summary:
        type: object
        properties: {}
      humanized_item_name:
        type: string
      customer_balance_adjustment:
        type: string
    example:
    - id: 4332721964
      item_type: cdr
      item_rules: intrastate
      item_options:
        dni: 17208888888
      item_summary:
        id: 27815150409
        dni: "17208888888"
        dni_name: CO LONGMONT
        raw_ani: +12012222222
        name: Intrastate Call
        zone: intrastate
        direction: outbound
        start_stamp: 2020-10-29 06:55:06 -0600
        answer_stamp: 2020-10-29 06:55:10 -0600
        end_stamp: 2020-10-29 07:02:39 -0600
        duration: 8
      humanized_item_name: Intrastate call
      customer_account_balance: "-0.08"
  Account_current_user:
    type: object
  TemplateSwitchable_attrs:
    type: object
    properties:
      name:
        type: string
      derivative:
        type: string
      default:
        type: string
parameters:
  CommonAuthorizationHeader:
    name: Authorization
    in: header
    description: This token is used to authenticate a particular account.
    required: true
    type: string
  ParamName:
    name: name
    in: formData
    description: Name Attribute
    required: true
    type: string
  ParamGreeting:
    name: greeting
    in: formData
    description: Greeting message
    required: true
    type: file
  ParamMusicOnHold:
    name: music_on_hold
    in: formData
    description: Music on hold
    required: true
    type: file
  ParamPin:
    name: pin
    in: formData
    description: Pin
    required: true
    type: string
  MenuParamFailOver:
    name: fail_over
    in: formData
    description: Failover for the Menu
    required: true
    type: string
  MenuParamOptionRoute0:
    name: "option_routes[0]"
    in: formData
    description: Menu option when the user presses 0
    required: false
    type: string
  MenuParamOptionRoute1:
    name: "option_routes[1]"
    in: formData
    description: Menu option when the user presses 1
    required: false
    type: string
  MenuParamOptionRoute2:
    name: "option_routes[2]"
    in: formData
    description: Menu option when the user presses 2
    required: false
    type: string
  MenuParamOptionRoute3:
    name: "option_routes[3]"
    in: formData
    description: Menu option when the user presses 3
    required: false
    type: string
  MenuParamOptionRoute4:
    name: "option_routes[4]"
    in: formData
    description: Menu option when the user presses 4
    required: false
    type: string
  MenuParamOptionRoute5:
    name: "option_routes[5]"
    in: formData
    description: Menu option when the user presses 5
    required: false
    type: string
  MenuParamOptionRoute6:
    name: "option_routes[6]"
    in: formData
    description: Menu option when the user presses 6
    required: false
    type: string
  MenuParamOptionRoute7:
    name: "option_routes[7]"
    in: formData
    description: Menu option when the user presses 7
    required: false
    type: string
  MenuParamOptionRoute8:
    name: "option_routes[8]"
    in: formData
    description: Menu option when the user presses 8
    required: false
    type: string
  MenuParamOptionRoute9:
    name: "option_routes[9]"
    in: formData
    description: Menu option when the user presses 9
    required: false
    type: string
  MenuParamOptionRouteStar:
    name: "option_routes[*]"
    in: formData
    description: Menu option when the user presses *
    required: false
    type: string
  SiteParamActive:
    name: active
    in: formData
    description: Active Flag
    required: true
    type: boolean
  SiteParamCallerIdName:
    name: caller_id_name
    in: formData
    description: Caller Id Name
    required: true
    type: string
  SiteParamCallerIdNumber:
    name: caller_id_number
    in: formData
    description: Caller Id Number
    required: true
    type: string
  SiteParamThinClientId:
    name: thin_client_id
    in: formData
    description: Thin Client Id
    required: true
    type: string
  SiteParamDnsExtension:
    name: dns_extension
    in: formData
    description: DNS Extension
    required: true
    type: string
  SiteParamPermittedCountryCodes:
    name: permitted_country_codes
    in: formData
    description: Array of permitted country codes
    required: true
    type: array
    items:
      type: string
    collectionFormat: multi
  SiteParamAcl:
    name: acl
    in: formData
    description: Access Control List
    required: true
    type: string
  SiteParamChannelLimit:
    name: channel_limit
    in: formData
    description: Access Control List
    required: true
    type: integer
    maximum: 1000
    minimum: 0
  SiteParamSiteOwner:
    name: site_owner
    in: formData
    description: Site Owner
    required: true
    type: string
  SiteParamSiteMember:
    name: site_member
    in: formData
    description: Site Member
    required: true
    type: string
  ConferenceRoomParamModeratorPin:
    name: moderator_pin
    in: formData
    description: Pin of the Conference Call
    required: true
    type: string
  VoiceMailBoxParamNotificationEmail:
    name: notification_emails
    in: formData
    description: Notification Voice mail box email
    required: true
    type: string
  VoiceMailBoxParamAnnouncement:
    name: announcement
    in: formData
    description: Greeting message
    required: true
    type: file
