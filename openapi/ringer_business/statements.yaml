openapi: 3.0.3
info:
  title: Ringer Business API - Statements
  description: |
    This API provides endpoints for accessing account statements (receipts).
    Statements are typically generated at the end of a service interval and provide a summary of charges and payments.
    Developers can use this API to retrieve a list of statements or the details of a specific statement.
  version: 1.0.0
  license:
    name: MIT License
    url: https://github.com/teliax/ringer-oapi/blob/main/LICENSE
  contact:
    name: Ringer API Support
    url: https://docs.ringer.tel/support
    email: support@ringer.tel

servers:
  - url: https://api.ringer.tel/v1
    description: Production server
  - url: https://api.staging.ringer.tel/v1
    description: Staging server

tags:
  - name: Statements
    description: Endpoints for retrieving account statements.

paths:
  /statements:
    get:
      tags:
        - Statements
      summary: List Account Statements
      description: |
        Retrieves a list of account statements (receipts) for the authenticated user's account.
        Statements are generated at the end of each service interval (e.g., monthly) and are typically paginated.
      operationId: listStatements
      security:
        - oAuth2: [read]
      parameters:
        - name: page_size
          in: query
          description: The number of statement entries to return per page.
          required: false
          schema:
            type: integer
            default: 25 
            minimum: 1
            maximum: 100
            example: 25
        - name: page
          in: query
          description: The page number of the result set to return.
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
            example: 1
      responses:
        '200':
          description: A list of account statements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementListResponse'
              example:
                statements:
                  - id: 501
                    statement_number: "STMT-2023-10-001"
                    period_start: "2023-10-01T00:00:00Z"
                    period_end: "2023-10-31T23:59:59Z"
                    issue_date: "2023-11-01T00:00:00Z"
                    due_date: "2023-11-15T00:00:00Z"
                    total_amount: "150.75"
                    currency: "USD"
                    status: "paid"
                    created_at_original: "02/02/2018"
                    closed_at_original: "02/02/2018"
                    image_url: "https://cdn.example.com/statements/stmt_501.png"
                    pdf_url: "https://cdn.example.com/statements/stmt_501.pdf"
                    cdr_export_url: "https://cdn.example.com/reports/cdr_stmt_501.csv"
                    links:
                      - href: "/statements/501"
                        rel: "self"
                        method: "GET"
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: "/statements?page=1&page_size=25"
                    rel: "self"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /statements/{statementId}:
    parameters:
      - name: statementId
        in: path
        description: The unique identifier of the statement.
        required: true
        schema:
          type: integer
          format: int64
          example: 501
    get:
      tags:
        - Statements
      summary: Get Statement Details
      description: Retrieves detailed information for a specific account statement by its ID.
      operationId: getStatementById
      security:
        - oAuth2: [read]
      responses:
        '200':
          description: Successfully retrieved statement details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementResponse'
              example:
                id: 501
                statement_number: "STMT-2023-10-001"
                period_start: "2023-10-01T00:00:00Z"
                period_end: "2023-10-31T23:59:59Z"
                issue_date: "2023-11-01T00:00:00Z"
                due_date: "2023-11-15T00:00:00Z"
                total_amount: "150.75"
                currency: "USD"
                status: "paid"
                created_at_original: "02/02/2018"
                closed_at_original: "02/02/2018"
                image_url: "https://cdn.example.com/statements/stmt_501.png"
                pdf_url: "https://cdn.example.com/statements/stmt_501.pdf"
                cdr_export_url: "https://cdn.example.com/reports/cdr_stmt_501.csv"
                links:
                  - href: "/statements/501"
                    rel: "self"
                    method: "GET"
                  - href: "/statements/501/download?format=pdf"
                    rel: "download"
                    title: "Download PDF"
                    method: "GET"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

components:
  schemas:
    StatementCore:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the statement.
          example: 501
        statement_number:
          type: string
          nullable: true
          description: A human-readable identifier for the statement (e.g., STMT-2023-10-001).
          example: "STMT-2023-10-001"
        period_start:
          type: string
          format: date-time
          description: The start date and time of the service period covered by this statement.
          example: "2023-10-01T00:00:00Z"
        period_end:
          type: string
          format: date-time
          description: The end date and time of the service period covered by this statement.
          example: "2023-10-31T23:59:59Z"
        issue_date:
          type: string
          format: date-time
          description: The date when the statement was issued.
          example: "2023-11-01T00:00:00Z"
        due_date:
          type: string
          format: date-time
          nullable: true
          description: The date when payment for this statement is due.
          example: "2023-11-15T00:00:00Z"
        total_amount:
          type: string
          description: The total amount due or charged on this statement.
          example: "150.75"
        currency:
          type: string
          description: Three-letter ISO currency code for the amounts on the statement.
          default: "USD"
          example: "USD"
        status:
          type: string
          description: The current status of the statement.
          enum: [open, paid, overdue, void, uncollectible]
          example: "paid"
        created_at_original:
          type: string
          description: Original creation date string from legacy system, if applicable.
          example: "02/02/2018"
          nullable: true
        closed_at_original:
          type: string
          description: Original closing date string from legacy system, if applicable.
          example: "02/02/2018"
          nullable: true
        image_url:
          type: string
          format: uri
          nullable: true
          description: URL to an image representation of the statement (e.g., a PNG or JPG).
          example: "https://cdn.example.com/statements/stmt_501.png"
        pdf_url:
          type: string
          format: uri
          nullable: true
          description: URL to download the statement in PDF format.
          example: "https://cdn.example.com/statements/stmt_501.pdf"
        cdr_export_url:
          type: string
          format: uri
          nullable: true
          description: URL to download associated Call Detail Records (CDRs) for this statement period, typically in CSV format.
          example: "https://cdn.example.com/reports/cdr_stmt_501.csv"
      required:
        - id
        - period_start
        - period_end
        - issue_date
        - total_amount
        - currency
        - status

    StatementResponse:
      allOf:
        - $ref: '#/components/schemas/StatementCore'
        - type: object
          properties:
            links:
              type: array
              description: HATEOAS links related to this statement.
              items:
                $ref: '#/components/schemas/Link'
              nullable: true
      description: Detailed information about a specific account statement.
      example:
        id: 501
        statement_number: "STMT-2023-10-001"
        period_start: "2023-10-01T00:00:00Z"
        period_end: "2023-10-31T23:59:59Z"
        issue_date: "2023-11-01T00:00:00Z"
        due_date: "2023-11-15T00:00:00Z"
        total_amount: "150.75"
        currency: "USD"
        status: "paid"
        created_at_original: "02/02/2018"
        closed_at_original: "02/02/2018"
        image_url: "https://cdn.example.com/statements/stmt_501.png"
        pdf_url: "https://cdn.example.com/statements/stmt_501.pdf"
        cdr_export_url: "https://cdn.example.com/reports/cdr_stmt_501.csv"
        links:
          - href: "/statements/501"
            rel: "self"
            method: "GET"

    StatementListResponse:
      type: object
      description: A paginated list of account statements.
      properties:
        statements:
          type: array
          items:
            $ref: '#/components/schemas/StatementResponse'
        total_items:
          type: integer
          description: Total number of statements matching the query.
          example: 120
        total_pages:
          type: integer
          description: Total number of pages based on `per_page`.
          example: 5
        current_page:
          type: integer
          description: The current page number being displayed.
          example: 1
        per_page:
          type: integer
          description: The number of items per page.
          example: 25
        links:
          type: array
          description: HATEOAS links for pagination and related resources.
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
      required:
        - statements
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        statements:
          - id: 501
            statement_number: "STMT-2023-10-001"
            period_start: "2023-10-01T00:00:00Z"
            period_end: "2023-10-31T23:59:59Z"
            issue_date: "2023-11-01T00:00:00Z"
            due_date: "2023-11-15T00:00:00Z"
            total_amount: "150.75"
            currency: "USD"
            status: "paid"
            pdf_url: "https://cdn.example.com/statements/stmt_501.pdf"
            links:
              - href: "/statements/501"
                rel: "self"
                method: "GET"
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: "/statements?page=1&page_size=25"
            rel: "self"
            method: "GET"

    Link:
      type: object
      description: Represents a HATEOAS link.
      properties:
        href:
          type: string
          format: uri-reference
        rel:
          type: string
        title:
          type: string
          nullable: true
        method:
          type: string
          enum: [GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD]
      required:
        - href
        - rel

    Error:
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: "error"
        error:
          type: string
          example: "Statement not found."
        error_code:
          type: string
          example: "STATEMENT_NOT_FOUND"
      required:
        - status
        - error
        - error_code

  responses:
    UnauthorizedError:
      description: Unauthorized - Authentication token is missing, invalid, or does not have permissions for this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Authentication required."
            error_code: "UNAUTHORIZED"
    ForbiddenError:
      description: Forbidden - The authenticated user does not have the necessary permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "You do not have permission to access this resource."
            error_code: "FORBIDDEN"
    NotFoundError:
      description: Not Found - The requested resource (e.g., specific statement) could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "The requested statement was not found."
            error_code: "RESOURCE_NOT_FOUND"

  securitySchemes:
    oAuth2:
      type: oauth2
      description: OAuth 2.0 Authentication for securing API endpoints.
      flows:
        clientCredentials:
          tokenUrl: https://api.ringer.tel/v1/auth/token
          scopes:
            read: Read access to API resources
            write: Write access to API resources
            admin: Administrative access.
