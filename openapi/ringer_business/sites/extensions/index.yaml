openapi: 3.0.3
info:
  title: Ringer Business API - Site Extensions (Collection)
  description: |
    Endpoints for listing extensions associated with a specific site and creating new extensions for that site.
  version: 1.0.0
  license:
    name: MIT License
    url: https://github.com/teliax/ringer-oapi/blob/main/LICENSE
  contact:
    name: Ringer API Support
    url: https://docs.ringer.tel/support
    email: support@ringer.tel

servers:
  - url: https://api.ringer.tel/v1
    description: Production server

tags:
  - name: Site Features - Extensions # Changed from "Extension"
    description: "Managing extensions associated with sites."

paths:
  /sites/{siteId}/extensions:
    parameters:
      - $ref: '#/components/parameters/SiteIdPath' # Changed to local reference
    get:
      tags:
        - Site Features - Extensions
      summary: List Extensions for a Site
      description: Retrieve a paginated list of all extensions that belong to a site.
      operationId: listSiteExtensions # Renamed
      security:
        - oAuth2: [read]
      parameters:
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: page_size
          in: query
          description: Number of extensions per page.
          required: false
          schema:
            type: integer
            default: 25
            example: 10
      responses:
        '200':
          description: A paginated list of extensions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExtensionListResponse' # Updated schema
              example:
                extensions:
                  - id: 101
                    site_id: 6
                    number: "1001"
                    name: "Sales"
                    destination_code: "ring_group:45"
                    destination_name: "Sales Team"
                    links:
                      - href: "/sites/6/extensions/101"
                        rel: "self"
                        method: "GET"
                total_items: 1
                total_pages: 1
                current_page: 1
                per_page: 25
                links:
                  - href: "/sites/6/extensions?page=1&page_size=25"
                    rel: "self"
                    method: "GET"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
    
    post:
      tags:
        - Site Features - Extensions
      summary: Create Extension for a Site
      description: Add a new extension to the specified site.
      operationId: createSiteExtension # Renamed
      security:
        - oAuth2: [write]
      requestBody:
        description: Details for the new extension.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensionCreateRequest' # Renamed for clarity
            example:
              number: "1002"
              name: "Support"
              destination_code: "ring_group:46"
      responses:
        '201':
          description: Extension Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionResponse' # Renamed for clarity
              example:
                id: 102
                site_id: 6
                number: "1002"
                name: "Support"
                destination_code: "ring_group:46"
                destination_name: "Support Team"
                links:
                  - href: "/sites/6/extensions/102"
                    rel: "self"
                    method: "GET"
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/SiteNotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError' # e.g. extension number already exists

components:
  parameters:
    SiteIdPath:
      $ref: '../../common_components.yaml#/components/parameters/SiteId' # Ensuring consistency
    ExtensionIdPath: # ADDING ExtensionId
      name: extensionId
      in: path
      description: The unique identifier of the extension record.
      required: true
      schema:
        type: integer
        format: int64
        example: 14

  securitySchemes:
    oAuth2: # Local definition
      type: oauth2
      description: OAuth 2.0 Authentication for securing API endpoints.
      flows:
        clientCredentials:
          tokenUrl: https://api.ringer.tel/v1/auth/token
          scopes:
            read: Read access to API resources
            write: Write access to API resources
            admin: Administrative access

  schemas:
    ExtensionCore: # Common fields for an extension
      type: object
      properties:
        number:
          type: string
          description: Extension number (e.g., "1001", "*123"). Typically 2-12 digits.
          example: "1001"
        name:
          type: string
          description: A user-friendly name for the extension (e.g., "Sales Hotline", "John Doe").
          example: "Sales Department"
        destination_code:
          type: string
          description: System code for the destination where calls to this extension are routed (e.g., "device:dev_xyz", "menu:ivr_main").
          example: "ring_group:rg_sales"
      required:
        - number
        - name
        - destination_code

    ExtensionCreateRequest:
      allOf:
        - $ref: '#/components/schemas/ExtensionCore'
      description: Data required to create a new extension.
      required: [number, name, destination_code]
      example:
        number: "1003"
        name: "Billing"
        destination_code: "voicemailbox:billing_vm"

    ExtensionResponse:
      allOf:
        - $ref: '#/components/schemas/ExtensionCore'
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the extension.
              example: 101
            site_id:
              type: integer
              format: int64
              description: Identifier of the site this extension belongs to.
              example: 6
              nullable: true
            destination_name:
              type: string
              description: Human-readable name of the destination this extension points to.
              example: "Sales Team Ring Group"
              nullable: true
            user_id: # From original Teliax Extension schema
              type: integer
              format: int64
              nullable: true
              description: Optional user ID associated with this extension.
              example: 5
            links:
              type: array
              items:
                $ref: '#/components/schemas/Link' # Local ref
              nullable: true
          required:
            - id
            - site_id
            - destination_name
            - number
            - name
            - destination_code
      description: Detailed information about a site extension.
      example:
        id: 101
        site_id: 6
        number: "1001"
        name: "Sales"
        destination_code: "ring_group:45"
        destination_name: "Sales Team Ring Group"
        user_id: 5
        links:
          - href: "/sites/6/extensions/101"
            rel: "self"
            method: "GET"

    PaginatedExtensionListResponse:
      type: object
      description: A paginated list of extensions.
      properties:
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionResponse'
        total_items:
          type: integer
          example: 150
        total_pages:
          type: integer
          example: 6
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 25
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link' # Local ref
          nullable: true
      required:
        - extensions
        - total_items
        - total_pages
        - current_page
        - per_page
      example:
        extensions:
          - id: 101
            site_id: 6
            number: "1001"
            name: "Sales"
            destination_code: "ring_group:45"
            destination_name: "Sales Team Ring Group"
            user_id: 5
            links:
              - href: "/sites/6/extensions/101"
                rel: "self"
                method: "GET"
        total_items: 1
        total_pages: 1
        current_page: 1
        per_page: 25
        links:
          - href: "/sites/6/extensions?page=1&page_size=25"
            rel: "self"
            method: "GET"

    ExtensionListResponse: # ADDED for non-paginated list use cases like available extensions
      type: object
      description: A list of extensions.
      properties:
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionResponse'
      required:
        - extensions
      example:
        extensions:
          - id: 75
            site_id: null
            number: "7001"
            name: "Available Ext 7001"
            destination_code: ""
            destination_name: null
            user_id: null
            links: []

    Link: # For HATEOAS links in responses
      type: object
      properties:
        href:
          type: string
          format: uri-reference
        rel:
          type: string
        method:
          type: string
          enum: [GET, POST, PUT, PATCH, DELETE]
          default: GET
      required:
        - href
        - rel
      example: # Added href to example
        href: "/sites/6/extensions/73"
        rel: "self"
        method: "GET"

    Error: # Standard error object
      type: object
      description: Standard error response format.
      properties:
        status:
          type: string
          example: "error"
        error:
          type: string
          example: "An extension processing error occurred."
        error_code:
          type: string
          example: "EXTENSION_PROCESSING_ERROR"
        details: # Added optional details array
          type: array
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              issue:
                type: string
      required:
        - status
        - error
        - error_code

  responses:
    BadRequestError:
      description: Bad Request - Invalid data provided for the extension operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Invalid extension number or destination code."
            error_code: "VALIDATION_ERROR"
    UnauthorizedError:
      description: Unauthorized - Authentication token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Authentication required for extension operations."
            error_code: "UNAUTHORIZED_EXTENSION"
    ForbiddenError:
      description: Forbidden - The authenticated user does not have permission.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Permission denied for this extension operation."
            error_code: "FORBIDDEN_EXTENSION"
    SiteNotFoundError:
      description: Not Found - The specified site could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error' # Could point to a more specific siteNotFound.yaml
          example:
            status: "error"
            error: "Site not found for extension operation."
            error_code: "SITE_NOT_FOUND_EXTENSION"
    ConflictError:
      description: Conflict - e.g., the extension number already exists on this site.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: "error"
            error: "Extension number already exists on this site."
            error_code: "EXTENSION_NUMBER_CONFLICT" 